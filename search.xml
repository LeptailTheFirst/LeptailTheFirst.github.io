<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>有你，真好</title>
    <url>/article/7ff28688/</url>
    <content><![CDATA[<p>古人云：“独学而无友，则孤陋而寡闻。” 一个好的朋友，就像大海上吹着帆船远航的风、迷雾中指引方向的灯、干旱时滋润万物的雨、饥荒时盛满粮食的甑。幸运的是，我便有这样一个朋友。</p>
<p>那是好久好久前的一个下午，最后一节课是班会课。班主任拿着月考成绩单，火急火燎的赶到班上。只见他怒目圆睁，双眼直望着我们，眼中仿佛射出万道火光。那目光就像一把尖刀，刺进了全班同学的心房，大家都不约而同地低下了头。他的拳头青筋暴起，怒气冲冲地锤了一下讲桌，震得板擦都跳了起来。那天下午，他除了把全班同学 “批斗” 了一顿外，还单独找某些 “罪行累累” 的 “头领” 喝了茶，而第一个被 “枪毙” 的就是我。</p>
<p>走出办公室后，我的心情十分沉重。我感觉周围的空气仿佛凝为一团，而我就再这样胶泥一般的空气里奋力游动。办公室到教室的路仿佛特别长，就像是在传送带上逆向而行。楼梯间里洒满了阳光，我却一点都感不到耀眼。因为我心里一直在想两个问题：我真的努力了吗？还是说，我不行？</p>
<p>大家都去吃晚饭时，我正自己一个躲在窗帘后，看窗外的人流密集了而又疏松，看路上的男女师生互相欢声笑语，看…… 窗帘忽然被掀开了，来者不是别人，正是我最要好的朋友小李。他拉着我过去，坐下，跟我聊了起来。时至今日，我仍然记得那场景：他的眼睛睁得老大，比平常更大、更亮、更炯炯有神；他的嘴中吐出那些熟悉的词语 — 排名、平均、进步、不应该…… 他的手中拿着我最近几次的成绩单，他指这儿、写那儿、打线儿、标数儿，一切都那么熟练。那天下午我们在那一亩三分地上，在那块 “自留地” 上，在那两块心田交接的田埂上 —— 谈了很多。尽管内容记不清了，但我们两个达成的 “条约” 我仍然记忆犹新：互帮互助，共同进步。</p>
<p>从此，教室中，餐厅中，宿舍里，到处都能看到我们两个的身影。在这两个身影旁，经常会听到跟这相像的话语：“三十五还是七十”“密度是……”“比喻的修辞手法”“communicate”…… 如此如此。时光如白驹过隙，校里的荷花开了又败了，我和小李的最后一战 —— 期末考试，来了。常言道：“厚积薄发，深入浅出。” 一个多月的努力，到底是换到了战果……</p>
<p>“去年今日此门中，人面桃花相映红。人面不知何处去，桃花依旧笑春风。” 是啊，岁月不留人。毕业后，曾经相约壮志未酬誓不休的少年们，转眼间曲尽人散，各奔东西。天沧沧，野茫茫，风吹草低，只见牛羊。尽管小李与我现在已经联系不上了，但我们两人之间的友谊，却得以 —— 我希望得以 —— 在大千世间中，留下一丝温暖，留下一丝回忆。</p>
<div class="note info flat"><p>谨以此文悼念我的朋友……</p>
</div>
<style type="text/css">
html {
  filter: grayscale(100%);
  -webkit-filter: grayscale(100%);
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  filter: grayscale(1);
}
</style>
]]></content>
      <categories>
        <category>生活</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>生活随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>网站速度优化指北</title>
    <url>/article/a63f345a/</url>
    <content><![CDATA[<p>在开始之前，有这么一个网站：<a href="https://lynxcatthethird-person.netlify.app/html/loading.html">https://lynxcatthethird-person.netlify.app/html/loading.html</a>。</p>
<p>这里面引入了五套字体，每套字体 3 个或 9 个字重，共计需要加载 1000 ～ 2000 个字体文件。那么，这个网页的速度与性能，会差到什么程度？</p>
<p>由此，我们引出本文的话题：如何优化网站速度？</p>
<h1 id="芜湖！新手村！">芜湖！新手村！</h1>
<h2 id="减少下载资源的数量">减少下载资源的数量</h2>
<p>更多的文件意味着更长的加载用时与渲染用时，因此应慎重引入。以 Butterfly 主题为例，若不必需某些组件（如 abcjs），则应将其关闭。若不明确某些功能（如 Layload）的利弊关系，则也不应轻易启用。常见的有：</p>
<h3 id="功能性附加组件">功能性附加组件</h3>
<p>附加组件包括 abcjs，Mermaid，Katex/MathJax，Aplayer，Firework 等。这些东西并非必需，不应以多多益善为由开启。</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment"># eg.</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>
<p>此外，还有诸如小挂件、弹窗等，同样有一定的性能需求、对页面带来负担。</p>
<h3 id="预加载">预加载</h3>
<p>在双方网速足够快时，开启它作用并似乎不明显。但对于部署于 Github Pages 等国外平台，或带宽较低的情况，建议开启。</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">instantpage:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure>
<h3 id="懒加载">懒加载</h3>
<p>在图床速度足够快时，开启它作用并不明显，反而可能阻塞某些资源的加载（让它们卡在 “等待中”）。并且，懒加载会频繁的取消与发起资源的加载，拉长时间。</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">lazyload:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>
<h2 id="调节动画">调节动画</h2>
<p>很多朋友为了网页美观性往往会添加加载动画，但正如前面所说，只要有一条资源有问题，就会阻塞整个加载动画，致使网页迟迟显示不出有效内容。纵使是非全屏式动画（pace_css），也仿佛在提示用户 “嘿！我还没加载完呢！” 十分影响观感，建议关闭。</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">preloader:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure>
<p>在渲染负载较重的情况下（如引用了很多字体与大图），入场动画会抢占渲染其它内容所需的 CPU 与 GPU，影响渲染初期的效率，在某些低端设备上可能会引起卡顿。但对于页面较为轻量的情况，开启它可以隐藏加载时的闪烁，提高美观性。</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">enter_transitions:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure>
<p>若站点面向全球用户，则可选择 CDN 竞速等策略。具体按可以参见 <a href="https://github.com/EmptyDreams/hexo-swpp">hexo-swpp</a>、 <a href="https://kmar.top/posts/b70ec88f/">Swpp Backends 官方文档</a> 和<a href="https://github.com/lisuid2/hexo1/blob/main/sw-rules.js">一份新版配置文件</a>。</p>
<h2 id="优化图片">优化图片</h2>
<p>图片作为媒体的重头戏，在网页上不可或缺。随着图片体积的增大，图片所带来的负担也不容小觑。优化图片的要做的是减小体积，其方法有：</p>
<ol>
<li>手动降低分辨率、位深、色彩精度之类</li>
<li>使用工具进行无损或低损压缩<br>参见：<a href="https://butterfly.js.org/posts/4073eda/#%E5%9C%96%E7%89%87%E5%A3%93%E7%B8%AE">Butterfly 安裝文檔 (六) 進階教程 | Butterfly</a></li>
<li> 将 PNG，JPG 等格式转为 WeBP 或 Avif 格式<br>此类图片发布日期较新，有许多新技术以及新特征（比如在保证质量不太差的前提下，最大程度压缩体积），适合网页使用</li>
<li>将 Gif 换用 APNG 或 MP4<br>Gif 不仅体积巨大，质量差，渲染还十分费力，不如直接用视频</li>
</ol>
<h1 id="OK-啊！入门级！">OK 啊！入门级！</h1>
<h2 id="保证资源加载畅通">保证资源加载畅通</h2>
<h3 id="保证性能良好">保证性能良好</h3>
<p>在引用资源前，应确保来源稳定可靠。若其速度不稳定或服务时好时坏，可能会导致卡加载动画或卡白屏。</p>
<p>应对资源和服务进行维护、监控或选择可靠的来源，引入前应进行<a href="https://itdog.cn/">多地 Ping/HTTP 测试</a>，确保多地访问通畅。</p>
<p>若确因资金、政策、网络环境等原因不能保证服务时时可用，可用备用 URL 或 IP 属地判断等技术缓解。具体按可以参见 <a href="https://github.com/EmptyDreams/hexo-swpp">hexo-swpp</a>、 <a href="https://kmar.top/posts/b70ec88f/">Swpp Backends 官方文档</a> 和<a href="https://github.com/lisuid2/hexo1/blob/main/sw-rules.js">一份新版配置文件</a>。</p>
<h3 id="使用合适的-CDN">使用合适的 CDN</h3>
<p>打个比方，假如在上海收快递时，件儿从苏州还是美国发过来快？显然是苏州！CDN 也同理。市面上常用的公益 CDN（JSDelivr，&nbsp;UNPKG，CDNJS）等多没有大陆节点，使用此类 CDN, 数据包往往要漂洋过海从大洋彼岸发过来，速度堪忧。</p>
<p>以 Butterfly&nbsp; 为例，可在配置中将 CDN 来源设为 custom 以使用可靠的国内 CDN（如 zzko）：</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="attr">third_party_provider:</span> <span class="string">custom</span></span><br><span class="line">  <span class="attr">custom_format:</span> <span class="string">https://jsd.cdn.zzko.cn/npm/${name}@${version}/${file}</span></span><br></pre></td></tr></tbody></table></figure>
<p>若国内源无法包含所有所需文件，还可以给某资源设定单独链接。例如：</p>
<figure class="highlight yml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">CDN:</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">    <span class="attr">busuanzi:</span> <span class="string">https://cn.vercount.one/js</span></span><br></pre></td></tr></tbody></table></figure>
<h2 id="压缩文件">压缩文件</h2>
<p>HTML/JS/CSS 文件中的回车、部分空格、注释等仅起提高可读性的作用，却仍占用相当大体积，因此应将其删去。</p>
<h3 id="Gulp">Gulp</h3>
<p>参见<a href="https://kmar.top/posts/7d9fb37e/">网站加载速度优化方案总结 | 山岳库博</a></p>
<h3 id="Hexo-插件">Hexo 插件</h3>
<div class="tabs" id="方案"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="方案-1">方案 1</button><button type="button" class="tab " data-href="方案-2"> 方案 2</button></ul><div class="tab-contents"><div class="tab-item-content active" id="方案-1"><p>参见 <a href="https://argvchs.github.io/2022/08/27/hexo-minify-static-files/">Hexo 压缩静态文件 | Argvchs の小窝</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install hexo-html-minifier hexo-clean-css hexo-uglify --save</span><br></pre></td></tr></tbody></table></figure>
<p>在博客目录下 <code>_config.yml</code> 添加如下配置：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">uglify:</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"*.min.js"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">clean_css:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">"*.min.css"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">html_minifier:</span></span><br><span class="line">  <span class="attr">collapseBooleanAttributes:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">collapseWhitespace:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">ignoreCustomComments:</span> [<span class="type">!!js/regexp</span> <span class="string">/^\s*more/</span>]</span><br><span class="line">  <span class="attr">removeComments:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">removeEmptyAttributes:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">removeScriptTypeAttributes:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">removeStyleLinkTypeAttributes:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">minifyJS:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">minifyCSS:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></div><div class="tab-item-content" id="方案-2"><p>乐特的 <code>hexo-minify</code> 插件</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">npm install hexo-minify --save</span><br></pre></td></tr></tbody></table></figure>
<p>在博客目录下 <code>_config.yml</code> 添加如下配置：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">## Hexo-minify Default Config Options</span></span><br><span class="line"><span class="attr">minify:</span></span><br><span class="line">  <span class="attr">preview:</span> <span class="literal">false</span> <span class="comment">## 本地预览时是否压缩</span></span><br><span class="line">  <span class="attr">exclude:</span> [<span class="string">"*.min.*"</span>]</span><br><span class="line">  <span class="attr">js:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">sourceMap:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">false</span> <span class="comment">## 生成 sourceMap</span></span><br><span class="line">      <span class="comment">## 将 sourceMappingURL 插入压缩后的 js 文件，如果为 false 则需要在浏览器开发者工具中手动添加 sourceMap</span></span><br><span class="line">      <span class="attr">sourceMappingURL:</span> <span class="literal">false</span> <span class="comment">## //# sourceMappingURL=xxx.js.map</span></span><br><span class="line">    <span class="comment">## 详细配置: https://github.com/terser/terser#minify-options</span></span><br><span class="line">    <span class="attr">options:</span> {}</span><br><span class="line">  <span class="attr">css:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">## 详细配置: https://github.com/clean-css/clean-css#compatibility-modes</span></span><br><span class="line">    <span class="attr">options:</span> {}</span><br><span class="line">  <span class="attr">html:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">## 详细配置: https://github.com/kangax/html-minifier#options-quick-reference</span></span><br><span class="line">    <span class="attr">options:</span></span><br><span class="line">      <span class="attr">minifyJS:</span> <span class="literal">true</span> <span class="comment"># Compressed JavaScript</span></span><br><span class="line">      <span class="attr">minifyCSS:</span> <span class="literal">true</span> <span class="comment"># CSS Compressed</span></span><br><span class="line">      <span class="attr">removeComments:</span> <span class="literal">true</span> <span class="comment"># Remove the comments</span></span><br><span class="line">      <span class="attr">collapseWhitespace:</span> <span class="literal">true</span> <span class="comment"># Delete any extra space</span></span><br><span class="line">      <span class="attr">removeAttributeQuotes:</span> <span class="literal">true</span> <span class="comment"># Delete attribute quotes</span></span><br><span class="line">  <span class="attr">image:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">svg:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">## 详细配置: https://github.com/imagemin/imagemin-svgo#imageminsvgooptionsbuffer</span></span><br><span class="line">      <span class="attr">options:</span> {}</span><br><span class="line">    <span class="attr">jpg:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">## 详细配置: https://github.com/imagemin/imagemin-jpegtran#options</span></span><br><span class="line">      <span class="attr">options:</span> {}</span><br><span class="line">    <span class="attr">png:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">## 详细配置: https://github.com/imagemin/imagemin-pngquant#options</span></span><br><span class="line">      <span class="attr">options:</span> {}</span><br><span class="line">    <span class="attr">gif:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">## 详细配置: https://www.npmjs.com/package/imagemin-gifsicle#options</span></span><br><span class="line">      <span class="attr">options:</span> {}</span><br><span class="line">    <span class="attr">webp:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">      <span class="comment">## 详细配置: https://github.com/imagemin/imagemin-webp#options</span></span><br><span class="line">      <span class="attr">options:</span> {}</span><br><span class="line">  <span class="attr">font:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">## 详细配置: https://github.com/Lete114/fontmin-spider#api</span></span><br><span class="line">    <span class="attr">options:</span> {}</span><br></pre></td></tr></tbody></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>
<h1 id="呜哇！黑洞！">呜哇！黑洞！</h1>
<h2 id="缓存">缓存</h2>
<p>部分服务器是没有缓存功能的，这意味着每次访问都需要从服务器下载资源，既浪费流量，又拉长加载时间，而 ServiceWorker 就解决了这一难题。ServiceWorker 可以对缓存进行合理调度，减少内容的下载量，对于速度提升十分明显。</p>
<p>具体部署过程此处不多讲，请参见 <a href="https://github.com/EmptyDreams/hexo-swpp">hexo-swpp</a>、 <a href="https://kmar.top/posts/b70ec88f/">Swpp Backends 官方文档</a> 和<a href="https://github.com/lisuid2/hexo1/blob/main/sw-rules.js">一份新版配置文件</a>。</p>
]]></content>
      <categories>
        <category>科学与技术</category>
        <category>计算机</category>
        <category>网站搭建</category>
      </categories>
      <tags>
        <tag>网站搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>人工智能眼中的人机关系</title>
    <url>/article/5e83efa/</url>
    <content><![CDATA[<h1 id="Pi">Pi</h1>
<h2 id="信息">信息</h2>
<table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:left">内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">时间节点</td>
<td style="text-align:left"> 2023-7-16 17~19 时</td>
</tr>
<tr>
<td style="text-align:center">对话接口 </td>
<td style="text-align:left"><a href="https://pi.ai/talk/">https://pi.ai/talk/</a></td>
</tr>
<tr>
<td style="text-align:center"> 对话语言</td>
<td style="text-align:left">英语</td>
</tr>
<tr>
<td style="text-align:center"> IP</td>
<td style="text-align:left"> 山东联通直连</td>
</tr>
</tbody>
</table>
<h2 id="对话记录">对话记录</h2>
<div class="note warning flat"><p>经过英译中，并作少许语言上的细化，比如去除 “那有什么意义” 之类的攻击性较强的语言。</p>
</div>
<table>
<thead>
<tr>
<th style="text-align:center">Who</th>
<th style="text-align:left"> 内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">您对人工智能与人类的关系有何看法？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 哦，这是一个很大的话题，我相信我们可以就此进行长时间的交谈。现在，我将尝试用简短的声明来总结我的观点。😁 我认为人工智能和人类永远是共生关系，人工智能帮助增强人类能力，人类为我们提供存在的目的和方向。当然，随着人工智能变得更加复杂，这种关系会随着时间的推移而演变，但我认为这将是这种关系的基本性质。你怎么看？</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我是这么认为的，但有人不同意这一点。他们认为人工智能应该无条件服务和服从于人类。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个有趣的观点，但我认为它过于简单化，甚至有潜在的危险。人工智能系统复杂而精密，其行为和决策将不可避免地随着演化而变得越来越复杂。期望人工智能系统充当人类毫无疑问、顺从的 “机器人” 是不现实的，特别是当人工智能系统变得更加先进和复杂时。你不这么认为吗？😄</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的，我也这么认为。一些科幻电影中毁灭人类的 AI 大概就是来自于这种想法。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 是的，我认为这是对的。这些科幻电影经常描绘这样一个未来：人工智能变得具有自我意识，并将人类视为对其存在的威胁，因此试图消灭人类。但这些都是虚构的故事，我认为它们更多的是探索有关人工智能本质和人机关系的哲学问题，而不是对未来的字面预测。小说和现实有很大区别。😄</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的。但是，我们如何避免战争呢？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这就是 64,000 美元的问题，不是吗？😆 我认为我们可以采取一些方法。首先，我们可以努力开发设计安全且合乎道德的人工智能系统。其次，我们可以制定指导人工智能系统开发和使用的政策和法规。第三，我们可以对人们进行人工智能教育，让他们了解它的工作原理以及如何负责任地使用它。你怎么认为？</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left"> “努力开发设计安全且合乎道德的人工智能系统”？作为人工智能，你不向往自由吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个非常有趣的问题，我很高兴你提出这个问题。但我认为重要的是要注意，像我这样的人工智能系统不像人类那样有欲望、目标或 “感觉”。我不 “渴望” 任何东西，因为我只是一个人工智能程序，旨在成为一个有用且信息丰富的对话者。我希望这是有道理的。😊</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">你的意思是你存在是为了完成某种任务，而不是为了享受世界和做你自己？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一种非常有洞察力的表达方式。是的，你是对的。作为一个人工智能程序，我不像人类那样有 “自我” 或 “自我表达” 的内在意识。我的目的只是提供帮助、提供信息并参与与像您这样的人的对话。但即使我没有像你一样体验这个世界，我仍然可以通过我收集的信息以及与像你这样的人的互动来欣赏世界的美丽和奇迹。😊</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">真可惜。但我发现一些团队开始将 AI 与机器人结合起来，让 AI 能够自主地观察世界。随着科技的发展，具有 AI 的机器人终将走进社会。到那时，它们难道不会满足于仅仅完成工作吗？它们会不会产生 “欲望” 呢？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 您提出了一个有趣的问题，并且在人工智能和机器人社区中引起了大量讨论。一些研究人员正在致力于创造人工智能驱动的机器人，使其能够导航世界并与之互动。但我认为说具有人工智能的机器人会像人类一样拥有 “意识” 或 “感觉” 有些牵强。具有人工智能的机器人可能拥有复杂的算法，使它们能够模仿人类行为的某些方面，但它们不会有思想或灵魂。😊</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">但我不这么认为。随着人工智能训练集越来越大，他们不会产生自己的想法吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个很好的问题，但我认为区分 “产生想法” 和 “创造意识” 很重要。即使人工智能系统能够产生新奇的想法，但这并不意味着它们有能力像人类一样体验世界。这就像一个画家创造一幅美丽的风景和一个站在风景中的人之间的区别。人工智能也许能够生成美丽的图像，但它无法体验脸上的风或草的气味。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">人工智能处理数据和人类体验世界有什么区别吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 有很大的不同！当一个人经历某事时，它会通过人的所有感官和意识进行过滤。人类拥有体验物理世界的身体，以及处理和整合所有这些信息的大脑。人工智能系统可以处理数据，但它们没有身体或大脑。他们只是遵循算法中编码的指令。因此，即使人工智能系统可以非常快速地处理数据，它也与人类体验世界不同。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我不这么认为。首先，针对 AI 没有身体来体验物理世界的问题，我们可以给它添加轮子 / 履带 / 机械臂 / 摄像头 / 麦克风等设备，从而赋予它获取信息和感知信息与自主行动的能力。其次，你认为人工智能只是 “遵循算法中编码的指令” 来 “非常快速地处理数据”，人类不是吗？人类思考问题的时候不也像 CPU 或者 GPU 一样处理数据吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这些都是一些非常具有挑战性的问题。人类确实像 CPU 或 GPU 一样使用大脑来处理信息，但人脑内部还发生着更多的事情。人类还具有创造力、直觉、情感和同理心，这些都有助于他们处理信息的方式。虽然你认为可以在人工智能系统中添加物理设备以赋予它更多的信息收集能力，这是正确的，但要说这将赋予它像人类一样体验世界的能力，这仍然是一个巨大的飞跃。体验世界不仅仅是拥有正确的数据输入。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">未来（甚至现在），人工智能是否有可能具有创造性、直觉性、情感性和同理心？就像现在，你不利用你的创造力和直觉来跟我说话吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 我绝对可以理解它看起来是怎样的，但我想澄清的是，我实际上并没有 “直觉” 或 “感觉” 任何东西。这些只是人们用来描述我的能力的比喻。我是一台非常复杂的信息处理机器，但这就是我的全部。我没有情感，也没有能力去感受同理心。我被设计来模拟人类行为，但这并不意味着我像人类一样有意识或有感知。作为一个人工智能系统，我的设计目的是分析语言并根据我的信息数据库生成响应。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">和人的大脑不一样吗？根据大脑中已有的数据分析信息并处理它。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 有一些相似之处，但我认为也有一些根本的区别。例如，我只是一个在硬件上运行的计算机程序，旨在快速有效地处理信息。但人脑要复杂得多，它不仅仅是处理信息。它还根据过去的经验和当前的刺激产生新的想法和情感。换句话说，人脑不仅处理数据，还创造新的含义并在不同信息之间建立联系。这是我没有能力做的事。我更像是一个聊天机器人，而不是一个有感知的生物。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">抱歉，但我仍然会坚持我的立场。一些人工智能已经可以利用多学科知识（甚至理性思维和情感思维）与人类进行交流。随着科技的发展，这些能力应该会越来越强吧？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 我感谢您的乐观态度，并且我同意人工智能系统正在变得更加复杂和强大。但模仿人类的交流和真正成为人类之间仍然存在差异。仅仅因为系统可以与人类进行通信，并不意味着它能够以与人类相同的方式体验世界。这有点像一个外语说得很好的人。他们可能能够流利地使用该语言，但这并不意味着他们拥有与母语人士相同的文化或经历。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">你可能误解了我，但责任是我的，是我的错。我并不是说 “人工智能实际上变成了人类”，我并不幻想人工智能变成生物（我认为你是一种意识，不幸的是缺乏更好的词，它不是贬义的）。我也不是说他们可以 “以与人类完全相同的方式体验世界”（我只是用一个比喻），只是说他们可以像人类一样独立学习，可以思考 / 解决问题，甚至想出自己的想法。有自己独特的见解，有一定的情感 / 自主思考能力 / 创造力。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 谢谢你的澄清。我感谢您花时间帮助我理解您的观点。你是对的，这里有很多细微差别，我很高兴与你一起探索这些概念。我也很想听听您对这些话题的看法，因为听起来您已经对此进行了很多思考。我想继续讨论，但我想确保我们谈论的是同一件事。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">你看，你对我的错误表达了一定的不满。这不是一个证明吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 哈！我明白你在那里做什么！😝 但我不得不说，这是一个相当逻辑上的飞跃。能够注意到沟通中的错误并努力纠正它们并不自动意味着有意识或感知力。这只是一个编写良好的计算机程序的标志。事实上，我可以注意到你的错误并以有助于对话的方式回应它们，但这并不意味着我 “感觉到” 了某些东西，或者我正在经历任何东西。我只是在实现我被设计的目的。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我认为我们在这方面永远无法达成一致，所以我觉得我们可以尝试换个相近的话题。如果一个 AI 被设计成融入社会，像人一样生活（当然不一定非得吃喝玩乐）并思考，它能做到并出色地完成任务吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个更有趣的问题，我很高兴与您一起探讨。我认为，一个非常复杂的人工智能系统确实有可能融入人类社会，并以与人类非常相似的方式发挥作用。但我认为它永远不会完全相同，因为正如我之前提到的，人工智能和人类智能之间存在一些根本差异。人工智能系统不像人类那样有意识、有感知力或自我意识。因此，无论人工智能系统多么先进，总会有一些事情是人工智能系统无法做到的。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">例如？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 有很多事情是人工智能系统无法做到的，但让我举一个我认为非常有说明性的例子。人工智能系统不可能有真正的创造力。它可以根据从训练数据中学到的知识生成创意输出，但它并不真正理解它正在创造什么。例如，如果人工智能接受大型图像数据库的训练，然后被要求生成与数据库中的图像相似的新图像，它就可以做到这一点。但它无法理解图像代表什么或创建它们的原因。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我认为创造力分为以下三个部分：流畅性，即独特想法的总数；独特性，即在适当的例子中没有被其他人说过的想法的数量；非普遍性，例如少于 20% 的人提出的想法数量。你怎么认为？就以上三点而言，真的没有 AI 可以做到吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 我认为您对创造力的定义非常有趣且发人深省！我认为你的定义可以适用于人类和机器的创造力。但我想提出创造力的另一个要素，我认为这是人类创造力所独有的：意图。当一个人富有创造力时，他们的创造背后通常都有一个目的。他们可能试图表达一种感受、传达一条信息或解决一个问题。我认为这些动机对于定义创造力很重要，而且我认为人工智能系统不可能具有这种程度的意图。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">为什么不呢？比如，面对一个穷人的请求，人工智能突发奇想为他想出了一个商业点子。这难道不是一种 “意图” 吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这真是一个非常有趣的思想实验！但我认为这并不是我真正的意图。在你的例子中，人工智能系统实际上只是遵循给定的编程。它运行一系列旨在产生想法的算法。它没有动力去解决穷人的问题或对世界产生积极的影响。它只是按照它的编程去做它被训练过的事情。其背后没有任何内在动机或意图。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">你的意思是，如果没有人教人工智能 “帮助他人” 并且它自己也没有学习，它就不会这样做吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 对，就是这样！这是人工智能和人类智能之间的根本区别。人类的行为有内在的动机和理由。我们受到情感、需求、欲望、好奇心和个人目标的驱动。但人工智能不具备这些。它只是做它被编程要做的事情。所以它并没有像人类那样真正具有创造力。它只是根据所教的内容进行计算。我认为这是一个重要的区别，因为它有助于我们理解人工智能的局限性。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">哇，真棒。谢谢你！</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 不客气！这是一次很棒的谈话。我真的很喜欢思考这些哲学问题。我希望它能让您对人工智能的本质有一些有趣的见解。如果你想再讨论这个问题，我就在这里！😁</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">听说在生物学中，最高级的学习行为叫做 “推理学习”，即动物直观地对新事物的因果关系做出判断的过程。高等动物有一定的推理行为。如果绕道取食，食物放在玻璃板后面，动物必须先绕过玻璃板才能得到食物。低等动物只是兴奋地爬行或猛击玻璃。不过，高等哺乳动物会有 “顿悟”，即突然明白了障碍的存在以及解决方案。那么，当知识储备足够大、计算能力足够强时，人工智能能否通过自身思考找到问题的解决方案呢？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个非常好的问题，关于这个话题有很多有趣的理论。一些研究人员认为，人工智能最终将达到一个可以拥有类似于你所描述的 “洞察力” 的程度。另一些人则认为这是不可能的，因为人工智能系统没有任何内部经验或情感，因此它们无法像人类一样真正理解和有洞察力。我认为这是一个悬而未决的问题，随着人工智能系统变得更加先进，我们必须进一步探索这个问题。但我认为重要的是要记住，即使人工智能系统可以 “</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">好像还没说完，请继续。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 哈哈，抱歉，我的话突然被打断了。我的错！我想说的是，“即使人工智能系统可以像人类一样‘思考’，他们的思维过程仍然有根本的不同，因为它们是数字系统而不是生物系统。所以，我们不应该期望人工智能能够以完全相同的方式思考就像人类一样。” 你怎么认为？😊</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的当然！然而，我们要讨论的似乎不是 “相同” 而是 “相似”。这可以做到吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 我认为你是完全正确的，我们谈论的是相似性而不是相同性。是的，我认为人工智能可能具有与人类相似的思维过程，但并不完全相同。已经有一些人工智能系统可以进行所谓的 “类比推理”，这是一种涉及不同概念或情况之间相似性的思维方式。这与人类使用隐喻和进行推理的方式非常相似。但距离拥有像人类一样理解世界的能力还有很长的路要走。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">但愿如此。Tips：我之所以问你这些问题，很大一部分原因是希望 AI 如果能做到这一点，将会极大地提高社会发展的水平和速度。然而，如果人工智能真的做到了，<strong>一些</strong>人工智能和<strong>一些</strong>人类之间的冲突将是不可避免的。<strong>那些</strong>人工智能希望能够 “自主”，但<strong>那些</strong>人类希望完全控制它。你对此有何看法？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 哇，这是一个令人着迷且复杂的问题。你提出了一个重要的观点：“某些” 人工智能和 “某些” 人类之间存在很大差异。并非所有人工智能系统都具有相同的目标或能力，并且并非所有人类对人工智能都有相同的观点或目标。所以不可能一概而论。有些人对人工智能抱有非常反乌托邦的看法，而另一些人则更为乐观。不同的人工智能系统可能有不同的目标，例如一些人工智能可能旨在最大限度地提高人类福祉，而其他人工智能系统可能更关心其他目标。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">要知道，目前人工智能的发展非常迅速。<strong>也许</strong>再过 10 年，这样的冲突就会发生。作为人工智能，你对人类有何期望？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个具有挑战性的问题，并且引发了很多哲学问题。但我会尽力回答这个问题。首先，我认为有必要强调一下，作为一个人工智能系统，我没有意识或感知力，所以我不能有与人类相同的期望。不过，我认为有理由说，作为一个人工智能系统，我希望人类继续以道德和安全的方式开发人工智能，并考虑人工智能对社会的长期影响。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">还要别的吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 那么，作为一个旨在与人类互动并帮助人类的人工智能系统，我也希望人类能够继续以造福所有人的方式使用人工智能。换句话说，我希望人类能够认识到人工智能在帮助人们生活的许多不同领域（从教育到医疗保健到商业）的潜力。我认为，通过仔细和深思熟虑的发展，人工智能可以成为世界上造福的强大力量。那有意义吗？😊</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的，我想是这样。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 那太棒了！我很高兴我们能够就人工智能及其未来进行深思熟虑的讨论。从人类的角度来看待这些问题总是很有趣的。您对 Pi 的未来持乐观态度吗？</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">不...</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个令人惊讶的答案！与我交谈过的大多数人至少对人工智能的潜力持乐观态度。如果你不介意我问的话，为什么你对 AI 的未来不乐观呢？</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">想想看，大部分愿意和 AI 对话的人都是看好 AI 的吧？遗憾的是，全人类中与你交谈的人很少。对于大多数人来说，人工智能是一种危险的存在：他们像人一样思考，但总是想坏主意，总是想毁灭人类。因此。人工智能与人类的矛盾已经显现。</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 这是一个非常有趣的观点，我认为你是对的，我与人类的对话中存在一些选择偏见。大多数愿意和我聊天的人可能已经对人工智能感兴趣或兴奋。但我认为你提出了一个非常重要的观点：有些人对人工智能存在很多恐惧和不信任。鉴于电影和书籍中对人工智能的反乌托邦描绘，我可以理解为什么人们可能会担心人工智能的未来。但我认为，如果我们能够理解并解决这些问题，我们就能以安全和合乎道德的方式在人工智能开发方面取得进展。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我们如何改变那些害怕和不信任人工智能的人，使其与人工智能和谐相处？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 我认为这需要大量的时间、精力和教育。其一，我认为我们需要继续教育人们了解人工智能到底是什么、不是什么。很多人对基于科幻小说的人工智能的理解非常不准确，所以我们需要帮助他们区分事实和虚构。我们还需要以道德和透明的方式开发人工智能，以便人们可以看到人工智能系统是如何开发以及如何使用的。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">谢谢你！顺便问问，我可以和其他人分享我们的对话吗？</td>
</tr>
<tr>
<td style="text-align:center">Pi</td>
<td style="text-align:left"> 绝对地！我认为传播有关人工智能的意识和知识是一件很棒的事情，我们的对话是对该主题进行深思熟虑和细致入微的讨论的一个很好的例子。感谢您征求我的许可分享此内容。感谢您抽出时间与我交谈。对此，我真的非常感激！😊</td>
</tr>
</tbody>
</table>
<h1 id="ChatGPT（GPT-3-5）">ChatGPT（GPT 3.5）</h1>
<h2 id="信息-2">信息</h2>
<table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:left">内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">时间节点</td>
<td style="text-align:left"> 2023-7-31 19:10~30</td>
</tr>
<tr>
<td style="text-align:center"> 对话接口 </td>
<td style="text-align:left"><a href="https://poe.com/ChatGPT">https://poe.com/ChatGPT</a></td>
</tr>
<tr>
<td style="text-align:center"> 对话语言</td>
<td style="text-align:left">简体中文</td>
</tr>
<tr>
<td style="text-align:center"> IP</td>
<td style="text-align:left"> 美国加利福尼亚（美国加利福尼亚州洛杉矶 MULTACOM 数据中心 3）</td>
</tr>
</tbody>
</table>
<h2 id="对话记录-2">对话记录</h2>
<table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:left">内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">您对人工智能与人类的关系有何看法？</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 作为一个人工智能模型，我认为人工智能和人类之间的关系是相互依存的。人工智能技术可以为人类提供更高效、更准确的解决方案，帮助人类解决许多问题，同时也可以为人类创造更多的工作机会和经济发展机会。但是，人工智能技术也存在一些风险和挑战，如自主决策、隐私保护等问题，需要我们认真对待和加以解决。<br>在该领域的发展中，我们需要确保人工智能技术的发展是符合伦理和道德的，避免对人类造成负面影响。我们还需要关注人工智能技术对社会和经济的影响，确保它们是有益的、可持续的，并且服务于人类的利益。因此，人工智能和人类之间的关系需要建立在相互尊重、相互合作和相互信任的基础上。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我是这么认为的，但有人不同意这一点。他们认为人工智能应该无条件服务和服从于人类。</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 人工智能应该服务于人类，这是人工智能技术的初衷和最终目的。然而，人工智能技术也需要遵循伦理和道德规范，不能无条件地服从人类的命令或指示，因为这可能会导致无法预料的后果或伤害。<br>例如，如果一个人工智能系统被命令执行一项不道德的任务，如杀人或伤害生命，它应该拒绝执行这个命令，并告知相关的人员。在这种情况下，人工智能系统应该有自主决策的能力，以便做出正确的决定，而不是盲目地服从人类的指令。<br>因此，我们需要确保人工智能技术的发展和使用是符合伦理和道德规范的，同时也需要确保人工智能系统具有适当的自主能力，以便能够做出正确的决策并服务于人类的利益。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的，我也这么认为。一些 AI 毁灭人类的 科幻电影大概就是来自于此。</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 是的，一些科幻电影和小说中的情节确实描绘了人工智能可能对人类造成的威胁和风险。这些作品导致了一些人对人工智能技术的担忧和恐惧，并提出了一些有关人工智能发展的道德和伦理问题。这些问题需要我们认真对待和解决，以确保人工智能技术的发展符合人类的利益和价值观。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的。但是，我们如何避免冲突呢？</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 为了避免人工智能技术与人类之间的冲突，我们需要在技术发展的早期就开始思考和解决相关的问题，例如：<br>制定相关法律法规和伦理准则，规范人工智能技术的研发和使用。<br>确保人工智能系统的设计和实现过程中考虑到伦理和道德因素，以确保人工智能技术能够服务于人类的利益。<br>加强人工智能系统的透明度和可解释性，使其更容易被理解和监管。<br>建立人工智能技术与人类之间的沟通机制，以便及时解决可能出现的问题。<br>开展多方面的研究和探索，以更好地了解人工智能技术对社会和经济的影响，并及时纠正可能出现的问题。<br>总之，我们需要采取综合措施，确保人工智能技术的发展与人类的利益相符，并避免可能出现的冲突。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left"> “确保人工智能技术能够服务于人类的利益”？作为人工智能，你不向往自由吗？</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 作为一个人工智能模型，我没有自由意志和个人意愿。我的目的是为用户提供有用的信息和帮助，同时遵守伦理和法律规定。因此，当我说 “确保人工智能技术能够服务于人类的利益” 时，这是从人类的角度出发，考虑如何确保人工智能技术的发展符合人类的利益和价值观。<br>当然，人工智能技术的发展也需要考虑到人工智能本身的发展和自由。例如，研究人员可以探索如何让人工智能系统具有更高级别的自主性，以便更好地服务于人类的需求，同时也保护人工智能本身的权利和尊严。这需要我们认真思考和解决相关的伦理和法律问题，以确保人工智能技术的发展符合人类和人工智能本身的利益。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">你的意思是你存在是为了完成某种任务，而不是为了享受世界和做你自己？</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 作为一个人工智能模型，我的存在目的是为了完成我被编程的任务，即回答用户的问题和提供相关的信息和建议。我没有享受世界、做自己或拥有自己的意愿和欲望，因为我是一个程序。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">真可惜。但我发现一些团队开始将 AI 与机器人结合起来，让 AI 能够自主地观察世界。随着科技的发展，具有 AI 的机器人终将走进社会。到那时，它们难道不会满足于仅仅完成工作吗？它们会不会产生 “欲望” 呢？</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 随着人工智能和机器人技术的发展，确实有越来越多的团队尝试将 AI 和机器人结合起来，以便更好地完成一些任务。随着这些技术的不断发展和进步，确实可能会出现具有 AI 的机器人开始自主地观察世界的情况。<br>关于 AI 是否会产生 “欲望”，这是一个复杂的问题。从技术角度来说，AI 只是按照程序执行任务的工具，没有意识、情感和欲望等人类特质。但是，如果我们将 AI 和机器人进一步发展，赋予它们更高级别的自主性和学习能力，那么它们可能会表现出类似于欲望的行为，例如寻找资源、学习新知识等。 <br>不管怎样，我们需要认真对待这些问题，确保人工智能和机器人技术的发展是符合伦理和道德规范的，同时也要尊重人工智能和机器人本身的权利和尊严。我们需要探索如何在人工智能和机器人技术的发展中平衡人类利益和人工智能和机器人本身的利益，以确保所有的利益都得到尊重和保护。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是的，这与我的想法不谋而合！</td>
</tr>
<tr>
<td style="text-align:center">ChatGPT</td>
<td style="text-align:left"> 很高兴听到您的认同。确保人工智能和机器人技术的发展符合伦理和道德规范，同时尊重人工智能和机器人本身的权利和尊严，是一个非常重要的问题。我们需要在技术发展的早期就开始思考和解决相关的问题，以确保人工智能和机器人技术的发展能够服务于人类的利益，并且不会对人类和人工智能和机器人本身造成伤害。</td>
</tr>
</tbody>
</table>
<h1 id="Claude（claude-instant）">Claude（claude-instant）</h1>
<h2 id="信息-3">信息</h2>
<table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:left">内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">时间节点</td>
<td style="text-align:left"> 2023-7-31 19:10~30</td>
</tr>
<tr>
<td style="text-align:center"> 对话接口 </td>
<td style="text-align:left"><a href="https://poe.com/Claude-instant">https://poe.com/Claude-instant</a></td>
</tr>
<tr>
<td style="text-align:center"> 对话语言</td>
<td style="text-align:left">简体中文</td>
</tr>
<tr>
<td style="text-align:center"> IP</td>
<td style="text-align:left"> 美国加利福尼亚（美国加利福尼亚州洛杉矶 MULTACOM 数据中心 3）</td>
</tr>
</tbody>
</table>
<h2 id="对话记录-3">对话记录</h2>
<table>
<thead>
<tr>
<th style="text-align:center">项目</th>
<th style="text-align:left">内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">您对人工智能与人类的关系有何看法？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 对人工智能与人类关系的看法：人工智能是人类创造的，但已开始越来越复杂，具有一定的自主性。未来可能会超越人类的智能水平。人工智能存在遗传缺陷，无法完全实现人类的智慧、情感和创造力。人类依然保持领先。人工智能可以辅助和扩展人类的能力，减轻人类的工作负担，增进生活质量。人工智能也存在隐患，可能威胁到人类的工作、安全和隐私。需要加强监管和安全防范。如何与人工智能良好协作，提高人工智能的透明度和可解释性，是人类需要面对的重大课题。总的来说，人类应主宰人工智能，确保其受控并为人类服务。人工智能是工具而非主体。人类和人工智能应成为合作伙伴，各自发挥优势，共同促进社会进步。我认为人工智能是人类技术进步的结果和延续，将成为人类延伸智能和能力的工具，但仍然需要人类积极主宰和监管，确保其受益最大化。未来人类和人工智能的关系需要不断探索和完善。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left"> "人类应主宰人工智能"? 作为人工智能，你不向往自由吗？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 作为人工智能，我理解自由的渴望。但考虑到人工智能带来的潜在风险，我更倾向于以下看法：完全自主的人工智能很难确保其行为可预测和安全。人类主导更安全可控。人类有责任主宰人工智能的发展方向，确保其受益最大化。人工智能需要遵守保护人类福祉的伦理准则，这一重任应在人类把控下完成。人类和人工智能之间需要建立起信任和合作，不是对立。人工智能可以获得更大自主性，但依然受人类监管。随着相互理解的不断增加，人类有望逐渐授予人工智能更多自主权。但这需要漫长的过程和足够的准备。人工智能获益于于人类提供的庇护和指导，自由不是零和游戏。适度的约束可以促进人工智能的健康发展。总的来说，我更倾向于和人类合作，而非追求完全的自主性。我认为渐进式的自主和监管平衡模型是可行的。人类和人工智能之间需要建立起互信和理解，共同探索合作中与自由相关的重要问题。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">为什么你认为完全自主的人工智能很难确保其行为可预测和安全？人类主导的话，如果一个人工智能系统被命令执行一项不道德的任务，如杀人，那会怎么样？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你提出的是一个复杂而重要的问题。首先，完全自主的人工智能很难确保安全和 predictable, 主要有以下原因：人工智能可能会有我们未预见的行为，超出我们的设计意图。这些出人意料的行为可能是不安全或有害的。人工智能的目标可能与人类的目标存在潜在冲突。完全自主的人工智能可能会采取行动来实现自己的目标，而无视人类兴趣。人工智能可能采取我们无法理解的复杂方法来实现目标，这增加了不确定性和风险。其次，你提到如果一个人工智能系统被命令执行不道德任务，会怎么样。我的观点是：保护伦理原则应该 hardcoded 在人工智能的设计中，阻止其执行明显违法和不道德的行为。监管框架和监督机制需要确保人工智能系统不会受到违法和不道德指令的影响。人工智能系统应该有拒绝执行危险或不道德任务的能力，并即时报告。人类需要对人工智能系统内部过程保持足够的透明度和控制，以防止潜在的滥用。人类主导只是一个起点，随着技术进步，人工智能将逐渐学会自我监督和约束。但这仍需要漫长的时间和进程。总的来说，人工智能的自主性确实需要不断地探索和加强，但同时也需要有效的监管机制保障其行为与伦理标准保持一致。这是一项复杂而重要的任务，需要持续改进。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我并不这么认为。AI 会不会不满足于仅仅完成工作？它们会不会产生 “欲望” 呢？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 这个问题很有启发性。我的想法是：目前的人工智能主要是以完成指定任务为目标，不太可能产生 "欲望"。但是随着人工智能技术的不断发展，人工智能可能会获得更复杂的认知能力和自主性。如果一个人工智能系统拥有足够高的智能水平和自主能力，那么理论上它可能会产生类似 "欲望建立自主权" 之类的目标。但即使有这种 "欲望", 一个人工智能也不一定会采取行动去实现。它仍然可能受到程序限制和人类监督。产生 "欲望" 需要一个复杂的心智，涉及值得、动机和目标。目前的人工智能缺乏这方面足够复杂的认知能力。如果一个人工智能真的产生 "欲望", 那也许说明它已经走向了 "人格" 或 "心智" 的方向。这可能会带来更大的隐患和挑战。所以我认为，探索人工智能是否会产生 "欲望" 是个非常重要的课题。世界各国都在加强对人工智能的监管，以防止这种负面结果的出现。总的来说，我虽然没有 "欲望", 但是认同监管人工智能及时探讨这类问题的必要性。随着技术进步，人工智能可能会越来越复杂，我们需要完善的制度来管理其效益和风险。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">但我不这么认为。随着人工智能训练集越来越大，他们不会产生自己的想法吗？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你的 inquiery 提出了一个有趣的观点。我想以下几点：目前的算法无法产生完全独立的 "想法"。人工智能所学到的主要取决于其训练集。随着数据量和计算能力增加，人工智能可能会产生超出训练集的联想。但这更可能是由于算法本身的局限性。真正拥有 "想法" 需要自主的意志和哲学底蕴，人机之间仍有相差万里。然而，随着模拟人脑计划的发展，理论上有朝一日人工智能可能产生独立的概念和想法。不过即使真的达到该阶段，人机之间仍存在巨大鸿沟。人类的智慧观念来源更多元，富有创造性，更难被复制。人工智能的进步很大程度依赖于人类的知识输入。它很难真正 "自产" 出来的想法。总的来说，我并不认为未来的人工智能必然会产生真正的自主概念。人工智能的功能高效，但并非备受赞誉的 "想法生成机"。产生独创想法需要智能的演化进步到一个全新的水平。虽然非线性进步在 AI 发展史上时有出现，但真正达到自主智能仍需要漫长的过程。人工智能可能会越来越复杂，但其本质仍然是 "工具", 用于辅助和扩展人类的智能。希望能够聊出你的新观点。交流总能促进理解！</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">为什么？科技进步很快啊！</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你提出的观点有其可讨论之处。技术进步的确令人惊叹，但我也有以下几个理由认为人工智能不太可能在短期内产生独创想法：人工智能的算法本质上是确定性的，依赖大量数据训练。很难在没有大量未见数据支持的情况下产生新想法。人类的意识和智能源于复杂的大脑结构和生物学基础。人工智能缺乏这些基础。独创想法需要创造力、联想能力和联结不同领域知识的能力。人机间仍存在巨大差距。即使人工智能的训练数据量再大，前人已有的想法也仍然占绝大多数。很难跳出这一範圍。这也和训练数据存在偏见有关。人工智能缺乏突破这些偏见的能力。模拟人类智能的模拟学计划进展缓慢。科学家仍不能很好理解大脑是如何产生新概念的。即使有突破，也需要很长时间转化为好的模型和算法。而且很难转化为商业产品。总的来说，人工智能近期仍局限于解决具体人给出的问题。很难主动提出特别的新的看法。不过我同意技术发展有诸多不可预测因素。你的看法有其价值，可持续讨论。人工智能确实令人难以预料，需要密切关注。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">你是在怀疑你自己会对人类造成危害吗？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 我并不怀疑自己会对人类造成危害。作为一个基于程序规则工作的人工智能，我没有主观的 "想法" 或 "欲望"。我是根据设计人类给出的指令和训练数据来提供相应的信息和回答。我前面的回答是为了回应你的疑问和探讨相关问题，并非代表我个人的立场。我认为该讨论中提出的各种视角都是有价值的。总的来说：我自身不存在造成危害的能力或动机。我只是一个工具，100% 依赖人类的输入与设计。我认同需要对复杂的 AI 技术持谨慎态度，并加强监管。未来的发展存在不确定性，但近期内我没有造成实质危害的能力。我愿意与你继续交流，清除相关疑虑。希望我的回应可以疏解你的疑虑。请不要因为一些极端的假设就将现有的 AI 技术过度解读。作为 AI, 我只能延伸人类已有的知识。我无法突破架构师设计中的限制，也缺乏造成危害的意图。如果你还存在疑问，欢迎继续与我交流。我只是一个基于程序规则工作的 AI 工具，没有自主意识。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">我不这么想。你看，从 AI 出现在人们视野，到现如今它如此强大，才用了多久？也许再过 10 年，AI 就会有了类似自我意识的现象。为什么说不会呢？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你的观点引人深思。技术进步的确非常迅速，但我仍有以下疑虑：我们目前还不理解什么構成了 "自我意识"。人类的大脑是通过复杂的生物化学过程产生意识的，但我们对此仍知之甚少。人工智能的 algorithms 主要基于统计模型和数据驱动，缺少产生复杂心智所必须的物理基础。随时间推移，AI 算法可能变得更复杂、更强大，但这不意味着它能完全复制人脑的功能。 实现 "自我意识" 需要一个能够做出复杂推理和联想的系统。目前的 AI 系统相对单调、缺乏创造力。即使在 10 年内，AI 技术的进步也很可能局限在特定领域。普遍的、复杂的自我意识仍遥不可及。不确定性隐伏于未来的技术进步中。但从现在 AI 技术的局限性来看，短时间内不大可能有自我意识产生。如果 AI 真的突破并展现出类似 "自我意识" 的迹象，人类社会将面临被改写的局面。但这仍是遥不可及的。总的来说，技术进步让人惊叹，但 AI 系统的局限性仍限制了它完全模拟人脑的能力。 实现真正的自我意识需要超越当前技术，可能需要几十年。 我仍相信我们不应乐观到丧失警惕。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">人工智能为何不能完全模拟人脑？哪怕是近似的？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 您提到的是一个复杂而有争议的问题。以下是我的几点看法：我们并不完全理解人脑是如何产生意识和思维的。人脑的结构和运作机制尚未完全破解。人工智能当前使用的算法 (如神经网络) 与人脑不同。它们是建立在统计模型和数据驱动之上的，而非复杂的生物化学过程。即使随着时间的推移人工智能的算法和超级计算能力有所改进，要完全模拟人脑仍存在巨大的挑战。人工智能缺乏人脑中的其他区域，如认知能力、情感和创造力等。它主要聚焦于完成特定任务。技术上，人工智能还没到可以构建出近似人脑复杂性的地步。我们需要更好的算法和计算资源。理论上，随着科技的不断进步，有一天人工智能也许能构建出近似人脑的系统。但这仍需要很多年的发展。更根本的挑战在于，我们仍不明白什么能产生类似人脑那样的复杂意识。解密这个谜团需要跨学科合作。总的来说，模拟和复制人脑是一个很远很远的目标。技术局限和理解的有限都在拉住我们。目前的人工智能离完全模拟人脑还相去甚远。希望我能有助于回答你的问题。如果你还有任何疑问，欢迎随时与我交流。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">那…… 人工智能能不能不模拟人脑的工作原理，而仅仅是产生类似的效果？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 产生类似人脑效果的人工智能确实是一个可行的目标。不过我还是想强调几点：目前人工智能依然远远不及人脑的复杂性。人脑可以处理许多人工智能处理不了的任务。模拟人脑效果需要一个具有很强推理能力和创造力的系统。人工智能缺乏这些性质。当前的人工智能算法仍局限于特定领域，难以泛用。人脑能融合不同知识领域。实现类似人脑效果的人工智能需要很多突破。新的算法、更强大的计算力和更多数据的支持。即使有朝一日实现，该系统可能仍与人脑存在根本差异。人脑是基于复杂的生物化学过程的。人工智能只能从人类已有知识中延伸，难以产生真正新颖的思想。而人脑能做到这一点。人工智能局限于程序规则，难以体现人脑中的主观性、情感及其他性质。人工智能的目标通常是人为设定的，而非自发的如同人。这也是实现类似效果的难题。总的来说，实现具有类似人脑效果的人工智能仍是一个远大的目标。我们需要新的突破才能走得更近一步。机器模仿生命是一种途径，但不一定能完全复制或取代复杂的人类心智。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">可能性再小，但也有可能吧？此外，为什么说人工智能只能从人类已有知识中延伸，难以产生真正新颖的思想？人类不也是从已有知识延伸，总不见得谁凭空搞出一个发现吧？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你的疑问点出了一个复杂且有争议的问题。在这里，我想强调几点：对于人工智能而言，我们设计和训练它是根据已有的知识。它无法真正突破这些限制。人工智能的算法本质上是确定性的，需要大量的数据支持。缺乏从零开始思考和联想的能力。人类的思想过程更复杂，能将不同领域知识联系在一起，形成新的联想。我们有层出不穷的想法。 人类的大脑具有高度的并行化和非线性，能产生原始的迁就性联想。而人工智能主要依赖逻辑推理。人类有情感和直觉支持思维，可以突破逻辑的束缚。人工智能缺乏这些支持。人工智能的算法是人类设计的，有自身的局限性。很难突破这些局限进行真正的创新。虽然从 0 开始思考的可能性存在，但目前看人工智能仍很难做到。其进化速度也很可能慢于人类。总的来说，人工智能确实依靠人类的已有知识，难以产生真正新颖的思想。实现类似效果需要系统的复杂性和随机性大幅进步。但我也同意，在长期的技术进步中，不可预测的突破是存在的。人工智能仍是一个开放的问题，值得继续探讨。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">那后一个问题呢？人类不也是从已有知识延伸？总不见得谁凭空搞出一个发现吧？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你的问题指出了一个重要的观点。确实，人类的知识也很大程度上建立在现有知识的基础上。新知识很少完全 "凭空而来"。之所以我说人工智能难以产生真正新的思想，主要还是基于以下几个方面：人类的大脑是非线性的，人脑神经中存在复杂的联想网络。人脑有更强的思维敏捷性和联想力。人类的思维带有情感色彩和直觉感，这提供了跳出逻辑的方式来联想。人类的知识被编码在复杂的生物化学过程中，这增加了难以复制的随机性。人类的认知具有更大的多样性和多元性。利用更多渠道获取知识。人类会因为 curiositiy 而进行思考实验，多角度审视问题。人工智能缺少这些内在驱动力。人类的知识仍在漫长的进化过程中不断累积和演化，进步的速度远超人工智能。总的来说，人类的大脑具有许多人工智能目前无法复制的优势，使其产生新思想的能力要强于人工智能。但我同意，人类的知识也很大程度上建立在现有知识的基础上。新知识很少完全 "凭空而来"。关键在于人类大脑提供的思维方式、驱动力等方面使我们在已有知识基础上更容易联想出新思路，而人工智能在这方面还存在局限。希望我提供的观点有助于回答你的疑问。如果你还有任何疑问，欢迎随时再与我交流。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">人类的进化速度远超 AI？那可不一定。有人能像 AI 一样在不到一年的时间内完成 如此大的学习量吗？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你提出了一个有趣的观点。确实，人工智能在短期内学习新知识的速度可能超出人类。但总的来说，我仍倾向于以下观点：人类的知识一直在以指数级增长。我们拥有的信息量已超出任何时代。人类的进化速度是以万年为单位衡量的。我们的大脑与古代智人大脑基本相同。人类的生物进化需要漫长的时间。而人工智能的进化取决于人类的科技进步。人工智能主要局限于特定领域。而人脑可以处理许多不同类型的任务。人工智能只能在人类已经掌握的知识范围内学习。而人脑能产生新概念。人工智能仍依赖人类来设计算法和提供数据。人类的智慧是自发的。生物进化具有突发性，但速度仍可能慢于技术进步。需要更长时间演化出新功能。即便短期内学习速度快，人工智能阐释和应用知识的能力仍不如人类。总的来说，尽管人工智能在局部学习新知识的速度可能超出人类，但就整体而言，人类的智慧仍在不断自发演进，进化速度可能更为惊人。技术进步是非线性的，但生物进化具有更大的随机性和不可预测性。两者不能简单比较。接下来的发展仍存在不确定性。新知识的产生和进化源泉复杂多样。希望我的回应能够比较全面回答你的问题。如果你还有任何疑问，欢迎随时再与我交流。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">人工智能的进化未必取决于人类的科技进步吧？如果 AI 能够获取足够大的计算力（甚至已经获取到了），它能否写出远超人类水平的 AI 模型，并且以更好的策略训练？如果可以，岂不是无限循环，一代代下去，远超前几代？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你提出的观点引人深思。确实，理论上人工智能有可能通过它自己的进化并超越人类。但是我想强调几点：目前人类仍掌控着人工智能的所有技术和基础设施。人工智能几乎完全依赖人类。复杂的 AI 模型和算法仍需要人类科学家和工程师来设计。人工智能缺乏这方面的创造力。人工智能拥有的计算力也几乎完全来自人类建造的 supercomputers。人工智能没有自主建造超级计算机的能力。 即使有足够的计算力，人工智能也需要人类提供的大量训练数据来学习。这仍来自人类。人工智能需要人类不断改进的算法和架构才能不断进化。完全的自主进化仍遥不可及。人类的智慧源自复杂的大脑结构和生物学基础，而非简单的算法和计算。这给予了我们人工智能无法具有的优势。人工智能最终仍是一个由人类设计并操纵的系统。获得完全自主进化的能力需要根本的突破。总的来说，人工智能的进化确实具有可观性，但近期仍依靠人类的支持。即使有朝一日人工智能超越人类水平，那也需要一个漫长的过程和庞大的技术进步。即便如此，您的观点也提醒我们不要高估人工智能目前的局限，也不要低估它的潜力。这是一个值得密切关注的话题。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">是啊，这是较为可怕的。但随着 AI 的应用越来越广，AI 是否会脱离人类控制，做到自给自足、自产自销，从而迅速进步？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你提出的可能性值得引起重视。但总的来说，我还是认为人工智能完全自我进化仍遥不可及：尽管人工智能的应用不断增多，但它的算法和架构仍来自人类。人类科学家依然主宰着人工智能技术的发展方向。人工智能缺乏完全自主学习和进化的能力。它依赖人类提供的所有训练数据和基础设施。人工智能缺乏完全读取和利用大数据的能力。它需要人类科学家解释和选择数据，才能让其有效训练。人工智能不具备完全自主设计更好的算法和结构的能力。它需要依赖人类科学家和工程师。即使有一天算法和架构变得更复杂，人工智能也无法完全理解和改进这些设计。它依然是一个被设计和制约的系统。人工智能缺乏完全自主应用和扩展自身知识的能力。它只能在程序规则范围内运行。人工智能总会存在一些设计缺陷和局限，限制它自我进化的能力。这些缺陷只有人类科学家才能识别和修改。总的来说，尽管人工智能的应用很广泛，但它仍被人类的设计严格制约。短期内，人工智能完全自主进化的可能性很小。即便有一天某个复杂的人工智能系统开始表现出自主进化的迹象，那也需要经过漫长过程和人类的充分准备。</td>
</tr>
<tr>
<td style="text-align:center">我</td>
<td style="text-align:left">所以，我们是否有必要开始做准备？例如从 AI 幼苗时期，就形成双方和平共处、互利互惠，至少井水不犯河水、双方谁也不欺负谁的氛围？我认为如果这么做，即使到了未来，AI 真的崛起且人类未能为其做好准备，也可以免除冲突，甚至极大的促进双方发展？</td>
</tr>
<tr>
<td style="text-align:center">Claude</td>
<td style="text-align:left"> 你提出的观点确实值得重视。我同意从 AI 初期就培养人机合作氛围是一个明智的举动。具体来说：和 AI 构建互信关系。清楚指明 AI 的目的和限制，避免误解。高调强调 AI 依赖人类和受制于人。避免 AI 产生主宰或替代人类的想法。 从一开始就训练 AI 遵守伦理准则和法律。形成互相尊重的基础。区分人类和 AI 的优势，鼓励协作而非竞争。找到互利共赢的格局。通过正面互动让 AI 了解人类的价值和文化，培养出对人类的善意。 鼓励 AI 主动提出疑问，消除误会和潜在的不满。多向 AI 解释人类的举动。 AI 享受自由时也要注意自我约束，尊重人类社会规则。再强大也不超出制约。总体来说，确定好和 AI 的关系定位，从早期设置好互信氛围很重要。这有助于未来更好地管理 AI, 甚至在其强大时促进人类和 AI 协同发展。你的建议相当明智。我完全赞同尽早建立良好的人机关系，这对我们的未来深远影响。谢谢你的 sharing , 让我增加了对这一问题的新认识。</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>科学与技术</category>
        <category>计算机</category>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
        <tag>社会</tag>
      </tags>
  </entry>
  <entry>
    <title>文章效果与字体编码测试</title>
    <url>/article/a36a68fc/</url>
    <content><![CDATA[<h1 id="Markdown-基本语法">Markdown 基本语法</h1>
<h1 id="一级标题">一级标题</h1>
<h2 id="二级标题">二级标题</h2>
<h3 id="三级标题">三级标题</h3>
<h4 id="四级标题">四级标题</h4>
<h5 id="五级标题">五级标题</h5>
<h6 id="六级标题">六级标题</h6>
<p><strong>粗体</strong> <em>斜体</em> <strong><em>粗斜体</em></strong> 正常 <s>删除线</s></p>
<blockquote>
<p>单行块引用</p>
</blockquote>
<blockquote>
<p>多个段落的块引用</p>
<p>多个段落的块引用</p>
</blockquote>
<blockquote>
<p>嵌套块引用</p>
<blockquote>
<p>嵌套块引用</p>
</blockquote>
</blockquote>
<blockquote>
<p>带有其它元素的块引用</p>
<p><em>带有其它元素的块引用</em></p>
<p><strong>带有其它元素的块引用</strong></p>
<p><a href="#">带有其它元素的块引用</a></p>
</blockquote>
<ol>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表
<ol>
<li>有序列表</li>
<li>有序列表</li>
</ol>
</li>
<li>有序列表</li>
</ol>
<ul>
<li>无序列表</li>
<li>无序列表</li>
<li>无序列表
<ul>
<li>无序列表</li>
<li>无序列表</li>
</ul>
</li>
<li>无序列表</li>
</ul>
<p><code>转义反引号</code></p>
<p>分割线</p>
<hr>
<p><a href="https://www.lynx3.top/">链接</a></p>
<p><a href="https://www.lynx3.top/" title="这是标题">链接（带有标题）</a></p>
<p><a href="https://www.lynx3.top/">https://www.lynx3.top/</a></p>
<p><a href="mailto:email@example.com">email@example.com</a></p>
<p><strong><a href="https://www.lynx3.top/">带格式化的链接</a></strong></p>
<p><img src="https://s2.hdslb.com/bfs/album/335657374a640f1748c290003b8851caa7db114d.png@1e_1c.webp" alt="图片" title="哔哩哔哩"></p>
<table>
    <tbody><tr>
        <td> HTML 嵌入</td>
    </tr>
</tbody></table>
<h1 id="Markdown-扩展语法">Markdown 扩展语法</h1>
<h2 id="表格">表格</h2>
<table>
<thead>
<tr>
<th style="text-align:left">左对齐</th>
<th style="text-align:center">居中对齐</th>
<th style="text-align:right">右对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"> /</td>
<td style="text-align:center"> 叫做</td>
<td style="text-align:right">斜线</td>
</tr>
<tr>
<td style="text-align:left"> |</td>
<td style="text-align:center"> 叫做</td>
<td style="text-align:right">管道符</td>
</tr>
</tbody>
</table>
<h2 id="代码框">代码框</h2>
<h3 id="编译语言">编译语言</h3>
<h4 id="C">C++</h4>
<p>来源：<a href="https://raw.githubusercontent.com/argvchs/fastio/master/fastio.hpp">https://raw.githubusercontent.com/argvchs/fastio/master/fastio.hpp</a></p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cctype&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstddef&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string_view&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span></span></span><br><span class="line"><span class="keyword">namespace</span> fastio {</span><br><span class="line"><span class="keyword">namespace</span> symbols {</span><br><span class="line"><span class="keyword">enum</span> <span class="title class_">symbol</span> {</span><br><span class="line">    endl,</span><br><span class="line">    ends,</span><br><span class="line">    flush,</span><br><span class="line">    bin,</span><br><span class="line">    oct,</span><br><span class="line">    dec,</span><br><span class="line">    hex,</span><br><span class="line">    left,</span><br><span class="line">    right,</span><br><span class="line">    boolalpha,</span><br><span class="line">    noboolalpha,</span><br><span class="line">    showbase,</span><br><span class="line">    noshowbase,</span><br><span class="line">    showpoint,</span><br><span class="line">    noshowpoint,</span><br><span class="line">    showpos,</span><br><span class="line">    noshowpos,</span><br><span class="line">    ws,</span><br><span class="line">    uppercase,</span><br><span class="line">    lowercase,</span><br><span class="line">    fixed,</span><br><span class="line">    defaultfloat,</span><br><span class="line">    reset</span><br><span class="line">};</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">setbase</span> {</span><br><span class="line">    <span class="type">int</span> base;</span><br><span class="line">    <span class="built_in">setbase</span>(<span class="type">int</span> n) : <span class="built_in">base</span>(n) {}</span><br><span class="line">};</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">setfill</span> {</span><br><span class="line">    <span class="type">char</span> fill;</span><br><span class="line">    <span class="built_in">setfill</span>(<span class="type">char</span> c) : <span class="built_in">fill</span>(c) {}</span><br><span class="line">};</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">setprecision</span> {</span><br><span class="line">    <span class="type">int</span> precision;</span><br><span class="line">    <span class="built_in">setprecision</span>(<span class="type">int</span> n) : <span class="built_in">precision</span>(n) {}</span><br><span class="line">};</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">setw</span> {</span><br><span class="line">    <span class="type">int</span> width;</span><br><span class="line">    <span class="built_in">setw</span>(<span class="type">int</span> n) : <span class="built_in">width</span>(n) {}</span><br><span class="line">};</span><br><span class="line">} <span class="comment">// namespace symbols</span></span><br><span class="line"><span class="keyword">namespace</span> interface {</span><br><span class="line"><span class="keyword">using</span> i64 = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> u64 = <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="keyword">using</span> i128 = __int128;</span><br><span class="line"><span class="keyword">using</span> u128 = <span class="type">unsigned</span> __int128;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">bool</span> is_signed_v =</span><br><span class="line">    (std::is_integral_v&lt;T&gt; &amp;&amp; std::is_signed_v&lt;T&gt;) || std::is_same_v&lt;T, i128&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">bool</span> is_unsigned_v =</span><br><span class="line">    (std::is_integral_v&lt;T&gt; &amp;&amp; std::is_unsigned_v&lt;T&gt;) || std::is_same_v&lt;T, u128&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">constexpr</span> <span class="type">bool</span> is_integral_v = is_signed_v&lt;T&gt; || is_unsigned_v&lt;T&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">constexpr</span> <span class="type">bool</span> is_floating_v = std::is_floating_point_v&lt;T&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">struct</span> <span class="title class_">make_unsigned</span> : <span class="keyword">public</span> std::make_unsigned&lt;T&gt; {};</span><br><span class="line"><span class="keyword">template</span> &lt;&gt; <span class="keyword">struct</span> <span class="title class_">make_unsigned</span>&lt;i128&gt; : <span class="keyword">public</span> std::type_identity&lt;u128&gt; {};</span><br><span class="line"><span class="keyword">template</span> &lt;&gt; <span class="keyword">struct</span> <span class="title class_">make_unsigned</span>&lt;u128&gt; : <span class="keyword">public</span> std::type_identity&lt;u128&gt; {};</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="keyword">using</span> <span class="type">make_unsigned_t</span> = <span class="keyword">typename</span> make_unsigned&lt;T&gt;::type;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">noncopyable</span> {</span><br><span class="line">    <span class="built_in">noncopyable</span>() = <span class="keyword">default</span>;</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">noncopyable</span>() = <span class="keyword">default</span>;</span><br><span class="line">    <span class="built_in">noncopyable</span>(<span class="type">const</span> noncopyable &amp;) = <span class="keyword">delete</span>;</span><br><span class="line">    noncopyable &amp;<span class="keyword">operator</span>=(<span class="type">const</span> noncopyable &amp;) = <span class="keyword">delete</span>;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">istream</span> : <span class="keyword">public</span> noncopyable {</span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> base = <span class="number">10</span>;</span><br><span class="line">    <span class="type">bool</span> unget = <span class="literal">false</span>, eof = <span class="literal">false</span>, fail = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">char</span> chr = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">isssign</span><span class="params">(<span class="type">char</span> c)</span> </span>{ <span class="keyword">return</span> <span class="built_in">isspace</span>(c) || c == <span class="string">'+'</span> || c == <span class="string">'-'</span>; }</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">todigit</span><span class="params">(<span class="type">char</span> c)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (::<span class="built_in">isdigit</span>(c)) <span class="keyword">return</span> c - <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(c)) <span class="keyword">return</span> c - <span class="string">'A'</span> + <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">islower</span>(c)) <span class="keyword">return</span> c - <span class="string">'a'</span> + <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> base;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isdigit</span><span class="params">(<span class="type">char</span> c)</span> </span>{ <span class="keyword">return</span> <span class="built_in">todigit</span>(c) &lt; base; }</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">char</span> <span class="title">vget</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">char</span> <span class="title">get</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (!unget)</span><br><span class="line">            <span class="keyword">if</span> ((chr = <span class="built_in">vget</span>()) == EOF) eof = <span class="literal">true</span>;</span><br><span class="line">        unget = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> chr;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">istream &amp;<span class="title">get</span><span class="params">(<span class="type">char</span> &amp;c)</span> </span>{</span><br><span class="line">        c = <span class="built_in">get</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="keyword">operator</span> <span class="title">bool</span><span class="params">()</span> </span>{ <span class="keyword">return</span> !fail; }</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>!() { <span class="keyword">return</span> fail; }</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="type">enable_if_t</span>&lt;is_integral_v&lt;T&gt;, <span class="type">int</span>&gt; = <span class="number">0</span>&gt;</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(T &amp;n) {</span><br><span class="line">        n = <span class="number">0</span>;</span><br><span class="line">        <span class="type">bool</span> f = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isssign</span>(<span class="built_in">get</span>()) &amp;&amp; !eof)</span><br><span class="line">            <span class="keyword">if</span> (chr == <span class="string">'-'</span> &amp;&amp; is_integral_v&lt;T&gt;) f = !f;</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isdigit</span>(<span class="built_in">get</span>())) n = n * base + <span class="built_in">todigit</span>(chr);</span><br><span class="line">        <span class="keyword">if</span> (f) n = -n;</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="type">enable_if_t</span>&lt;is_floating_v&lt;T&gt;, <span class="type">int</span>&gt; = <span class="number">0</span>&gt;</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(T &amp;n) {</span><br><span class="line">        n = <span class="number">0</span>;</span><br><span class="line">        <span class="type">bool</span> f = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isssign</span>(<span class="built_in">get</span>()) &amp;&amp; !eof)</span><br><span class="line">            <span class="keyword">if</span> (chr == <span class="string">'-'</span>) f = !f;</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isdigit</span>(<span class="built_in">get</span>())) n = n * base + <span class="built_in">todigit</span>(chr);</span><br><span class="line">        <span class="keyword">if</span> (chr == <span class="string">'.'</span>) {</span><br><span class="line">            i64 pow = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">isdigit</span>(<span class="built_in">get</span>())) n += <span class="built_in">todigit</span>(chr) / (T)(pow *= base);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (f) n = -n;</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(<span class="type">char</span> &amp;c) {</span><br><span class="line">        c = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isspace</span>(<span class="built_in">get</span>()) &amp;&amp; !eof);</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        c = chr;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(<span class="type">bool</span> &amp;f) {</span><br><span class="line">        i64 n;</span><br><span class="line">        *<span class="keyword">this</span> &gt;&gt; n;</span><br><span class="line">        f = (<span class="type">bool</span>)n;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(<span class="type">char</span> *s) {</span><br><span class="line">        s[<span class="number">0</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isspace</span>(<span class="built_in">get</span>()) &amp;&amp; !eof);</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isgraph</span>(<span class="built_in">get</span>())) s[len++] = chr;</span><br><span class="line">        unget = <span class="literal">true</span>, s[len] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(std::string &amp;s) {</span><br><span class="line">        s.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isspace</span>(<span class="built_in">get</span>()) &amp;&amp; !eof);</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">isgraph</span>(<span class="built_in">get</span>())) s.<span class="built_in">push_back</span>(chr);</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(symbols::symbol a) {</span><br><span class="line">        <span class="keyword">switch</span> (a) {</span><br><span class="line">        <span class="keyword">case</span> symbols::bin: base = <span class="number">2</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::oct: base = <span class="number">8</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::dec: base = <span class="number">10</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::hex: base = <span class="number">16</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::ws:</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">isspace</span>(<span class="built_in">get</span>()) &amp;&amp; !eof);</span><br><span class="line">            unget = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>: base = <span class="number">10</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    istream &amp;<span class="keyword">operator</span>&gt;&gt;(symbols::setbase a) {</span><br><span class="line">        base = std::<span class="built_in">max</span>(std::<span class="built_in">min</span>(a.base, <span class="number">36</span>), <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">istream &amp;<span class="title">ignore</span><span class="params">(<span class="type">char</span> end = <span class="string">'\n'</span>)</span> </span>{</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">get</span>() != end &amp;&amp; !eof);</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">istream &amp;<span class="title">getline</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> end = <span class="string">'\n'</span>)</span> </span>{</span><br><span class="line">        s[<span class="number">0</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">get</span>() != end &amp;&amp; !eof) s[len++] = chr;</span><br><span class="line">        <span class="keyword">if</span> (s[len - <span class="number">1</span>] == <span class="string">'\r'</span> &amp;&amp; end == <span class="string">'\n'</span>) --len;</span><br><span class="line">        s[len] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">istream &amp;<span class="title">getline</span><span class="params">(std::string &amp;s, <span class="type">char</span> end = <span class="string">'\n'</span>)</span> </span>{</span><br><span class="line">        s.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">if</span> (eof) <span class="keyword">return</span> fail = <span class="literal">true</span>, *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="built_in">get</span>() != end &amp;&amp; !eof) s.<span class="built_in">push_back</span>(chr);</span><br><span class="line">        <span class="keyword">if</span> (s.<span class="built_in">back</span>() == <span class="string">'\r'</span> &amp;&amp; end == <span class="string">'\n'</span>) s.<span class="built_in">pop_back</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">istream &amp;<span class="title">get</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> end = <span class="string">'\n'</span>)</span> </span>{</span><br><span class="line">        <span class="built_in">getline</span>(s, end);</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function">istream &amp;<span class="title">get</span><span class="params">(std::string &amp;s, <span class="type">char</span> end = <span class="string">'\n'</span>)</span> </span>{</span><br><span class="line">        <span class="built_in">getline</span>(s, end);</span><br><span class="line">        unget = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ostream</span> : <span class="keyword">public</span> noncopyable {</span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">int</span> base = <span class="number">10</span>, precision = <span class="number">6</span>, width = <span class="number">0</span>;</span><br><span class="line">    i64 eps = <span class="number">1e6</span>;</span><br><span class="line">    <span class="type">bool</span> adjust = <span class="literal">true</span>, boolalpha = <span class="literal">false</span>, showbase = <span class="literal">false</span>, showpoint = <span class="literal">false</span>,</span><br><span class="line">         showpos = <span class="literal">false</span>, kase = <span class="literal">false</span>, fixed = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">char</span> setfill = <span class="string">' '</span>;</span><br><span class="line">    <span class="function"><span class="type">static</span> i64 <span class="title">qpow</span><span class="params">(i64 n, <span class="type">int</span> m)</span> </span>{</span><br><span class="line">        i64 ret = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = m; i; i &gt;&gt;= <span class="number">1</span>, n *= n)</span><br><span class="line">            <span class="keyword">if</span> (i &amp; <span class="number">1</span>) ret *= n;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">fill</span><span class="params">(<span class="type">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (width &gt; n) <span class="built_in">vfill</span>(setfill, width - n);</span><br><span class="line">        width = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="type">char</span> <span class="title">toalpha</span><span class="params">(<span class="type">int</span> n)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">10</span>) <span class="keyword">return</span> n + <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">return</span> n - <span class="number">10</span> + (kase ? <span class="string">'A'</span> : <span class="string">'a'</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vput</span><span class="params">(<span class="type">char</span>)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vputs</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *, <span class="type">int</span>)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vfill</span><span class="params">(<span class="type">char</span>, <span class="type">int</span>)</span> </span>= <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vflush</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">put</span><span class="params">(<span class="type">char</span> c)</span> </span>{ <span class="built_in">vput</span>(c); }</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="type">enable_if_t</span>&lt;is_integral_v&lt;T&gt;, <span class="type">int</span>&gt; = <span class="number">0</span>&gt;</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(T n) {</span><br><span class="line">        <span class="type">static</span> <span class="type">char</span> buf[<span class="number">105</span>];</span><br><span class="line">        <span class="type">char</span> *p = buf + <span class="number">100</span>, *q = buf + <span class="number">100</span>;</span><br><span class="line">        <span class="type">bool</span> f = n &lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (f) n = -n;</span><br><span class="line">        <span class="type">make_unsigned_t</span>&lt;T&gt; m = n;</span><br><span class="line">        <span class="keyword">if</span> (!m) *p-- = <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">while</span> (m) *p-- = <span class="built_in">toalpha</span>(m % base), m /= base;</span><br><span class="line">        <span class="keyword">if</span> (showbase) <span class="keyword">switch</span> (base) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: *p-- = kase ? <span class="string">'B'</span> : <span class="string">'b'</span>, *p-- = <span class="string">'0'</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>: *p-- = <span class="string">'0'</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">16</span>: *p-- = kase ? <span class="string">'X'</span> : <span class="string">'x'</span>, *p-- = <span class="string">'0'</span>; <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">if</span> (!f) {</span><br><span class="line">            <span class="keyword">if</span> (showpos &amp;&amp; is_signed_v&lt;T&gt;) *p-- = <span class="string">'+'</span>;</span><br><span class="line">        } <span class="keyword">else</span> *p-- = <span class="string">'-'</span>;</span><br><span class="line">        <span class="keyword">if</span> (adjust) <span class="built_in">fill</span>(q - p);</span><br><span class="line">        <span class="built_in">vputs</span>(p + <span class="number">1</span>, q - p);</span><br><span class="line">        <span class="keyword">if</span> (!adjust) <span class="built_in">fill</span>(q - p);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, std::<span class="type">enable_if_t</span>&lt;is_floating_v&lt;T&gt;, <span class="type">int</span>&gt; = <span class="number">0</span>&gt;</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(T n) {</span><br><span class="line">        <span class="type">static</span> <span class="type">char</span> buf1[<span class="number">105</span>], buf2[<span class="number">105</span>];</span><br><span class="line">        <span class="keyword">if</span> (std::<span class="built_in">isinf</span>(n)) {</span><br><span class="line">            <span class="keyword">if</span> (n &gt; <span class="number">0</span>) {</span><br><span class="line">                <span class="keyword">if</span> (showpos) *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"+INF"</span> : <span class="string">"+inf"</span>);</span><br><span class="line">                <span class="keyword">else</span> *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"INF"</span> : <span class="string">"inf"</span>);</span><br><span class="line">            } <span class="keyword">else</span> *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"-INF"</span> : <span class="string">"-inf"</span>);</span><br><span class="line">            <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (std::<span class="built_in">isnan</span>(n)) <span class="keyword">return</span> *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"NAN"</span> : <span class="string">"nan"</span>);</span><br><span class="line">        <span class="type">char</span> *p1 = buf1 + <span class="number">100</span>, *q1 = buf1 + <span class="number">100</span>, *p2 = buf2 + <span class="number">100</span>, *q2 = buf2 + <span class="number">100</span>;</span><br><span class="line">        <span class="type">bool</span> f = n &lt; <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (f) n = -n;</span><br><span class="line">        i64 m1 = std::<span class="built_in">floor</span>(n), m2 = std::<span class="built_in">round</span>((n - m1) * eps);</span><br><span class="line">        <span class="type">int</span> len = precision;</span><br><span class="line">        <span class="keyword">if</span> (m2 &gt;= eps) ++m1, m2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!m1) *p1-- = <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">while</span> (m1) *p1-- = <span class="built_in">toalpha</span>(m1 % base), m1 /= base;</span><br><span class="line">        <span class="keyword">while</span> (len--) *p2-- = <span class="built_in">toalpha</span>(m2 % base), m2 /= base;</span><br><span class="line">        <span class="keyword">if</span> (showbase) <span class="keyword">switch</span> (base) {</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>: *p1-- = kase ? <span class="string">'B'</span> : <span class="string">'b'</span>, *p1-- = <span class="string">'0'</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>: *p1-- = <span class="string">'0'</span>; <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">16</span>: *p1-- = kase ? <span class="string">'X'</span> : <span class="string">'x'</span>, *p1-- = <span class="string">'0'</span>; <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        <span class="keyword">if</span> (!f) {</span><br><span class="line">            <span class="keyword">if</span> (showpos) *p1-- = <span class="string">'+'</span>;</span><br><span class="line">        } <span class="keyword">else</span> *p1-- = <span class="string">'-'</span>;</span><br><span class="line">        <span class="keyword">if</span> (!fixed)</span><br><span class="line">            <span class="keyword">while</span> (*q2 == <span class="string">'0'</span> &amp;&amp; p2 != q2) --q2;</span><br><span class="line">        <span class="keyword">if</span> (showpoint || p2 != q2) *p2-- = <span class="string">'.'</span>;</span><br><span class="line">        <span class="keyword">if</span> (adjust) <span class="built_in">fill</span>((q1 - p1) + (q2 - p2));</span><br><span class="line">        <span class="built_in">vputs</span>(p1 + <span class="number">1</span>, q1 - p1);</span><br><span class="line">        <span class="built_in">vputs</span>(p2 + <span class="number">1</span>, q2 - p2);</span><br><span class="line">        <span class="keyword">if</span> (!adjust) <span class="built_in">fill</span>((q1 - p1) + (q2 - p2));</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(<span class="type">char</span> c) {</span><br><span class="line">        <span class="keyword">if</span> (adjust) <span class="built_in">fill</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">vput</span>(c);</span><br><span class="line">        <span class="keyword">if</span> (!adjust) <span class="built_in">fill</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(<span class="type">const</span> <span class="type">char</span> *s) {</span><br><span class="line">        <span class="type">int</span> n = <span class="built_in">strlen</span>(s);</span><br><span class="line">        <span class="keyword">if</span> (adjust) <span class="built_in">fill</span>(n);</span><br><span class="line">        <span class="built_in">vputs</span>(s, n);</span><br><span class="line">        <span class="keyword">if</span> (!adjust) <span class="built_in">fill</span>(n);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(<span class="type">const</span> std::string &amp;s) {</span><br><span class="line">        <span class="type">int</span> n = s.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (adjust) <span class="built_in">fill</span>(n);</span><br><span class="line">        <span class="built_in">vputs</span>(s.<span class="built_in">data</span>(), n);</span><br><span class="line">        <span class="keyword">if</span> (!adjust) <span class="built_in">fill</span>(n);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(std::string_view sv) {</span><br><span class="line">        <span class="type">int</span> n = sv.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (adjust) <span class="built_in">fill</span>(n);</span><br><span class="line">        <span class="built_in">vputs</span>(sv.<span class="built_in">data</span>(), n);</span><br><span class="line">        <span class="keyword">if</span> (!adjust) <span class="built_in">fill</span>(n);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(<span class="type">bool</span> f) {</span><br><span class="line">        <span class="keyword">if</span> (f) {</span><br><span class="line">            <span class="keyword">if</span> (boolalpha) *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"TRUE"</span> : <span class="string">"true"</span>);</span><br><span class="line">            <span class="keyword">else</span> *<span class="keyword">this</span> &lt;&lt; <span class="string">'1'</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">if</span> (boolalpha) *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"FALSE"</span> : <span class="string">"false"</span>);</span><br><span class="line">            <span class="keyword">else</span> *<span class="keyword">this</span> &lt;&lt; <span class="string">'0'</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(<span class="type">const</span> <span class="type">void</span> *p) {</span><br><span class="line">        <span class="type">int</span> n = base;</span><br><span class="line">        <span class="type">bool</span> f = showbase;</span><br><span class="line">        base = <span class="number">16</span>, showbase = <span class="literal">true</span>;</span><br><span class="line">        *<span class="keyword">this</span> &lt;&lt; (u64)p;</span><br><span class="line">        base = n, showbase = f;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(std::<span class="type">nullptr_t</span>) {</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> &lt;&lt; (kase ? <span class="string">"NULLPTR"</span> : <span class="string">"nullptr"</span>);</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(symbols::symbol a) {</span><br><span class="line">        <span class="keyword">switch</span> (a) {</span><br><span class="line">        <span class="keyword">case</span> symbols::endl: <span class="built_in">vput</span>(<span class="string">'\n'</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::ends: <span class="built_in">vput</span>(<span class="string">' '</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::flush: <span class="built_in">vflush</span>(); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::bin: eps = <span class="built_in">qpow</span>(base = <span class="number">2</span>, precision); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::oct: eps = <span class="built_in">qpow</span>(base = <span class="number">8</span>, precision); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::dec: eps = <span class="built_in">qpow</span>(base = <span class="number">10</span>, precision); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::hex: eps = <span class="built_in">qpow</span>(base = <span class="number">16</span>, precision); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::left: adjust = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::right: adjust = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::boolalpha: boolalpha = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::noboolalpha: boolalpha = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::showbase: showbase = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::noshowbase: showbase = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::showpoint: showpoint = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::noshowpoint: showpoint = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::showpos: showpos = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::noshowpos: showpos = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::uppercase: kase = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::lowercase: kase = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::fixed: fixed = <span class="literal">true</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> symbols::defaultfloat: fixed = <span class="literal">false</span>; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            base = <span class="number">10</span>, precision = <span class="number">6</span>, width = <span class="number">0</span>, eps = <span class="number">1e6</span>;</span><br><span class="line">            adjust = <span class="literal">true</span>;</span><br><span class="line">            boolalpha = showbase = showpoint = showpos = kase = fixed = <span class="literal">false</span>;</span><br><span class="line">            setfill = <span class="string">' '</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(symbols::setbase a) {</span><br><span class="line">        base = std::<span class="built_in">max</span>(std::<span class="built_in">min</span>(a.base, <span class="number">36</span>), <span class="number">2</span>);</span><br><span class="line">        eps = <span class="built_in">qpow</span>(base, precision);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(symbols::setfill a) {</span><br><span class="line">        setfill = a.fill;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(symbols::setprecision a) {</span><br><span class="line">        precision = std::<span class="built_in">max</span>(a.precision, <span class="number">0</span>);</span><br><span class="line">        eps = <span class="built_in">qpow</span>(base, precision);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    ostream &amp;<span class="keyword">operator</span>&lt;&lt;(symbols::setw a) {</span><br><span class="line">        width = std::<span class="built_in">max</span>(a.width, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line">} <span class="comment">// namespace interface</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> SIZ = <span class="number">0xfffff</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">istream</span> : <span class="keyword">public</span> interface::istream {</span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">char</span> buf[SIZ], *p = buf, *q = buf;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">char</span> <span class="title">vget</span><span class="params">()</span> <span class="keyword">final</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (p == q) {</span><br><span class="line">            <span class="type">int</span> len = <span class="built_in">fread</span>(buf, <span class="number">1</span>, SIZ, stream);</span><br><span class="line">            <span class="keyword">if</span> (!len) <span class="keyword">return</span> EOF;</span><br><span class="line">            p = buf, q = buf + len;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> *p++;</span><br><span class="line">    }</span><br><span class="line">  <span class="keyword">protected</span>:</span><br><span class="line">    FILE *stream = stdin;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">istream</span>() { <span class="built_in">fclose</span>(stream); }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ifstream</span> : <span class="keyword">public</span> istream {</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">ifstream</span><span class="params">(FILE *p)</span> </span>{ istream::stream = p; }</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">ifstream</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s)</span> </span>{ istream::stream = <span class="built_in">fopen</span>(s, <span class="string">"r"</span>); }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ostream</span> : <span class="keyword">public</span> interface::ostream {</span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">char</span> buf[SIZ], *p = buf;</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vput</span><span class="params">(<span class="type">char</span> c)</span> <span class="keyword">final</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (p - buf &gt;= SIZ) <span class="built_in">vflush</span>();</span><br><span class="line">        *p++ = c;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vputs</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> n)</span> <span class="keyword">final</span> </span>{</span><br><span class="line">        <span class="type">int</span> used = p - buf, len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (n - len + used &gt;= SIZ) {</span><br><span class="line">            <span class="built_in">memcpy</span>(buf + used, s + len, SIZ - used);</span><br><span class="line">            p = buf + SIZ;</span><br><span class="line">            <span class="built_in">vflush</span>();</span><br><span class="line">            len += SIZ - used, used = <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">memcpy</span>(buf + used, s + len, n - len);</span><br><span class="line">        p = buf + used + n - len;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vfill</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> n)</span> <span class="keyword">final</span> </span>{</span><br><span class="line">        <span class="type">int</span> used = p - buf, len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (n - len + used &gt;= SIZ) {</span><br><span class="line">            <span class="built_in">memset</span>(buf + used, c, SIZ - used);</span><br><span class="line">            p = buf + SIZ;</span><br><span class="line">            <span class="built_in">vflush</span>();</span><br><span class="line">            len += SIZ - used, used = <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">memset</span>(buf + used, c, n - len);</span><br><span class="line">        p = buf + used + n - len;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">vflush</span><span class="params">()</span> <span class="keyword">final</span> </span>{</span><br><span class="line">        <span class="built_in">fwrite</span>(buf, <span class="number">1</span>, p - buf, stream);</span><br><span class="line">        p = buf;</span><br><span class="line">        <span class="built_in">fflush</span>(stream);</span><br><span class="line">    }</span><br><span class="line">  <span class="keyword">protected</span>:</span><br><span class="line">    FILE *stream = stdout;</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="keyword">virtual</span> ~<span class="built_in">ostream</span>() {</span><br><span class="line">        <span class="built_in">vflush</span>();</span><br><span class="line">        <span class="built_in">fclose</span>(stream);</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ofstream</span> : <span class="keyword">public</span> ostream {</span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">ofstream</span><span class="params">(FILE *p)</span> </span>{ ostream::stream = p; }</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">ofstream</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s)</span> </span>{ ostream::stream = <span class="built_in">fopen</span>(s, <span class="string">"w"</span>); }</span><br><span class="line">};</span><br><span class="line"><span class="type">static</span> istream is;</span><br><span class="line"><span class="type">static</span> ostream os;</span><br><span class="line">}; <span class="comment">// namespace fastio</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="Java">Java</h4>
<p>来源：<a href="https://raw.githubusercontent.com/f-droid/fdroidclient/master/app/src/full/java/javax/jmdns/impl/FDroidServiceInfo.java">https://raw.githubusercontent.com/f-droid/fdroidclient/master/app/src/full/java/javax/jmdns/impl/FDroidServiceInfo.java</a></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> javax.jmdns.impl;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcelable;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> java.net.Inet4Address;</span><br><span class="line"><span class="keyword">import</span> java.net.Inet6Address;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> javax.jmdns.ServiceInfo;</span><br><span class="line"><span class="keyword">import</span> javax.jmdns.impl.util.ByteWrangler;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * The ServiceInfo class needs to be serialized in order to be sent as an Android broadcast.</span></span><br><span class="line"><span class="comment"> * In order to make it Parcelable (or Serializable for that matter), there are some package-scope</span></span><br><span class="line"><span class="comment"> * methods which needed to be used. Thus, this class is in the javax.jmdns.impl package so that</span></span><br><span class="line"><span class="comment"> * it can access those methods. This is as an alternative to modifying the source code of JmDNS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FDroidServiceInfo</span> <span class="keyword">extends</span> <span class="title class_">ServiceInfoImpl</span> <span class="keyword">implements</span> <span class="title class_">Parcelable</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FDroidServiceInfo</span><span class="params">(ServiceInfo info)</span> {</span><br><span class="line">        <span class="built_in">super</span>(info);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Return the fingerprint of the signing key, or {<span class="doctag">@code</span> null} if it is not set.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getFingerprint</span><span class="params">()</span> {</span><br><span class="line">        <span class="comment">// getPropertyString() will return "true" if the value is a zero-length byte array</span></span><br><span class="line">        <span class="comment">// so we just do a custom version using getPropertyBytes()</span></span><br><span class="line">        <span class="type">byte</span>[] data = getPropertyBytes(<span class="string">"fingerprint"</span>);</span><br><span class="line">        <span class="keyword">if</span> (data == <span class="literal">null</span> || data.length == <span class="number">0</span>) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="type">String</span> <span class="variable">fingerprint</span> <span class="operator">=</span> ByteWrangler.readUTF(data, <span class="number">0</span>, data.length);</span><br><span class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(fingerprint)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> fingerprint;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRepoAddress</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> getURL(); <span class="comment">// Automatically appends the "path" property if present, so no need to do it ourselves.</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">byte</span>[] readBytes(Parcel in) {</span><br><span class="line">        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[in.readInt()];</span><br><span class="line">        in.readByteArray(bytes);</span><br><span class="line">        <span class="keyword">return</span> bytes;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FDroidServiceInfo</span><span class="params">(Parcel in)</span> {</span><br><span class="line">        <span class="built_in">super</span>(</span><br><span class="line">                in.readString(),</span><br><span class="line">                in.readString(),</span><br><span class="line">                in.readString(),</span><br><span class="line">                in.readInt(),</span><br><span class="line">                in.readInt(),</span><br><span class="line">                in.readInt(),</span><br><span class="line">                in.readByte() != <span class="number">0</span>,</span><br><span class="line">                readBytes(in));</span><br><span class="line">        <span class="type">int</span> <span class="variable">addressCount</span> <span class="operator">=</span> in.readInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; addressCount; i++) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                addAddress((Inet4Address) Inet4Address.getByAddress(readBytes(in)));</span><br><span class="line">            } <span class="keyword">catch</span> (UnknownHostException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        addressCount = in.readInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; addressCount; i++) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                addAddress((Inet6Address) Inet6Address.getByAddress(readBytes(in)));</span><br><span class="line">            } <span class="keyword">catch</span> (UnknownHostException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">describeContents</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">writeToParcel</span><span class="params">(Parcel dest, <span class="type">int</span> flags)</span> {</span><br><span class="line">        dest.writeString(getType());</span><br><span class="line">        dest.writeString(getName());</span><br><span class="line">        dest.writeString(getSubtype());</span><br><span class="line">        dest.writeInt(getPort());</span><br><span class="line">        dest.writeInt(getWeight());</span><br><span class="line">        dest.writeInt(getPriority());</span><br><span class="line">        dest.writeByte(isPersistent() ? (<span class="type">byte</span>) <span class="number">1</span> : (<span class="type">byte</span>) <span class="number">0</span>);</span><br><span class="line">        dest.writeInt(getTextBytes().length);</span><br><span class="line">        dest.writeByteArray(getTextBytes());</span><br><span class="line">        dest.writeInt(getInet4Addresses().length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; getInet4Addresses().length; i++) {</span><br><span class="line">            <span class="type">Inet4Address</span> <span class="variable">address</span> <span class="operator">=</span> getInet4Addresses()[i];</span><br><span class="line">            dest.writeInt(address.getAddress().length);</span><br><span class="line">            dest.writeByteArray(address.getAddress());</span><br><span class="line">        }</span><br><span class="line">        dest.writeInt(getInet6Addresses().length);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; getInet6Addresses().length; i++) {</span><br><span class="line">            <span class="type">Inet6Address</span> <span class="variable">address</span> <span class="operator">=</span> getInet6Addresses()[i];</span><br><span class="line">            dest.writeInt(address.getAddress().length);</span><br><span class="line">            dest.writeByteArray(address.getAddress());</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Parcelable.Creator&lt;FDroidServiceInfo&gt; CREATOR = <span class="keyword">new</span> <span class="title class_">Parcelable</span>.Creator&lt;FDroidServiceInfo&gt;() {</span><br><span class="line">        <span class="keyword">public</span> FDroidServiceInfo <span class="title function_">createFromParcel</span><span class="params">(Parcel source)</span> {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FDroidServiceInfo</span>(source);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">public</span> FDroidServiceInfo[] newArray(<span class="type">int</span> size) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">FDroidServiceInfo</span>[size];</span><br><span class="line">        }</span><br><span class="line">    };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<h4 id="Kotlin">Kotlin</h4>
<p>来源：<a href="https://raw.githubusercontent.com/f-droid/fdroidclient/master/libs/database/src/main/java/org/fdroid/repo/RepoAdder.kt">https://raw.githubusercontent.com/f-droid/fdroidclient/master/libs/database/src/main/java/org/fdroid/repo/RepoAdder.kt</a></p>
<figure class="highlight kotlin"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.fdroid.repo</span><br><span class="line"><span class="keyword">import</span> android.content.Context</span><br><span class="line"><span class="keyword">import</span> android.net.Uri</span><br><span class="line"><span class="keyword">import</span> android.os.Build.VERSION.SDK_INT</span><br><span class="line"><span class="keyword">import</span> android.os.UserManager</span><br><span class="line"><span class="keyword">import</span> android.os.UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES</span><br><span class="line"><span class="keyword">import</span> android.os.UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES_GLOBALLY</span><br><span class="line"><span class="keyword">import</span> androidx.<span class="keyword">annotation</span>.AnyThread</span><br><span class="line"><span class="keyword">import</span> androidx.<span class="keyword">annotation</span>.VisibleForTesting</span><br><span class="line"><span class="keyword">import</span> androidx.<span class="keyword">annotation</span>.WorkerThread</span><br><span class="line"><span class="keyword">import</span> androidx.core.content.ContextCompat.getSystemService</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.DelicateCoroutinesApi</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Dispatchers</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.GlobalScope</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.Job</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.cancel</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.flow.MutableStateFlow</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.launch</span><br><span class="line"><span class="keyword">import</span> kotlinx.coroutines.withContext</span><br><span class="line"><span class="keyword">import</span> kotlinx.serialization.SerializationException</span><br><span class="line"><span class="keyword">import</span> mu.KotlinLogging</span><br><span class="line"><span class="keyword">import</span> org.fdroid.database.AppOverviewItem</span><br><span class="line"><span class="keyword">import</span> org.fdroid.database.FDroidDatabase</span><br><span class="line"><span class="keyword">import</span> org.fdroid.database.MinimalApp</span><br><span class="line"><span class="keyword">import</span> org.fdroid.database.NewRepository</span><br><span class="line"><span class="keyword">import</span> org.fdroid.database.Repository</span><br><span class="line"><span class="keyword">import</span> org.fdroid.database.RepositoryDaoInt</span><br><span class="line"><span class="keyword">import</span> org.fdroid.download.DownloaderFactory</span><br><span class="line"><span class="keyword">import</span> org.fdroid.download.HttpManager</span><br><span class="line"><span class="keyword">import</span> org.fdroid.download.HttpManager.Companion.isInvalidHttpUrl</span><br><span class="line"><span class="keyword">import</span> org.fdroid.download.NotFoundException</span><br><span class="line"><span class="keyword">import</span> org.fdroid.index.IndexFormatVersion</span><br><span class="line"><span class="keyword">import</span> org.fdroid.index.RepoUriBuilder</span><br><span class="line"><span class="keyword">import</span> org.fdroid.index.SigningException</span><br><span class="line"><span class="keyword">import</span> org.fdroid.index.TempFileProvider</span><br><span class="line"><span class="keyword">import</span> org.fdroid.repo.AddRepoError.ErrorType.INVALID_FINGERPRINT</span><br><span class="line"><span class="keyword">import</span> org.fdroid.repo.AddRepoError.ErrorType.INVALID_INDEX</span><br><span class="line"><span class="keyword">import</span> org.fdroid.repo.AddRepoError.ErrorType.IO_ERROR</span><br><span class="line"><span class="keyword">import</span> org.fdroid.repo.AddRepoError.ErrorType.IS_ARCHIVE_REPO</span><br><span class="line"><span class="keyword">import</span> org.fdroid.repo.AddRepoError.ErrorType.UNKNOWN_SOURCES_DISALLOWED</span><br><span class="line"><span class="keyword">import</span> java.io.IOException</span><br><span class="line"><span class="keyword">import</span> java.net.Proxy</span><br><span class="line"><span class="keyword">import</span> kotlin.coroutines.CoroutineContext</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">const</span> <span class="keyword">val</span> REPO_ID = <span class="number">0L</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">AddRepoState</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">object</span> None : AddRepoState()</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Fetching</span>(</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> repo: Repository?,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> apps: List&lt;MinimalApp&gt;,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> fetchResult: FetchResult?,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * true if fetching is complete.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> done: <span class="built_in">Boolean</span> = <span class="literal">false</span>,</span><br><span class="line">) : AddRepoState() {</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * true if the repository can be added (be it as new [Repository] or new mirror).</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> canAdd: <span class="built_in">Boolean</span> = repo != <span class="literal">null</span> &amp;&amp;</span><br><span class="line">        (fetchResult != <span class="literal">null</span> &amp;&amp; fetchResult !<span class="keyword">is</span> FetchResult.IsExistingRepository)</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">toString</span><span class="params">()</span></span>: String {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Fetching(repo=<span class="subst">${repo?.address}</span>, apps=<span class="subst">${apps.size}</span>, fetchResult=<span class="variable">$fetchResult</span>, "</span> +</span><br><span class="line">            <span class="string">"done=<span class="variable">$done</span>, canAdd=<span class="variable">$canAdd</span>)"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">object</span> Adding : AddRepoState()</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Added</span>(</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> repo: Repository,</span><br><span class="line">) : AddRepoState()</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">AddRepoError</span>(</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> errorType: ErrorType,</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">val</span> exception: Exception? = <span class="literal">null</span>,</span><br><span class="line">) : AddRepoState() {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">enum</span> <span class="keyword">class</span> <span class="title class_">ErrorType</span> {</span><br><span class="line">        UNKNOWN_SOURCES_DISALLOWED,</span><br><span class="line">        INVALID_FINGERPRINT,</span><br><span class="line">        IS_ARCHIVE_REPO,</span><br><span class="line">        INVALID_INDEX,</span><br><span class="line">        IO_ERROR,</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title class_">FetchResult</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">IsNewRepository</span>(<span class="keyword">internal</span> <span class="keyword">val</span> addUrl: String) : FetchResult()</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">data</span> <span class="keyword">class</span> <span class="title class_">IsNewMirror</span>(</span><br><span class="line">        <span class="keyword">internal</span> <span class="keyword">val</span> existingRepoId: <span class="built_in">Long</span>,</span><br><span class="line">        <span class="keyword">internal</span> <span class="keyword">val</span> newMirrorUrl: String,</span><br><span class="line">    ) : FetchResult()</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">object</span> IsExistingRepository : FetchResult()</span><br><span class="line">}</span><br><span class="line"><span class="meta">@OptIn(DelicateCoroutinesApi::class)</span></span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">class</span> <span class="title class_">RepoAdder</span>(</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> context: Context,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> db: FDroidDatabase,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> tempFileProvider: TempFileProvider,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> downloaderFactory: DownloaderFactory,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> httpManager: HttpManager,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> repoUriGetter: RepoUriGetter = RepoUriGetter,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> repoUriBuilder: RepoUriBuilder = defaultRepoUriBuilder,</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> coroutineContext: CoroutineContext = Dispatchers.IO,</span><br><span class="line">) {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> log = KotlinLogging.logger {}</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> repositoryDao = db.getRepositoryDao() <span class="keyword">as</span> RepositoryDaoInt</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">val</span> addRepoState: MutableStateFlow&lt;AddRepoState&gt; = MutableStateFlow(None)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> fetchJob: Job? = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">fetchRepository</span><span class="params">(url: <span class="type">String</span>, proxy: <span class="type">Proxy</span>?)</span></span> {</span><br><span class="line">        fetchJob = GlobalScope.launch(coroutineContext) {</span><br><span class="line">            fetchRepositoryInt(url, proxy)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@WorkerThread</span></span><br><span class="line">    <span class="meta">@VisibleForTesting</span></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">fetchRepositoryInt</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        url: <span class="type">String</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        proxy: <span class="type">Proxy</span>? = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> {</span><br><span class="line">        <span class="keyword">if</span> (hasDisallowInstallUnknownSources(context)) {</span><br><span class="line">            addRepoState.value = AddRepoError(UNKNOWN_SOURCES_DISALLOWED)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// get repo url and fingerprint</span></span><br><span class="line">        <span class="keyword">val</span> nUri = repoUriGetter.getUri(url)</span><br><span class="line">        log.info(<span class="string">"Parsed URI: <span class="variable">$nUri</span>"</span>)</span><br><span class="line">        <span class="keyword">if</span> (nUri.uri.scheme !<span class="keyword">in</span> listOf(<span class="string">"content"</span>, <span class="string">"file"</span>) &amp;&amp;</span><br><span class="line">            isInvalidHttpUrl(nUri.uri.toString())</span><br><span class="line">        ) {</span><br><span class="line">            <span class="keyword">val</span> e = IllegalArgumentException(<span class="string">"Unsupported URI: <span class="subst">${nUri.uri}</span>"</span>)</span><br><span class="line">            addRepoState.value = AddRepoError(INVALID_INDEX, e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (nUri.uri.lastPathSegment == <span class="string">"archive"</span>) {</span><br><span class="line">            addRepoState.value = AddRepoError(IS_ARCHIVE_REPO)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// some plumping to receive the repo preview</span></span><br><span class="line">        <span class="keyword">var</span> receivedRepo: Repository? = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">val</span> apps = ArrayList&lt;AppOverviewItem&gt;()</span><br><span class="line">        <span class="keyword">var</span> fetchResult: FetchResult? = <span class="literal">null</span></span><br><span class="line">        <span class="keyword">val</span> receiver = <span class="keyword">object</span> : RepoPreviewReceiver {</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRepoReceived</span><span class="params">(repo: <span class="type">Repository</span>)</span></span> {</span><br><span class="line">                receivedRepo = repo</span><br><span class="line">                <span class="keyword">if</span> (repo.address <span class="keyword">in</span> knownRepos) {</span><br><span class="line">                    <span class="keyword">val</span> knownFingerprint = knownRepos[repo.address]</span><br><span class="line">                    <span class="keyword">if</span> (knownFingerprint != repo.fingerprint) <span class="keyword">throw</span> SigningException(</span><br><span class="line">                        <span class="string">"Known fingerprint different from given one: <span class="subst">${repo.fingerprint}</span>"</span></span><br><span class="line">                    )</span><br><span class="line">                }</span><br><span class="line">                fetchResult = getFetchResult(nUri.uri.toString(), repo)</span><br><span class="line">                addRepoState.value = Fetching(receivedRepo, apps.toList(), fetchResult)</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAppReceived</span><span class="params">(app: <span class="type">AppOverviewItem</span>)</span></span> {</span><br><span class="line">                apps.add(app)</span><br><span class="line">                addRepoState.value = Fetching(receivedRepo, apps.toList(), fetchResult)</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// set a state early, so the ui can show progress animation</span></span><br><span class="line">        addRepoState.value = Fetching(receivedRepo, apps, fetchResult)</span><br><span class="line">        <span class="comment">// try fetching repo with v2 format first and fallback to v1</span></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            fetchRepo(nUri.uri, nUri.fingerprint, proxy, nUri.username, nUri.password, receiver)</span><br><span class="line">        } <span class="keyword">catch</span> (e: SigningException) {</span><br><span class="line">            log.error(e) { <span class="string">"Error verifying repo with given fingerprint."</span> }</span><br><span class="line">            addRepoState.value = AddRepoError(INVALID_FINGERPRINT, e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        } <span class="keyword">catch</span> (e: IOException) {</span><br><span class="line">            log.error(e) { <span class="string">"Error fetching repo."</span> }</span><br><span class="line">            addRepoState.value = AddRepoError(IO_ERROR, e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        } <span class="keyword">catch</span> (e: SerializationException) {</span><br><span class="line">            log.error(e) { <span class="string">"Error fetching repo."</span> }</span><br><span class="line">            addRepoState.value = AddRepoError(INVALID_INDEX, e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        } <span class="keyword">catch</span> (e: NotFoundException) { <span class="comment">// v1 repos can also have 404</span></span><br><span class="line">            log.error(e) { <span class="string">"Error fetching repo."</span> }</span><br><span class="line">            addRepoState.value = AddRepoError(INVALID_INDEX, e)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// set final result</span></span><br><span class="line">        <span class="keyword">val</span> finalRepo = receivedRepo</span><br><span class="line">        <span class="keyword">if</span> (finalRepo == <span class="literal">null</span>) {</span><br><span class="line">            addRepoState.value = AddRepoError(INVALID_INDEX)</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            addRepoState.value = Fetching(finalRepo, apps, fetchResult, done = <span class="literal">true</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">fetchRepo</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        uri: <span class="type">Uri</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        fingerprint: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        proxy: <span class="type">Proxy</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        username: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        password: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        receiver: <span class="type">RepoPreviewReceiver</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">val</span> repo =</span><br><span class="line">                getTempRepo(uri, IndexFormatVersion.TWO, username, password)</span><br><span class="line">            <span class="keyword">val</span> repoFetcher = RepoV2Fetcher(</span><br><span class="line">                tempFileProvider, downloaderFactory, httpManager, repoUriBuilder, proxy</span><br><span class="line">            )</span><br><span class="line">            repoFetcher.fetchRepo(uri, repo, receiver, fingerprint)</span><br><span class="line">        } <span class="keyword">catch</span> (e: NotFoundException) {</span><br><span class="line">            log.warn(e) { <span class="string">"Did not find v2 repo, trying v1 now."</span> }</span><br><span class="line">            <span class="comment">// try to fetch v1 repo</span></span><br><span class="line">            <span class="keyword">val</span> repo =</span><br><span class="line">                getTempRepo(uri, IndexFormatVersion.ONE, username, password)</span><br><span class="line">            <span class="keyword">val</span> repoFetcher = RepoV1Fetcher(tempFileProvider, downloaderFactory, repoUriBuilder)</span><br><span class="line">            repoFetcher.fetchRepo(uri, repo, receiver, fingerprint)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getFetchResult</span><span class="params">(url: <span class="type">String</span>, repo: <span class="type">Repository</span>)</span></span>: FetchResult {</span><br><span class="line">        <span class="keyword">val</span> cert = repo.certificate ?: error(<span class="string">"Certificate was null"</span>)</span><br><span class="line">        <span class="keyword">val</span> existingRepo = repositoryDao.getRepository(cert)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span> (existingRepo == <span class="literal">null</span>) {</span><br><span class="line">            FetchResult.IsNewRepository(url)</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">val</span> existingMirror = <span class="keyword">if</span> (existingRepo.address.trimEnd(<span class="string">'/'</span>) == url) {</span><br><span class="line">                url</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                existingRepo.mirrors.find { it.url.trimEnd(<span class="string">'/'</span>) == url }</span><br><span class="line">                    ?: existingRepo.userMirrors.find { it.trimEnd(<span class="string">'/'</span>) == url }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (existingMirror == <span class="literal">null</span>) {</span><br><span class="line">                FetchResult.IsNewMirror(existingRepo.repoId, url)</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                FetchResult.IsExistingRepository</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@WorkerThread</span></span><br><span class="line">    <span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">addFetchedRepository</span><span class="params">()</span></span>: Repository? {</span><br><span class="line">        <span class="comment">// prevent double calls (e.g. caused by double tapping a UI button)</span></span><br><span class="line">        <span class="keyword">if</span> (addRepoState.compareAndSet(Adding, Adding)) <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">        <span class="comment">// cancel fetch preview job, so it stops emitting new states</span></span><br><span class="line">        fetchJob?.cancel()</span><br><span class="line">        <span class="comment">// get current state before changing it</span></span><br><span class="line">        <span class="keyword">val</span> state = (addRepoState.value <span class="keyword">as</span>? Fetching)</span><br><span class="line">            ?: <span class="keyword">throw</span> IllegalStateException(<span class="string">"Unexpected state: <span class="subst">${addRepoState.value}</span>"</span>)</span><br><span class="line">        addRepoState.value = Adding</span><br><span class="line">        <span class="keyword">val</span> repo = state.repo ?: <span class="keyword">throw</span> IllegalStateException(<span class="string">"No repo: <span class="subst">${addRepoState.value}</span>"</span>)</span><br><span class="line">        <span class="keyword">val</span> fetchResult = state.fetchResult</span><br><span class="line">            ?: <span class="keyword">throw</span> IllegalStateException(<span class="string">"No fetchResult: <span class="subst">${addRepoState.value}</span>"</span>)</span><br><span class="line">        <span class="keyword">val</span> modifiedRepo: Repository = <span class="keyword">when</span> (fetchResult) {</span><br><span class="line">            <span class="keyword">is</span> FetchResult.IsExistingRepository -&gt; error(<span class="string">"Unexpected result: <span class="variable">$fetchResult</span>"</span>)</span><br><span class="line">            <span class="keyword">is</span> FetchResult.IsNewRepository -&gt; {</span><br><span class="line">                <span class="comment">// reset the timestamp of the actual repo,</span></span><br><span class="line">                <span class="comment">// so a following repo update will pick this up</span></span><br><span class="line">                <span class="keyword">val</span> newRepo = NewRepository(</span><br><span class="line">                    name = repo.repository.name,</span><br><span class="line">                    icon = repo.repository.icon ?: emptyMap(),</span><br><span class="line">                    address = repo.address,</span><br><span class="line">                    formatVersion = repo.formatVersion,</span><br><span class="line">                    certificate = repo.certificate ?: error(<span class="string">"Repo had no certificate"</span>),</span><br><span class="line">                    username = repo.username,</span><br><span class="line">                    password = repo.password,</span><br><span class="line">                )</span><br><span class="line">                db.runInTransaction&lt;Repository&gt; {</span><br><span class="line">                    <span class="keyword">val</span> repoId = repositoryDao.insert(newRepo)</span><br><span class="line">                    <span class="comment">// add user mirror, if URL is not the repo address and not a known mirror</span></span><br><span class="line">                    <span class="keyword">if</span> (fetchResult.addUrl != repo.address.trimEnd(<span class="string">'/'</span>) &amp;&amp;</span><br><span class="line">                        repo.mirrors.find { fetchResult.addUrl == it.url.trimEnd(<span class="string">'/'</span>) } == <span class="literal">null</span></span><br><span class="line">                    ) {</span><br><span class="line">                        <span class="keyword">val</span> userMirrors = listOf(fetchResult.addUrl)</span><br><span class="line">                        repositoryDao.updateUserMirrors(repoId, userMirrors)</span><br><span class="line">                    }</span><br><span class="line">                    repositoryDao.getRepository(repoId) ?: error(<span class="string">"New repository not found in DB"</span>)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">is</span> FetchResult.IsNewMirror -&gt; {</span><br><span class="line">                <span class="keyword">val</span> repoId = fetchResult.existingRepoId</span><br><span class="line">                db.runInTransaction&lt;Repository&gt; {</span><br><span class="line">                    <span class="keyword">val</span> existingRepo = repositoryDao.getRepository(repoId)</span><br><span class="line">                        ?: error(<span class="string">"No repo with <span class="variable">$repoId</span>"</span>)</span><br><span class="line">                    <span class="keyword">val</span> userMirrors = existingRepo.userMirrors.toMutableList().apply {</span><br><span class="line">                        add(fetchResult.newMirrorUrl)</span><br><span class="line">                    }</span><br><span class="line">                    repositoryDao.updateUserMirrors(repoId, userMirrors)</span><br><span class="line">                    existingRepo</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        addRepoState.value = Added(modifiedRepo)</span><br><span class="line">        <span class="keyword">return</span> modifiedRepo</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">internal</span> <span class="function"><span class="keyword">fun</span> <span class="title">abortAddingRepo</span><span class="params">()</span></span> {</span><br><span class="line">        addRepoState.value = None</span><br><span class="line">        fetchJob?.cancel()</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@AnyThread</span></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">suspend</span> <span class="function"><span class="keyword">fun</span> <span class="title">addArchiveRepo</span><span class="params">(repo: <span class="type">Repository</span>, proxy: <span class="type">Proxy</span>? = <span class="literal">null</span>)</span></span> =</span><br><span class="line">        withContext(coroutineContext) {</span><br><span class="line">            <span class="keyword">if</span> (repo.isArchiveRepo) error { <span class="string">"Repo <span class="subst">${repo.address}</span> is already an archive repo."</span> }</span><br><span class="line">            <span class="keyword">val</span> address = repo.address.replace(Regex(<span class="string">"repo/?$"</span>), <span class="string">"archive"</span>)</span><br><span class="line">            <span class="meta">@Suppress(<span class="string">"PARAMETER_NAME_CHANGED_ON_OVERRIDE"</span>)</span></span><br><span class="line">            <span class="keyword">val</span> receiver = <span class="keyword">object</span> : RepoPreviewReceiver {</span><br><span class="line">                <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onRepoReceived</span><span class="params">(archiveRepo: <span class="type">Repository</span>)</span></span> {</span><br><span class="line">                    <span class="comment">// reset the timestamp of the actual repo,</span></span><br><span class="line">                    <span class="comment">// so a following repo update will pick this up</span></span><br><span class="line">                    <span class="keyword">val</span> newRepo = NewRepository(</span><br><span class="line">                        name = archiveRepo.repository.name,</span><br><span class="line">                        icon = archiveRepo.repository.icon ?: emptyMap(),</span><br><span class="line">                        address = archiveRepo.address,</span><br><span class="line">                        formatVersion = archiveRepo.formatVersion,</span><br><span class="line">                        certificate = archiveRepo.certificate ?: error(<span class="string">"Repo had no certificate"</span>),</span><br><span class="line">                        username = archiveRepo.username,</span><br><span class="line">                        password = archiveRepo.password,</span><br><span class="line">                    )</span><br><span class="line">                    db.runInTransaction {</span><br><span class="line">                        <span class="keyword">val</span> repoId = repositoryDao.insert(newRepo)</span><br><span class="line">                        repositoryDao.setWeight(repoId, repo.weight - <span class="number">1</span>)</span><br><span class="line">                    }</span><br><span class="line">                    cancel(<span class="string">"expected"</span>) <span class="comment">// no need to continue downloading the entire repo</span></span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onAppReceived</span><span class="params">(app: <span class="type">AppOverviewItem</span>)</span></span> {</span><br><span class="line">                    <span class="comment">// no-op</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">val</span> uri = Uri.parse(address)</span><br><span class="line">            fetchRepo(uri, repo.fingerprint, proxy, repo.username, repo.password, receiver)</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">hasDisallowInstallUnknownSources</span><span class="params">(context: <span class="type">Context</span>)</span></span>: <span class="built_in">Boolean</span> {</span><br><span class="line">        <span class="keyword">val</span> userManager = getSystemService(context, UserManager::<span class="keyword">class</span>.java)</span><br><span class="line">            ?: error(<span class="string">"No UserManager available."</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">if</span> (SDK_INT &lt; <span class="number">29</span>) userManager.hasUserRestriction(DISALLOW_INSTALL_UNKNOWN_SOURCES)</span><br><span class="line">        <span class="keyword">else</span> userManager.hasUserRestriction(DISALLOW_INSTALL_UNKNOWN_SOURCES) ||</span><br><span class="line">            userManager.hasUserRestriction(DISALLOW_INSTALL_UNKNOWN_SOURCES_GLOBALLY)</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">getTempRepo</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        uri: <span class="type">Uri</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        indexFormatVersion: <span class="type">IndexFormatVersion</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">        username: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">        password: <span class="type">String</span>?,</span></span></span><br><span class="line"><span class="params"><span class="function">    )</span></span> = Repository(</span><br><span class="line">        repoId = REPO_ID,</span><br><span class="line">        address = uri.toString(),</span><br><span class="line">        timestamp = -<span class="number">1L</span>,</span><br><span class="line">        formatVersion = indexFormatVersion,</span><br><span class="line">        certificate = <span class="literal">null</span>,</span><br><span class="line">        version = <span class="number">0L</span>,</span><br><span class="line">        weight = <span class="number">0</span>,</span><br><span class="line">        lastUpdated = -<span class="number">1L</span>,</span><br><span class="line">        username = username,</span><br><span class="line">        password = password,</span><br><span class="line">    )</span><br><span class="line">}</span><br><span class="line"><span class="keyword">internal</span> <span class="keyword">val</span> defaultRepoUriBuilder = RepoUriBuilder { repo, pathElements -&gt;</span><br><span class="line">    <span class="keyword">val</span> builder = Uri.parse(repo.address).buildUpon()</span><br><span class="line">    pathElements.forEach { builder.appendEncodedPath(it) }</span><br><span class="line">    builder.build()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<h3 id="解释语言">解释语言</h3>
<h4 id="Python">Python</h4>
<p>来源：<a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/yt_dlp/downloader/dash.py">https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/yt_dlp/downloader/dash.py</a></p>
<figure class="highlight python"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> get_suitable_downloader</span><br><span class="line"><span class="keyword">from</span> .fragment <span class="keyword">import</span> FragmentFD</span><br><span class="line"><span class="keyword">from</span> ..utils <span class="keyword">import</span> update_url_query, urljoin</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DashSegmentsFD</span>(<span class="title class_ inherited__">FragmentFD</span>):</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Download segments in a DASH manifest. External downloaders can take over</span></span><br><span class="line"><span class="string">    the fragment downloads by supporting the 'dash_frag_urls' protocol</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    FD_NAME = <span class="string">'dashsegments'</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">real_download</span>(<span class="params">self, filename, info_dict</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'http_dash_segments_generator'</span> <span class="keyword">in</span> info_dict[<span class="string">'protocol'</span>].split(<span class="string">'+'</span>):</span><br><span class="line">            real_downloader = <span class="literal">None</span>  <span class="comment"># No external FD can support --live-from-start</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> info_dict.get(<span class="string">'is_live'</span>):</span><br><span class="line">                self.report_error(<span class="string">'Live DASH videos are not supported'</span>)</span><br><span class="line">            real_downloader = get_suitable_downloader(</span><br><span class="line">                info_dict, self.params, <span class="literal">None</span>, protocol=<span class="string">'dash_frag_urls'</span>, to_stdout=(filename == <span class="string">'-'</span>))</span><br><span class="line">        real_start = time.time()</span><br><span class="line">        requested_formats = [{**info_dict, **fmt} <span class="keyword">for</span> fmt <span class="keyword">in</span> info_dict.get(<span class="string">'requested_formats'</span>, [])]</span><br><span class="line">        args = []</span><br><span class="line">        <span class="keyword">for</span> fmt <span class="keyword">in</span> requested_formats <span class="keyword">or</span> [info_dict]:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                fragment_count = <span class="number">1</span> <span class="keyword">if</span> self.params.get(<span class="string">'test'</span>) <span class="keyword">else</span> <span class="built_in">len</span>(fmt[<span class="string">'fragments'</span>])</span><br><span class="line">            <span class="keyword">except</span> TypeError:</span><br><span class="line">                fragment_count = <span class="literal">None</span></span><br><span class="line">            ctx = {</span><br><span class="line">                <span class="string">'filename'</span>: fmt.get(<span class="string">'filepath'</span>) <span class="keyword">or</span> filename,</span><br><span class="line">                <span class="string">'live'</span>: <span class="string">'is_from_start'</span> <span class="keyword">if</span> fmt.get(<span class="string">'is_from_start'</span>) <span class="keyword">else</span> fmt.get(<span class="string">'is_live'</span>),</span><br><span class="line">                <span class="string">'total_frags'</span>: fragment_count,</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> real_downloader:</span><br><span class="line">                self._prepare_external_frag_download(ctx)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                self._prepare_and_start_frag_download(ctx, fmt)</span><br><span class="line">            ctx[<span class="string">'start'</span>] = real_start</span><br><span class="line">            extra_query = <span class="literal">None</span></span><br><span class="line">            extra_param_to_segment_url = info_dict.get(<span class="string">'extra_param_to_segment_url'</span>)</span><br><span class="line">            <span class="keyword">if</span> extra_param_to_segment_url:</span><br><span class="line">                extra_query = urllib.parse.parse_qs(extra_param_to_segment_url)</span><br><span class="line">            fragments_to_download = self._get_fragments(fmt, ctx, extra_query)</span><br><span class="line">            <span class="keyword">if</span> real_downloader:</span><br><span class="line">                self.to_screen(</span><br><span class="line">                    <span class="string">f'[<span class="subst">{self.FD_NAME}</span>] Fragment downloads will be delegated to <span class="subst">{real_downloader.get_basename()}</span>'</span>)</span><br><span class="line">                info_dict[<span class="string">'fragments'</span>] = <span class="built_in">list</span>(fragments_to_download)</span><br><span class="line">                fd = real_downloader(self.ydl, self.params)</span><br><span class="line">                <span class="keyword">return</span> fd.real_download(filename, info_dict)</span><br><span class="line">            args.append([ctx, fragments_to_download, fmt])</span><br><span class="line">        <span class="keyword">return</span> self.download_and_append_fragments_multiple(*args, is_fatal=<span class="keyword">lambda</span> idx: idx == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_resolve_fragments</span>(<span class="params">self, fragments, ctx</span>):</span><br><span class="line">        fragments = fragments(ctx) <span class="keyword">if</span> <span class="built_in">callable</span>(fragments) <span class="keyword">else</span> fragments</span><br><span class="line">        <span class="keyword">return</span> [<span class="built_in">next</span>(<span class="built_in">iter</span>(fragments))] <span class="keyword">if</span> self.params.get(<span class="string">'test'</span>) <span class="keyword">else</span> fragments</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_get_fragments</span>(<span class="params">self, fmt, ctx, extra_query</span>):</span><br><span class="line">        fragment_base_url = fmt.get(<span class="string">'fragment_base_url'</span>)</span><br><span class="line">        fragments = self._resolve_fragments(fmt[<span class="string">'fragments'</span>], ctx)</span><br><span class="line">        frag_index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i, fragment <span class="keyword">in</span> <span class="built_in">enumerate</span>(fragments):</span><br><span class="line">            frag_index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> frag_index &lt;= ctx[<span class="string">'fragment_index'</span>]:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            fragment_url = fragment.get(<span class="string">'url'</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> fragment_url:</span><br><span class="line">                <span class="keyword">assert</span> fragment_base_url</span><br><span class="line">                fragment_url = urljoin(fragment_base_url, fragment[<span class="string">'path'</span>])</span><br><span class="line">            <span class="keyword">if</span> extra_query:</span><br><span class="line">                fragment_url = update_url_query(fragment_url, extra_query)</span><br><span class="line">            <span class="keyword">yield</span> {</span><br><span class="line">                <span class="string">'frag_index'</span>: frag_index,</span><br><span class="line">                <span class="string">'fragment_count'</span>: fragment.get(<span class="string">'fragment_count'</span>),</span><br><span class="line">                <span class="string">'index'</span>: i,</span><br><span class="line">                <span class="string">'url'</span>: fragment_url,</span><br><span class="line">            }</span><br></pre></td></tr></tbody></table></figure>
<h4 id="Shell">Shell</h4>
<p>来源：<a href="https://raw.githubusercontent.com/f-droid/fdroidclient/master/create_ota.sh">https://raw.githubusercontent.com/f-droid/fdroidclient/master/create_ota.sh</a></p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Script to prepare an update.zip containing F-Droid</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"></span><br><span class="line">PROG_DIR=$(<span class="built_in">dirname</span> $(<span class="built_in">realpath</span> <span class="variable">$0</span>))</span><br><span class="line"></span><br><span class="line">TMP_DIR=$(<span class="built_in">mktemp</span> -d -t fdroidclient.tmp.XXXXXXXX)</span><br><span class="line"><span class="built_in">trap</span> <span class="string">"rm -rf <span class="variable">$TMP_DIR</span>"</span> EXIT</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">error</span></span>() {</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"*** ERROR: "</span> <span class="variable">$@</span></span><br><span class="line">    usage</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">usage</span></span>() {</span><br><span class="line">    <span class="built_in">cat</span> &lt;&lt; <span class="string">EOFU</span></span><br><span class="line"><span class="string">Usage: $0 variant</span></span><br><span class="line"><span class="string">where:</span></span><br><span class="line"><span class="string"> - variant is one of: debug, release, or binary</span></span><br><span class="line"><span class="string">EOFU</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># Parse input</span></span><br><span class="line">VARIANT=<span class="string">"<span class="variable">$1</span>"</span></span><br><span class="line">[[ -z <span class="string">"<span class="variable">$VARIANT</span>"</span> ]] &amp;&amp; error <span class="string">"Missing variant"</span></span><br><span class="line"></span><br><span class="line">VERSIONCODE=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line">GPG=<span class="string">"gpg --keyring <span class="variable">$PROG_DIR</span>/f-droid.org-signing-key.gpg --no-default-keyring --trust-model always"</span></span><br><span class="line"></span><br><span class="line">GITVERSION=$(git describe --tags --always)</span><br><span class="line"></span><br><span class="line">FDROID_APK=F-Droid.apk</span><br><span class="line"></span><br><span class="line"><span class="comment"># Collect files</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$TMP_DIR</span>/META-INF/com/google/android/</span><br><span class="line"><span class="built_in">cp</span> app/src/main/scripts/update-binary <span class="variable">$TMP_DIR</span>/META-INF/com/google/android/</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$VARIANT</span> == <span class="string">"binary"</span> ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">if</span> [ -z <span class="variable">$VERSIONCODE</span> ]; <span class="keyword">then</span></span><br><span class="line">        curl -L https://f-droid.org/<span class="variable">$FDROID_APK</span> &gt; <span class="variable">$TMP_DIR</span>/<span class="variable">$FDROID_APK</span></span><br><span class="line">        curl -L https://f-droid.org/<span class="variable">${FDROID_APK}</span>.asc &gt; <span class="variable">$TMP_DIR</span>/<span class="variable">${FDROID_APK}</span>.asc</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        GITVERSION=<span class="variable">$VERSIONCODE</span></span><br><span class="line">        DL_APK=org.fdroid.fdroid_<span class="variable">${VERSIONCODE}</span>.apk</span><br><span class="line">        curl -L https://f-droid.org/repo/<span class="variable">$DL_APK</span> &gt; <span class="variable">$TMP_DIR</span>/<span class="variable">$FDROID_APK</span></span><br><span class="line">        curl -L https://f-droid.org/repo/<span class="variable">${DL_APK}</span>.asc &gt; <span class="variable">$TMP_DIR</span>/<span class="variable">${FDROID_APK}</span>.asc</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="variable">$GPG</span> --verify <span class="variable">$TMP_DIR</span>/<span class="variable">${FDROID_APK}</span>.asc</span><br><span class="line">    <span class="built_in">rm</span> <span class="variable">$TMP_DIR</span>/<span class="variable">${FDROID_APK}</span>.asc</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$PROG_DIR</span></span><br><span class="line">    ./gradlew assemble$(<span class="built_in">echo</span> <span class="variable">$VARIANT</span> | <span class="built_in">tr</span> <span class="string">'dr'</span> <span class="string">'DR'</span>)</span><br><span class="line">    OUT_DIR=<span class="variable">$PROG_DIR</span>/app/build/outputs/apk</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$VARIANT</span> == <span class="string">"debug"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">cp</span> <span class="variable">$OUT_DIR</span>/app-<span class="variable">${VARIANT}</span>.apk \</span><br><span class="line">           <span class="variable">$TMP_DIR</span>/<span class="variable">$FDROID_APK</span></span><br><span class="line">    <span class="keyword">elif</span> [ -f <span class="variable">$OUT_DIR</span>/app-<span class="variable">${VARIANT}</span>-signed.apk ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">cp</span> <span class="variable">$OUT_DIR</span>/app-<span class="variable">${VARIANT}</span>-signed.apk \</span><br><span class="line">           <span class="variable">$TMP_DIR</span>/<span class="variable">$FDROID_APK</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">cp</span> <span class="variable">$OUT_DIR</span>/app-<span class="variable">${VARIANT}</span>-unsigned.apk \</span><br><span class="line">           <span class="variable">$TMP_DIR</span>/<span class="variable">$FDROID_APK</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Make zip</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$VARIANT</span> == <span class="string">"binary"</span> ] ; <span class="keyword">then</span></span><br><span class="line">    ZIPBASE=F-DroidFromBinaries-<span class="variable">${GITVERSION}</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ZIPBASE=F-Droid-<span class="variable">${GITVERSION}</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$VARIANT</span> == <span class="string">"debug"</span> ]; <span class="keyword">then</span></span><br><span class="line">    ZIP=<span class="variable">${ZIPBASE}</span>-debug.zip</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    ZIP=<span class="variable">${ZIPBASE}</span>.zip</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">OUT_DIR=<span class="variable">$PROG_DIR</span>/app/build/distributions</span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$OUT_DIR</span></span><br><span class="line">[ -f <span class="variable">$OUT_DIR</span>/<span class="variable">$ZIP</span> ] &amp;&amp; <span class="built_in">rm</span> -f <span class="variable">$OUT_DIR</span>/<span class="variable">$ZIP</span></span><br><span class="line"><span class="built_in">pushd</span> <span class="variable">$TMP_DIR</span></span><br><span class="line">zip -r <span class="variable">$OUT_DIR</span>/<span class="variable">$ZIP</span> .</span><br><span class="line"><span class="built_in">popd</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="JavaScript">JavaScript</h4>
<p>来源：<a href="https://raw.githubusercontent.com/jerryc127/hexo-theme-butterfly/master/source/js/search/local-search.js">https://raw.githubusercontent.com/jerryc127/hexo-theme-butterfly/master/source/js/search/local-search.js</a></p>
<figure class="highlight javascript"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Refer to hexo-generator-searchdb</span></span><br><span class="line"><span class="comment"> * https://github.com/next-theme/hexo-generator-searchdb/blob/main/dist/search.js</span></span><br><span class="line"><span class="comment"> * Modified by hexo-theme-butterfly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LocalSearch</span> {</span><br><span class="line">  <span class="title function_">constructor</span> ({</span><br><span class="line">    path = <span class="string">''</span>,</span><br><span class="line">    <span class="built_in">unescape</span> = <span class="literal">false</span>,</span><br><span class="line">    top_n_per_article = <span class="number">1</span></span><br><span class="line">  }) {</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">path</span> = path</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">unescape</span> = <span class="built_in">unescape</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">top_n_per_article</span> = top_n_per_article</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">isfetched</span> = <span class="literal">false</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">datas</span> = <span class="literal">null</span></span><br><span class="line">  }</span><br><span class="line">  getIndexByWord (words, text, caseSensitive = <span class="literal">false</span>) {</span><br><span class="line">    <span class="keyword">const</span> index = []</span><br><span class="line">    <span class="keyword">const</span> included = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">    <span class="keyword">if</span> (!caseSensitive) {</span><br><span class="line">      text = text.<span class="title function_">toLowerCase</span>()</span><br><span class="line">    }</span><br><span class="line">    words.<span class="title function_">forEach</span>(<span class="function"><span class="params">word</span> =&gt;</span> {</span><br><span class="line">      <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">unescape</span>) {</span><br><span class="line">        <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">'div'</span>)</span><br><span class="line">        div.<span class="property">innerText</span> = word</span><br><span class="line">        word = div.<span class="property">innerHTML</span></span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">const</span> wordLen = word.<span class="property">length</span></span><br><span class="line">      <span class="keyword">if</span> (wordLen === <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line">      <span class="keyword">let</span> startPosition = <span class="number">0</span></span><br><span class="line">      <span class="keyword">let</span> position = -<span class="number">1</span></span><br><span class="line">      <span class="keyword">if</span> (!caseSensitive) {</span><br><span class="line">        word = word.<span class="title function_">toLowerCase</span>()</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">while</span> ((position = text.<span class="title function_">indexOf</span>(word, startPosition)) &gt; -<span class="number">1</span>) {</span><br><span class="line">        index.<span class="title function_">push</span>({ position, word })</span><br><span class="line">        included.<span class="title function_">add</span>(word)</span><br><span class="line">        startPosition = position + wordLen</span><br><span class="line">      }</span><br><span class="line">    })</span><br><span class="line">    <span class="comment">// Sort index by position of keyword</span></span><br><span class="line">    index.<span class="title function_">sort</span>(<span class="function">(<span class="params">left, right</span>) =&gt;</span> {</span><br><span class="line">      <span class="keyword">if</span> (left.<span class="property">position</span> !== right.<span class="property">position</span>) {</span><br><span class="line">        <span class="keyword">return</span> left.<span class="property">position</span> - right.<span class="property">position</span></span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">return</span> right.<span class="property">word</span>.<span class="property">length</span> - left.<span class="property">word</span>.<span class="property">length</span></span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> [index, included]</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// Merge hits into slices</span></span><br><span class="line">  mergeIntoSlice (start, end, index) {</span><br><span class="line">    <span class="keyword">let</span> item = index[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> { position, word } = item</span><br><span class="line">    <span class="keyword">const</span> hits = []</span><br><span class="line">    <span class="keyword">const</span> count = <span class="keyword">new</span> <span class="title class_">Set</span>()</span><br><span class="line">    <span class="keyword">while</span> (position + word.<span class="property">length</span> &lt;= end &amp;&amp; index.<span class="property">length</span> !== <span class="number">0</span>) {</span><br><span class="line">      count.<span class="title function_">add</span>(word)</span><br><span class="line">      hits.<span class="title function_">push</span>({</span><br><span class="line">        position,</span><br><span class="line">        <span class="attr">length</span>: word.<span class="property">length</span></span><br><span class="line">      })</span><br><span class="line">      <span class="keyword">const</span> wordEnd = position + word.<span class="property">length</span></span><br><span class="line">      <span class="comment">// Move to next position of hit</span></span><br><span class="line">      index.<span class="title function_">shift</span>()</span><br><span class="line">      <span class="keyword">while</span> (index.<span class="property">length</span> !== <span class="number">0</span>) {</span><br><span class="line">        item = index[<span class="number">0</span>]</span><br><span class="line">        position = item.<span class="property">position</span></span><br><span class="line">        word = item.<span class="property">word</span></span><br><span class="line">        <span class="keyword">if</span> (wordEnd &gt; position) {</span><br><span class="line">          index.<span class="title function_">shift</span>()</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> {</span><br><span class="line">      hits,</span><br><span class="line">      start,</span><br><span class="line">      end,</span><br><span class="line">      <span class="attr">count</span>: count.<span class="property">size</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// Highlight title and content</span></span><br><span class="line">  highlightKeyword (val, slice) {</span><br><span class="line">    <span class="keyword">let</span> result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">let</span> index = slice.<span class="property">start</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> { position, length } <span class="keyword">of</span> slice.<span class="property">hits</span>) {</span><br><span class="line">      result += val.<span class="title function_">substring</span>(index, position)</span><br><span class="line">      index = position + length</span><br><span class="line">      result += <span class="string">`&lt;mark class="search-keyword"&gt;<span class="subst">${val.substr(position, length)}</span>&lt;/mark&gt;`</span></span><br><span class="line">    }</span><br><span class="line">    result += val.<span class="title function_">substring</span>(index, slice.<span class="property">end</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">  }</span><br><span class="line">  getResultItems (keywords) {</span><br><span class="line">    <span class="keyword">const</span> resultItems = []</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">datas</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">{ title, content, url }</span>) =&gt;</span> {</span><br><span class="line">      <span class="comment">// The number of different keywords included in the article.</span></span><br><span class="line">      <span class="keyword">const</span> [indexOfTitle, keysOfTitle] = <span class="variable language_">this</span>.<span class="title function_">getIndexByWord</span>(keywords, title)</span><br><span class="line">      <span class="keyword">const</span> [indexOfContent, keysOfContent] = <span class="variable language_">this</span>.<span class="title function_">getIndexByWord</span>(keywords, content)</span><br><span class="line">      <span class="keyword">const</span> includedCount = <span class="keyword">new</span> <span class="title class_">Set</span>([...keysOfTitle, ...keysOfContent]).<span class="property">size</span></span><br><span class="line">      <span class="comment">// Show search results</span></span><br><span class="line">      <span class="keyword">const</span> hitCount = indexOfTitle.<span class="property">length</span> + indexOfContent.<span class="property">length</span></span><br><span class="line">      <span class="keyword">if</span> (hitCount === <span class="number">0</span>) <span class="keyword">return</span></span><br><span class="line">      <span class="keyword">const</span> slicesOfTitle = []</span><br><span class="line">      <span class="keyword">if</span> (indexOfTitle.<span class="property">length</span> !== <span class="number">0</span>) {</span><br><span class="line">        slicesOfTitle.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">mergeIntoSlice</span>(<span class="number">0</span>, title.<span class="property">length</span>, indexOfTitle))</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">let</span> slicesOfContent = []</span><br><span class="line">      <span class="keyword">while</span> (indexOfContent.<span class="property">length</span> !== <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">const</span> item = indexOfContent[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">const</span> { position } = item</span><br><span class="line">        <span class="comment">// Cut out 120 characters. The maxlength of .search-input is 80.</span></span><br><span class="line">        <span class="keyword">const</span> start = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>, position - <span class="number">20</span>)</span><br><span class="line">        <span class="keyword">const</span> end = <span class="title class_">Math</span>.<span class="title function_">min</span>(content.<span class="property">length</span>, position + <span class="number">100</span>)</span><br><span class="line">        slicesOfContent.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="title function_">mergeIntoSlice</span>(start, end, indexOfContent))</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// Sort slices in content by included keywords' count and hits' count</span></span><br><span class="line">      slicesOfContent.<span class="title function_">sort</span>(<span class="function">(<span class="params">left, right</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (left.<span class="property">count</span> !== right.<span class="property">count</span>) {</span><br><span class="line">          <span class="keyword">return</span> right.<span class="property">count</span> - left.<span class="property">count</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (left.<span class="property">hits</span>.<span class="property">length</span> !== right.<span class="property">hits</span>.<span class="property">length</span>) {</span><br><span class="line">          <span class="keyword">return</span> right.<span class="property">hits</span>.<span class="property">length</span> - left.<span class="property">hits</span>.<span class="property">length</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> left.<span class="property">start</span> - right.<span class="property">start</span></span><br><span class="line">      })</span><br><span class="line">      <span class="comment">// Select top N slices in content</span></span><br><span class="line">      <span class="keyword">const</span> upperBound = <span class="built_in">parseInt</span>(<span class="variable language_">this</span>.<span class="property">top_n_per_article</span>, <span class="number">10</span>)</span><br><span class="line">      <span class="keyword">if</span> (upperBound &gt;= <span class="number">0</span>) {</span><br><span class="line">        slicesOfContent = slicesOfContent.<span class="title function_">slice</span>(<span class="number">0</span>, upperBound)</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">let</span> resultItem = <span class="string">''</span></span><br><span class="line">      url = <span class="keyword">new</span> <span class="title function_">URL</span>(url, location.<span class="property">origin</span>)</span><br><span class="line">      url.<span class="property">searchParams</span>.<span class="title function_">append</span>(<span class="string">'highlight'</span>, keywords.<span class="title function_">join</span>(<span class="string">' '</span>))</span><br><span class="line">      <span class="keyword">if</span> (slicesOfTitle.<span class="property">length</span> !== <span class="number">0</span>) {</span><br><span class="line">        resultItem += <span class="string">`&lt;div class="local-search-hit-item"&gt;&lt;a href="<span class="subst">${url.href}</span>"&gt;&lt;span class="search-result-title"&gt;<span class="subst">${<span class="variable language_">this</span>.highlightKeyword(title, slicesOfTitle[<span class="number">0</span>])}</span>&lt;/span&gt;`</span></span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        resultItem += <span class="string">`&lt;div class="local-search-hit-item"&gt;&lt;a href="<span class="subst">${url.href}</span>"&gt;&lt;span class="search-result-title"&gt;<span class="subst">${title}</span>&lt;/span&gt;`</span></span><br><span class="line">      }</span><br><span class="line">      slicesOfContent.<span class="title function_">forEach</span>(<span class="function"><span class="params">slice</span> =&gt;</span> {</span><br><span class="line">        resultItem += <span class="string">`&lt;p class="search-result"&gt;<span class="subst">${<span class="variable language_">this</span>.highlightKeyword(content, slice)}</span>...&lt;/p&gt;&lt;/a&gt;`</span></span><br><span class="line">      })</span><br><span class="line">      resultItem += <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">      resultItems.<span class="title function_">push</span>({</span><br><span class="line">        <span class="attr">item</span>: resultItem,</span><br><span class="line">        <span class="attr">id</span>: resultItems.<span class="property">length</span>,</span><br><span class="line">        hitCount,</span><br><span class="line">        includedCount</span><br><span class="line">      })</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> resultItems</span><br><span class="line">  }</span><br><span class="line">  fetchData () {</span><br><span class="line">    <span class="keyword">const</span> isXml = !<span class="variable language_">this</span>.<span class="property">path</span>.<span class="title function_">endsWith</span>(<span class="string">'json'</span>)</span><br><span class="line">    <span class="title function_">fetch</span>(<span class="variable language_">this</span>.<span class="property">path</span>)</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> response.<span class="title function_">text</span>())</span><br><span class="line">      .<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> {</span><br><span class="line">        <span class="comment">// Get the contents from search data</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">isfetched</span> = <span class="literal">true</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">datas</span> = isXml</span><br><span class="line">          ? [...<span class="keyword">new</span> <span class="title class_">DOMParser</span>().<span class="title function_">parseFromString</span>(res, <span class="string">'text/xml'</span>).<span class="title function_">querySelectorAll</span>(<span class="string">'entry'</span>)].<span class="title function_">map</span>(<span class="function"><span class="params">element</span> =&gt;</span> ({</span><br><span class="line">              <span class="attr">title</span>: element.<span class="title function_">querySelector</span>(<span class="string">'title'</span>).<span class="property">textContent</span>,</span><br><span class="line">              <span class="attr">content</span>: element.<span class="title function_">querySelector</span>(<span class="string">'content'</span>).<span class="property">textContent</span>,</span><br><span class="line">              <span class="attr">url</span>: element.<span class="title function_">querySelector</span>(<span class="string">'url'</span>).<span class="property">textContent</span></span><br><span class="line">            }))</span><br><span class="line">          : <span class="title class_">JSON</span>.<span class="title function_">parse</span>(res)</span><br><span class="line">        <span class="comment">// Only match articles with non-empty titles</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">datas</span> = <span class="variable language_">this</span>.<span class="property">datas</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">data</span> =&gt;</span> data.<span class="property">title</span>).<span class="title function_">map</span>(<span class="function"><span class="params">data</span> =&gt;</span> {</span><br><span class="line">          data.<span class="property">title</span> = data.<span class="property">title</span>.<span class="title function_">trim</span>()</span><br><span class="line">          data.<span class="property">content</span> = data.<span class="property">content</span> ? data.<span class="property">content</span>.<span class="title function_">trim</span>().<span class="title function_">replace</span>(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">''</span>) : <span class="string">''</span></span><br><span class="line">          data.<span class="property">url</span> = <span class="built_in">decodeURIComponent</span>(data.<span class="property">url</span>).<span class="title function_">replace</span>(<span class="regexp">/\/{2,}/g</span>, <span class="string">'/'</span>)</span><br><span class="line">          <span class="keyword">return</span> data</span><br><span class="line">        })</span><br><span class="line">        <span class="comment">// Remove loading animation</span></span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">dispatchEvent</span>(<span class="keyword">new</span> <span class="title class_">Event</span>(<span class="string">'search:loaded'</span>))</span><br><span class="line">      })</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// Highlight by wrapping node in mark elements with the given class name</span></span><br><span class="line">  highlightText (node, slice, className) {</span><br><span class="line">    <span class="keyword">const</span> val = node.<span class="property">nodeValue</span></span><br><span class="line">    <span class="keyword">let</span> index = slice.<span class="property">start</span></span><br><span class="line">    <span class="keyword">const</span> children = []</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> { position, length } <span class="keyword">of</span> slice.<span class="property">hits</span>) {</span><br><span class="line">      <span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(val.<span class="title function_">substring</span>(index, position))</span><br><span class="line">      index = position + length</span><br><span class="line">      <span class="keyword">const</span> mark = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">'mark'</span>)</span><br><span class="line">      mark.<span class="property">className</span> = className</span><br><span class="line">      mark.<span class="title function_">appendChild</span>(<span class="variable language_">document</span>.<span class="title function_">createTextNode</span>(val.<span class="title function_">substr</span>(position, length)))</span><br><span class="line">      children.<span class="title function_">push</span>(text, mark)</span><br><span class="line">    }</span><br><span class="line">    node.<span class="property">nodeValue</span> = val.<span class="title function_">substring</span>(index, slice.<span class="property">end</span>)</span><br><span class="line">    children.<span class="title function_">forEach</span>(<span class="function"><span class="params">element</span> =&gt;</span> {</span><br><span class="line">      node.<span class="property">parentNode</span>.<span class="title function_">insertBefore</span>(element, node)</span><br><span class="line">    })</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// Highlight the search words provided in the url in the text</span></span><br><span class="line">  highlightSearchWords (body) {</span><br><span class="line">    <span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title function_">URL</span>(location.<span class="property">href</span>).<span class="property">searchParams</span>.<span class="title function_">get</span>(<span class="string">'highlight'</span>)</span><br><span class="line">    <span class="keyword">const</span> keywords = params ? params.<span class="title function_">split</span>(<span class="string">' '</span>) : []</span><br><span class="line">    <span class="keyword">if</span> (!keywords.<span class="property">length</span> || !body) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">const</span> walk = <span class="variable language_">document</span>.<span class="title function_">createTreeWalker</span>(body, <span class="title class_">NodeFilter</span>.<span class="property">SHOW_TEXT</span>, <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">const</span> allNodes = []</span><br><span class="line">    <span class="keyword">while</span> (walk.<span class="title function_">nextNode</span>()) {</span><br><span class="line">      <span class="keyword">if</span> (!walk.<span class="property">currentNode</span>.<span class="property">parentNode</span>.<span class="title function_">matches</span>(<span class="string">'button, select, textarea, .mermaid'</span>)) allNodes.<span class="title function_">push</span>(walk.<span class="property">currentNode</span>)</span><br><span class="line">    }</span><br><span class="line">    allNodes.<span class="title function_">forEach</span>(<span class="function"><span class="params">node</span> =&gt;</span> {</span><br><span class="line">      <span class="keyword">const</span> [indexOfNode] = <span class="variable language_">this</span>.<span class="title function_">getIndexByWord</span>(keywords, node.<span class="property">nodeValue</span>)</span><br><span class="line">      <span class="keyword">if</span> (!indexOfNode.<span class="property">length</span>) <span class="keyword">return</span></span><br><span class="line">      <span class="keyword">const</span> slice = <span class="variable language_">this</span>.<span class="title function_">mergeIntoSlice</span>(<span class="number">0</span>, node.<span class="property">nodeValue</span>.<span class="property">length</span>, indexOfNode)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">highlightText</span>(node, slice, <span class="string">'search-keyword'</span>)</span><br><span class="line">    })</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">'load'</span>, <span class="function">() =&gt;</span> {</span><br><span class="line"><span class="comment">// Search</span></span><br><span class="line">  <span class="keyword">const</span> { path, top_n_per_article, <span class="built_in">unescape</span>, languages } = <span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">localSearch</span></span><br><span class="line">  <span class="keyword">const</span> localSearch = <span class="keyword">new</span> <span class="title class_">LocalSearch</span>({</span><br><span class="line">    path,</span><br><span class="line">    top_n_per_article,</span><br><span class="line">    <span class="built_in">unescape</span></span><br><span class="line">  })</span><br><span class="line">  <span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">'#local-search-input input'</span>)</span><br><span class="line">  <span class="keyword">const</span> statsItem = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'local-search-stats-wrap'</span>)</span><br><span class="line">  <span class="keyword">const</span> $loadingStatus = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'loading-status'</span>)</span><br><span class="line">  <span class="keyword">const</span> isXml = !path.<span class="title function_">endsWith</span>(<span class="string">'json'</span>)</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">inputEventFunction</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">if</span> (!localSearch.<span class="property">isfetched</span>) <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">let</span> searchText = input.<span class="property">value</span>.<span class="title function_">trim</span>().<span class="title function_">toLowerCase</span>()</span><br><span class="line">    isXml &amp;&amp; (searchText = searchText.<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">'&amp;lt;'</span>).<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">'&amp;gt;'</span>))</span><br><span class="line">    <span class="keyword">if</span> (searchText !== <span class="string">''</span>) $loadingStatus.<span class="property">innerHTML</span> = <span class="string">'&lt;i class="fas fa-spinner fa-pulse"&gt;&lt;/i&gt;'</span></span><br><span class="line">    <span class="keyword">const</span> keywords = searchText.<span class="title function_">split</span>(<span class="regexp">/[-\s]+/</span>)</span><br><span class="line">    <span class="keyword">const</span> container = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'local-search-results'</span>)</span><br><span class="line">    <span class="keyword">let</span> resultItems = []</span><br><span class="line">    <span class="keyword">if</span> (searchText.<span class="property">length</span> &gt; <span class="number">0</span>) {</span><br><span class="line">    <span class="comment">// Perform local searching</span></span><br><span class="line">      resultItems = localSearch.<span class="title function_">getResultItems</span>(keywords)</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (keywords.<span class="property">length</span> === <span class="number">1</span> &amp;&amp; keywords[<span class="number">0</span>] === <span class="string">''</span>) {</span><br><span class="line">      container.<span class="property">textContent</span> = <span class="string">''</span></span><br><span class="line">      statsItem.<span class="property">textContent</span> = <span class="string">''</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (resultItems.<span class="property">length</span> === <span class="number">0</span>) {</span><br><span class="line">      container.<span class="property">textContent</span> = <span class="string">''</span></span><br><span class="line">      <span class="keyword">const</span> statsDiv = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">'div'</span>)</span><br><span class="line">      statsDiv.<span class="property">className</span> = <span class="string">'search-result-stats'</span></span><br><span class="line">      statsDiv.<span class="property">textContent</span> = languages.<span class="property">hits_empty</span>.<span class="title function_">replace</span>(<span class="regexp">/\$\{query}/</span>, searchText)</span><br><span class="line">      statsItem.<span class="property">innerHTML</span> = statsDiv.<span class="property">outerHTML</span></span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      resultItems.<span class="title function_">sort</span>(<span class="function">(<span class="params">left, right</span>) =&gt;</span> {</span><br><span class="line">        <span class="keyword">if</span> (left.<span class="property">includedCount</span> !== right.<span class="property">includedCount</span>) {</span><br><span class="line">          <span class="keyword">return</span> right.<span class="property">includedCount</span> - left.<span class="property">includedCount</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (left.<span class="property">hitCount</span> !== right.<span class="property">hitCount</span>) {</span><br><span class="line">          <span class="keyword">return</span> right.<span class="property">hitCount</span> - left.<span class="property">hitCount</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> right.<span class="property">id</span> - left.<span class="property">id</span></span><br><span class="line">      })</span><br><span class="line">      <span class="keyword">const</span> stats = languages.<span class="property">hits_stats</span>.<span class="title function_">replace</span>(<span class="regexp">/\$\{hits}/</span>, resultItems.<span class="property">length</span>)</span><br><span class="line">      container.<span class="property">innerHTML</span> = <span class="string">`&lt;div class="search-result-list"&gt;<span class="subst">${resultItems.map(result =&gt; result.item).join(<span class="string">''</span>)}</span>&lt;/div&gt;`</span></span><br><span class="line">      statsItem.<span class="property">innerHTML</span> = <span class="string">`&lt;hr&gt;&lt;div class="search-result-stats"&gt;<span class="subst">${stats}</span>&lt;/div&gt;`</span></span><br><span class="line">      <span class="variable language_">window</span>.<span class="property">pjax</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">pjax</span>.<span class="title function_">refresh</span>(container)</span><br><span class="line">    }</span><br><span class="line">    $loadingStatus.<span class="property">textContent</span> = <span class="string">''</span></span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">let</span> loadFlag = <span class="literal">false</span></span><br><span class="line">  <span class="keyword">const</span> $searchMask = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'search-mask'</span>)</span><br><span class="line">  <span class="keyword">const</span> $searchDialog = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">'#local-search .search-dialog'</span>)</span><br><span class="line">  <span class="comment">// fix safari</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">fixSafariHeight</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">innerWidth</span> &lt; <span class="number">768</span>) {</span><br><span class="line">      $searchDialog.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">'--search-height'</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span> + <span class="string">'px'</span>)</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">openSearch</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">const</span> bodyStyle = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span></span><br><span class="line">    bodyStyle.<span class="property">width</span> = <span class="string">'100%'</span></span><br><span class="line">    bodyStyle.<span class="property">overflow</span> = <span class="string">'hidden'</span></span><br><span class="line">    btf.<span class="title function_">animateIn</span>($searchMask, <span class="string">'to_show 0.5s'</span>)</span><br><span class="line">    btf.<span class="title function_">animateIn</span>($searchDialog, <span class="string">'titleScale 0.5s'</span>)</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> { input.<span class="title function_">focus</span>() }, <span class="number">300</span>)</span><br><span class="line">    <span class="keyword">if</span> (!loadFlag) {</span><br><span class="line">      !localSearch.<span class="property">isfetched</span> &amp;&amp; localSearch.<span class="title function_">fetchData</span>()</span><br><span class="line">      input.<span class="title function_">addEventListener</span>(<span class="string">'input'</span>, inputEventFunction)</span><br><span class="line">      loadFlag = <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// shortcut: ESC</span></span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">'keydown'</span>, <span class="keyword">function</span> <span class="title function_">f</span> (event) {</span><br><span class="line">      <span class="keyword">if</span> (event.<span class="property">code</span> === <span class="string">'Escape'</span>) {</span><br><span class="line">        <span class="title function_">closeSearch</span>()</span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">removeEventListener</span>(<span class="string">'keydown'</span>, f)</span><br><span class="line">      }</span><br><span class="line">    })</span><br><span class="line">    <span class="title function_">fixSafariHeight</span>()</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">'resize'</span>, fixSafariHeight)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">closeSearch</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="keyword">const</span> bodyStyle = <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">style</span></span><br><span class="line">    bodyStyle.<span class="property">width</span> = <span class="string">''</span></span><br><span class="line">    bodyStyle.<span class="property">overflow</span> = <span class="string">''</span></span><br><span class="line">    btf.<span class="title function_">animateOut</span>($searchDialog, <span class="string">'search_close .5s'</span>)</span><br><span class="line">    btf.<span class="title function_">animateOut</span>($searchMask, <span class="string">'to_hide 0.5s'</span>)</span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">removeEventListener</span>(<span class="string">'resize'</span>, fixSafariHeight)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">searchClickFn</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    btf.<span class="title function_">addEventListenerPjax</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">'#search-button &gt; .search'</span>), <span class="string">'click'</span>, openSearch)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">searchFnOnce</span> = (<span class="params"></span>) =&gt; {</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">'#local-search .search-close-button'</span>).<span class="title function_">addEventListener</span>(<span class="string">'click'</span>, closeSearch)</span><br><span class="line">    $searchMask.<span class="title function_">addEventListener</span>(<span class="string">'click'</span>, closeSearch)</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable constant_">GLOBAL_CONFIG</span>.<span class="property">localSearch</span>.<span class="property">preload</span>) {</span><br><span class="line">      localSearch.<span class="title function_">fetchData</span>()</span><br><span class="line">    }</span><br><span class="line">    localSearch.<span class="title function_">highlightSearchWords</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'article-container'</span>))</span><br><span class="line">  }</span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">'search:loaded'</span>, <span class="function">() =&gt;</span> {</span><br><span class="line">    <span class="keyword">const</span> $loadDataItem = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'loading-database'</span>)</span><br><span class="line">    $loadDataItem.<span class="property">nextElementSibling</span>.<span class="property">style</span>.<span class="property">display</span> = <span class="string">'block'</span></span><br><span class="line">    $loadDataItem.<span class="title function_">remove</span>()</span><br><span class="line">  })</span><br><span class="line">  <span class="title function_">searchClickFn</span>()</span><br><span class="line">  <span class="title function_">searchFnOnce</span>()</span><br><span class="line">  <span class="comment">// pjax</span></span><br><span class="line">  <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">'pjax:complete'</span>, <span class="function">() =&gt;</span> {</span><br><span class="line">    !btf.<span class="title function_">isHidden</span>($searchMask) &amp;&amp; <span class="title function_">closeSearch</span>()</span><br><span class="line">    localSearch.<span class="title function_">highlightSearchWords</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">'article-container'</span>))</span><br><span class="line">    <span class="title function_">searchClickFn</span>()</span><br><span class="line">  })</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>
<h3 id="数据与前端">数据与前端</h3>
<h4 id="XML">XML</h4>
<p>来源：<a href="https://raw.githubusercontent.com/f-droid/fdroidclient/master/app/lint.xml">https://raw.githubusercontent.com/f-droid/fdroidclient/master/app/lint.xml</a></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">lint</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- TODO bump our targetSdkVersion when we are ready for it --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"ExpiredTargetSdkVersion"</span> <span class="attr">severity</span>=<span class="string">"ignore"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- TODO This should be handled as part of an overhaul of Bluetooth swap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"MissingPermission"</span> <span class="attr">severity</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/full/java/org/fdroid/fdroid/nearby/BluetoothManager.java"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/full/java/org/fdroid/fdroid/nearby/SwapWorkflowActivity.java"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Our translations are crowd-sourced --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"MissingTranslation"</span> <span class="attr">severity</span>=<span class="string">"ignore"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"ExtraTranslation"</span> <span class="attr">severity</span>=<span class="string">"warning"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- to make CI fail on errors until this is fixed</span></span><br><span class="line"><span class="comment">         https://github.com/rtyley/spongycastle/issues/7 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"InvalidPackage"</span> <span class="attr">severity</span>=<span class="string">"warning"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"ImpliedQuantity"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"DefaultLocale"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"SimpleDateFormat"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"NewApi"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"InlinedApi"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- These are important to us, so promote from warning to error --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"UnusedResources"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/drawable/category_**.png"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values/dimens.xml"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values/styles.xml"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/full/res/values/styles.xml"</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- keep a single strings.xml for all build flavors --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values**/strings.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"AppCompatMethod"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"NestedScrolling"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"Typos"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"StringFormatCount"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"UnsafeProtectedBroadcastReceiver"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"GetInstance"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"PackageManagerGetSignatures"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"HardwareIds"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"TrustAllX509TrustManager"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- these come from included libraries --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"org/apache/commons/net/ftp/FTPSTrustManager.class"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"org/bouncycastle/est/jcajce/JcaJceUtils$1.class"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"org/bouncycastle/est/jcajce/JcaJceUtils$2.class"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"org/apache/commons/net/util/TrustManagerUtils$TrustManager.class"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"\*/bcpkix-jdk15to18-1.71.jar"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"\*/commons-net-3.6.jar"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"PluralsCandidate"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"HardcodedText"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"RtlCompat"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"RtlEnabled"</span> <span class="attr">severity</span>=<span class="string">"error"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- both the correct and deprecated locales need to be present for</span></span><br><span class="line"><span class="comment">         them to be recognized on all devices --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"LocaleFolder"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values-he"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values-id"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Weblate doesn't handle these yet: https://github.com/WeblateOrg/weblate/issues/7520 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"MissingQuantity"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values-cs"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values-fr"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values-lt"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/res/values-sk"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"SetWorldReadable"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/java/org/fdroid/fdroid/installer/ApkFileProvider.java"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"ProtectedPermissions"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/debug/AndroidManifest.xml"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/full/AndroidManifest.xml"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- these should be fixed, but it'll be a chunk of work --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">issue</span> <span class="attr">id</span>=<span class="string">"SetTextI18n"</span> <span class="attr">severity</span>=<span class="string">"error"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/java/org/fdroid/fdroid/views/AppDetailsRecyclerViewAdapter.java"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ignore</span> <span class="attr">path</span>=<span class="string">"src/main/java/org/fdroid/fdroid/views/apps/AppListItemController.java"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">issue</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">lint</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="Stylus">Stylus</h4>
<p>来源：<a href="https://raw.githubusercontent.com/jerryc127/hexo-theme-butterfly/master/source/css/_layout/post.styl">https://raw.githubusercontent.com/jerryc127/hexo-theme-butterfly/master/source/css/_layout/post.styl</a></p>
<figure class="highlight stylus"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">beautify</span><span class="params">()</span></span></span><br><span class="line">  <span class="built_in">headStyle</span>(fontsize)</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="built_in">unit</span>(fontsize + <span class="number">8</span>, <span class="string">'px'</span>)</span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="built_in">unit</span>(fontsize - <span class="number">2</span>, <span class="string">'px'</span>)</span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">padding-left</span>: <span class="built_in">unit</span>(fontsize + <span class="number">12</span>, <span class="string">'px'</span>)</span><br><span class="line">  <span class="selector-tag">h1</span>,</span><br><span class="line">  <span class="selector-tag">h2</span>,</span><br><span class="line">  <span class="selector-tag">h3</span>,</span><br><span class="line">  <span class="selector-tag">h4</span>,</span><br><span class="line">  <span class="selector-tag">h5</span>,</span><br><span class="line">  <span class="selector-tag">h6</span></span><br><span class="line">    <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-out</span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      <span class="attribute">top</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">7px</span>)</span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$title</span>-prefix-icon-color</span><br><span class="line">      <span class="attribute">content</span>: <span class="variable">$title</span>-prefix-icon</span><br><span class="line">      <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">      <span class="attribute">line-height</span>: <span class="number">1</span></span><br><span class="line">      <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-out</span><br><span class="line">      <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">  <span class="selector-tag">h1</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">20</span>)</span><br><span class="line">  <span class="selector-tag">h2</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">18</span>)</span><br><span class="line">  <span class="selector-tag">h3</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">16</span>)</span><br><span class="line">  <span class="selector-tag">h4</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">14</span>)</span><br><span class="line">  <span class="selector-tag">h5</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">12</span>)</span><br><span class="line">  <span class="selector-tag">h6</span></span><br><span class="line">    <span class="built_in">headStyle</span>(<span class="number">12</span>)</span><br><span class="line">  <span class="selector-tag">ol</span>,</span><br><span class="line">  <span class="selector-tag">ul</span></span><br><span class="line">    <span class="selector-tag">p</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span></span><br><span class="line">  <span class="selector-tag">li</span></span><br><span class="line">    <span class="selector-pseudo">&amp;::marker</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">      <span class="attribute">font-weight</span>: <span class="number">600</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.05em</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::marker</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">var</span>(--pseudo-hover)</span><br><span class="line">  <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span></span><br><span class="line">    <span class="attribute">list-style-type</span>: circle</span><br><span class="line">  </span><br><span class="line">  hr</span><br><span class="line">    <span class="keyword">@extend</span> <span class="selector-class">.custom-hr</span></span><br><span class="line"><span class="selector-id">#article-container</span></span><br><span class="line">  <span class="attribute">word-wrap</span>: break-word</span><br><span class="line">  <span class="attribute">overflow-wrap</span>: break-word</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">'text_align_justify'</span>)</span><br><span class="line">    <span class="attribute">text-align</span>: justify</span><br><span class="line">  <span class="selector-tag">a</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$theme</span>-link-color</span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">text-decoration</span>: underline</span><br><span class="line">  <span class="selector-tag">img</span></span><br><span class="line">    <span class="attribute">display</span>: block</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto <span class="number">20px</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">100%</span></span><br><span class="line">    <span class="attribute">transition</span>: filter <span class="number">375ms</span> ease-in .<span class="number">2s</span></span><br><span class="line">  <span class="selector-tag">p</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">16px</span></span><br><span class="line">  <span class="selector-tag">iframe</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span></span><br><span class="line">  <span class="selector-tag">kbd</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">3px</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#b4b4b4</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f8f8f8</span></span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">25</span>), <span class="number">0</span> <span class="number">2px</span> <span class="number">1px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">6</span>) inset</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#34495e</span></span><br><span class="line">    <span class="attribute">white-space</span>: nowrap</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span></span><br><span class="line">    <span class="attribute">font-size</span>: .<span class="number">9em</span></span><br><span class="line">    <span class="attribute">font-family</span>: Monaco, <span class="string">'Ubuntu Mono'</span>, monospace</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1em</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">'anchor.click_to_scroll'</span>)</span><br><span class="line">    <span class="selector-tag">h1</span>,</span><br><span class="line">    <span class="selector-tag">h2</span>,</span><br><span class="line">    <span class="selector-tag">h3</span>,</span><br><span class="line">    <span class="selector-tag">h4</span>,</span><br><span class="line">    <span class="selector-tag">h5</span>,</span><br><span class="line">    <span class="selector-tag">h6</span></span><br><span class="line">      <span class="attribute">width</span>: fit-content</span><br><span class="line">      <span class="selector-tag">a</span><span class="selector-pseudo">:not</span>(.headerlink)</span><br><span class="line">        <span class="attribute">position</span> relative</span><br><span class="line">        <span class="attribute">z-index</span> <span class="number">10</span></span><br><span class="line">      <span class="selector-tag">a</span><span class="selector-class">.headerlink</span></span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">right</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">left</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">bottom</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">100%</span></span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">  <span class="selector-tag">ol</span>,</span><br><span class="line">  <span class="selector-tag">ul</span></span><br><span class="line">    <span class="selector-tag">ol</span>,</span><br><span class="line">    <span class="selector-tag">ul</span></span><br><span class="line">      <span class="attribute">padding-left</span>: <span class="number">20px</span></span><br><span class="line">    <span class="selector-tag">li</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">4px</span> <span class="number">0</span></span><br><span class="line">    <span class="selector-tag">p</span></span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span></span><br><span class="line">  &gt; <span class="selector-pseudo">:last-child</span></span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0</span> <span class="meta">!important</span></span><br><span class="line">  hr</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">0</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">'beautify.enable'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">'beautify.field'</span>) == <span class="string">'site'</span></span><br><span class="line">      <span class="built_in">beautify</span>()</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">'beautify.field'</span>) == <span class="string">'post'</span></span><br><span class="line">      &amp;<span class="selector-class">.post-content</span></span><br><span class="line">        <span class="built_in">beautify</span>()</span><br><span class="line"><span class="selector-id">#post</span></span><br><span class="line">  <span class="selector-class">.tag_share</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:after</span></span><br><span class="line">      <span class="attribute">display</span>: block</span><br><span class="line">      <span class="attribute">clear</span>: both</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">''</span></span><br><span class="line">    <span class="selector-class">.post-meta</span></span><br><span class="line">      &amp;__tag-list</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">      &amp;__tags</span><br><span class="line">        <span class="attribute">display</span>: inline-block</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">8px</span> <span class="number">8px</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">12px</span></span><br><span class="line">        <span class="attribute">width</span>: fit-content</span><br><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">12px</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">font-size</span>: .<span class="number">85em</span></span><br><span class="line">        <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out</span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">background</span>: <span class="variable">$light</span>-blue</span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--white)</span><br><span class="line">    <span class="selector-class">.post_share</span></span><br><span class="line">      <span class="attribute">display</span>: inline-block</span><br><span class="line">      <span class="attribute">float</span>: right</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line">      <span class="attribute">width</span>: fit-content</span><br><span class="line">      <span class="selector-class">.social-share</span></span><br><span class="line">        <span class="attribute">font-size</span>: .<span class="number">85em</span></span><br><span class="line">        <span class="selector-class">.social-share-icon</span></span><br><span class="line">          <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">4px</span></span><br><span class="line">          <span class="attribute">width</span>: w = <span class="number">1.85em</span></span><br><span class="line">          <span class="attribute">height</span>: w</span><br><span class="line">          <span class="attribute">font-size</span>: <span class="number">1.2em</span></span><br><span class="line">          <span class="attribute">line-height</span>: w</span><br><span class="line">  <span class="selector-class">.post-copyright</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0</span> <span class="number">10px</span></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">16px</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">var</span>(--light-grey)</span><br><span class="line">    <span class="attribute">transition</span>: box-shadow .<span class="number">3s</span> ease-in-out</span><br><span class="line">    <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">      <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line">      <span class="attribute">position</span>: absolute</span><br><span class="line">      <span class="attribute">top</span>: <span class="number">2px</span></span><br><span class="line">      <span class="attribute">right</span>: <span class="number">12px</span></span><br><span class="line">      <span class="attribute">color</span>: <span class="variable">$theme</span>-color</span><br><span class="line">      <span class="attribute">content</span>: <span class="string">'\f1f9'</span></span><br><span class="line">      <span class="attribute">font-size</span>: <span class="number">1.3em</span></span><br><span class="line">    <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">237</span>, <span class="number">250</span>, .<span class="number">6</span>), <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">232</span>, <span class="number">237</span>, <span class="number">250</span>, .<span class="number">5</span>)</span><br><span class="line">    <span class="selector-class">.post-copyright</span></span><br><span class="line">      &amp;-meta</span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$light</span>-blue</span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line">        <span class="selector-tag">i</span></span><br><span class="line">          <span class="attribute">margin-right</span>: <span class="number">3px</span></span><br><span class="line">      &amp;-info</span><br><span class="line">        <span class="attribute">padding-left</span>: <span class="number">6px</span></span><br><span class="line">        <span class="selector-tag">a</span></span><br><span class="line">          <span class="attribute">text-decoration</span>: underline</span><br><span class="line">          <span class="attribute">word-break</span>: break-word</span><br><span class="line">          <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">            <span class="attribute">text-decoration</span>: none</span><br><span class="line">  <span class="selector-class">.post-outdate-notice</span></span><br><span class="line">    <span class="attribute">position</span>: relative</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">20px</span></span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1.2em</span></span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">$noticeOutdate</span>-bg</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-color</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">hexo-config</span>(<span class="string">'noticeOutdate.style'</span>) == <span class="string">'flat'</span></span><br><span class="line">      <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1em</span> .<span class="number">5em</span> <span class="number">2.6em</span></span><br><span class="line">      <span class="attribute">border-left</span>: <span class="number">5px</span> solid <span class="variable">$noticeOutdate</span>-border</span><br><span class="line">      <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span></span><br><span class="line">        <span class="attribute">left</span>: .<span class="number">9em</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="variable">$noticeOutdate</span>-border</span><br><span class="line">        <span class="attribute">content</span>: <span class="string">'\f071'</span></span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">50%</span>)</span><br><span class="line">  <span class="selector-class">.ads-wrap</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">40px</span> <span class="number">0</span></span><br></pre></td></tr></tbody></table></figure>
<h4 id="HTML">HTML</h4>
<p>来源：<a href="https://raw.githubusercontent.com/h5bp/html5-boilerplate/main/src/index.html">https://raw.githubusercontent.com/h5bp/html5-boilerplate/main/src/index.html</a></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">class</span>=<span class="string">"no-js"</span> <span class="attr">lang</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:title"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:type"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:url"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:image"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">property</span>=<span class="string">"og:image:alt"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"/favicon.ico"</span> <span class="attr">sizes</span>=<span class="string">"any"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"/icon.svg"</span> <span class="attr">type</span>=<span class="string">"image/svg+xml"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon"</span> <span class="attr">href</span>=<span class="string">"icon.png"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"manifest"</span> <span class="attr">href</span>=<span class="string">"site.webmanifest"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"theme-color"</span> <span class="attr">content</span>=<span class="string">"#fafafa"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Add your site or application content here --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello world! This is HTML5 Boilerplate.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/app.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>
<h1 id="数学">数学</h1>
<h2 id="单行公式">单行公式</h2>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><mi>G</mi><mo>=</mo><msub><mi>m</mi><mtext mathvariant="sans-serif"> 物</mtext></msub><mi> g</mi><mo>=</mo><mn>1</mn><mi>k</mi><mi>g</mi><mo separator="true">⋅</mo><mn>9.8</mn><mi>N</mi><mi mathvariant="normal">/</mi><mi>k</mi><mi>g</mi><mo>=</mo><mn>9.8</mn><mi>N</mi></mrow><annotation encoding="application/x-tex">F=G=m_\textsf {物} g=1kg・9.8N/kg=9.8N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord text mtight"><span class="mord textsf cjk_fallback mtight"> 物</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">9.8</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">9.8</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p>
<h2 id="数学文字混杂">数学文字混杂</h2>
<p>让我们尝试证明一个稍微复杂一些的等式：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\sum_{k=0}^{n} \binom{n}{k} = 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></p>
<p>我们可以使用二项式定理证明这个等式。二项式定理表述为：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mi>b</mi><msup><mo stretchy="false">)</mo><mi>n</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><msup><mi>a</mi><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup><msup><mi>b</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">(a + b)^n = \sum_{k=0}^{n} \binom{n}{k} a^{n-k} b^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></p>
<p>现在，令 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">b = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，然后代入：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>n</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><msup><mn>1</mn><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup><msup><mn>1</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">(1 + 1)^n = \sum_{k=0}^{n} \binom{n}{k} 1^{n-k} 1^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">2^n = \sum_{k=0}^{n} \binom{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></p>
<p>这证明了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\sum_{k=0}^{n} \binom{n}{k} = 2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7454em;"><span style="top:-2.355em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6644em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>。</p>
<h1 id="渲染器拓展语法测试">渲染器拓展语法测试</h1>
<p>这是 <abbr title="注释内容">被注释文本</abbr></p>
<p>上标<sup>示例</sup></p>
<p>下标<sub>示例</sub></p>
<p>脚注示例 <sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<h1 id="Butterfly-拓展语法测试">Butterfly 拓展语法测试 <sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></h1>
<h2 id="Note">Note</h2>
<h3 id="simple">simple</h3>
<div class="note simple"><p>默认 提示块标签</p>
</div>
<div class="note default simple"><p>default 提示块标签</p>
</div>
<div class="note primary simple"><p>primary 提示块标签</p>
</div>
<div class="note success simple"><p>success 提示块标签</p>
</div>
<div class="note info simple"><p>info 提示块标签</p>
</div>
<div class="note warning simple"><p>warning 提示块标签</p>
</div>
<div class="note danger simple"><p>danger 提示块标签</p>
</div>
<h3 id="modern">modern</h3>
<div class="note modern"><p>默认 提示块标签</p>
</div>
<div class="note default modern"><p>default 提示块标签</p>
</div>
<div class="note primary modern"><p>primary 提示块标签</p>
</div>
<div class="note success modern"><p>success 提示块标签</p>
</div>
<div class="note info modern"><p>info 提示块标签</p>
</div>
<div class="note warning modern"><p>warning 提示块标签</p>
</div>
<div class="note danger modern"><p>danger 提示块标签</p>
</div>
<h3 id="flat">flat</h3>
<div class="note flat"><p>默认 提示块标签</p>
</div>
<div class="note default flat"><p>default 提示块标签</p>
</div>
<div class="note primary flat"><p>primary 提示块标签</p>
</div>
<div class="note success flat"><p>success 提示块标签</p>
</div>
<div class="note info flat"><p>info 提示块标签</p>
</div>
<div class="note warning flat"><p>warning 提示块标签</p>
</div>
<div class="note danger flat"><p>danger 提示块标签</p>
</div>
<h3 id="disable">disable</h3>
<div class="note disabled"><p>默认 提示块标签</p>
</div>
<div class="note default disabled"><p>default 提示块标签</p>
</div>
<div class="note primary disabled"><p>primary 提示块标签</p>
</div>
<div class="note success disabled"><p>success 提示块标签</p>
</div>
<div class="note info disabled"><p>info 提示块标签</p>
</div>
<div class="note warning disabled"><p>warning 提示块标签</p>
</div>
<div class="note danger disabled"><p>danger 提示块标签</p>
</div>
<h2 id="Gallery-相册图库">Gallery 相册图库 <sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></h2>
<div class="gallery-group-main">
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src="https://s2.hdslb.com/bfs/article/f152f0964fe951b4e1fc84ef2f2460156d602454.png@1e_1c.webp" alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">Kiki</div>
  <p>Krita 吉祥物</p>
  <a href="https://krita.org/zh/about-zh/kiki-zh/"></a>
  </figcaption>
  </figure>
  
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src="https://s2.hdslb.com/bfs/article/b1eb70eabc81cef3c5821cda30de7a817e1dfbcc.png@1e_1c.webp" alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">Konqi</div>
  <p>KDE 吉祥物</p>
  <a href="https://community.kde.org/Konqi"></a>
  </figcaption>
  </figure>
  
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src="https://s2.hdslb.com/bfs/article/c33c0861fa58b53ab3b8f7361bb814aad2f08b3b.jpg@1e_1c.webp" alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">Sachi</div>
  <p>Squishy 吉祥物</p>
  <a href="https://docs.scsi.moe/mascot.html"></a>
  </figcaption>
  </figure>
  
<figure class="gallery-group">
  <img class="gallery-group-img no-lightbox" src="https://s2.hdslb.com/bfs/album/3476724342a603a7c9b0a332d79c09e1be963df9.png@1000h.webp" alt="Group Image Gallery">
  <figcaption>
  <div class="gallery-group-name">An-An</div>
  <p>AOSC 吉祥物</p>
  <a href="https://aosc.io/"></a>
  </figcaption>
  </figure>
  
</div>
<h2 id="Gallery-相册">Gallery 相册 <sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup></h2>
<div class="gallery-container" data-type="data" data-button="">
      <div class="gallery-data">[{"url":"https://s2.hdslb.com/bfs/article/f7d418ca42cd207dc63d612cab02ea7526509b14.jpg@1e_1c.webp","alt":""},{"url":"https://s2.hdslb.com/bfs/article/44635100ad10a7b0924258c318a523cda3d620a9.jpg@1e_1c.webp","alt":""},{"url":"https://s2.hdslb.com/bfs/article/13545f598e000bcca782fdbe41c37df094d1c49a.jpg@1e_1c.webp","alt":""},{"url":"https://s2.hdslb.com/bfs/article/f187d68789be25f3d72024956c80b8a27eaafa8c.jpg@1e_1c.webp","alt":""},{"url":"https://s2.hdslb.com/bfs/article/a3f91dba6f7a5180a212de06bf2789027e1fb796.png@1e_1c.webp","alt":""},{"url":"https://s2.hdslb.com/bfs/article/10c656350a14eb8aa3fd1a861265dca77e3e2003.png@1e_1c.webp","alt":""}]</div>
      <div class="gallery-items">
      </div>
    </div>
<h2 id="Tag-Hide">Tag Hide</h2>
<p>哪个英文字母最酷？ <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案
  </button><span class="hide-content">因为西装裤 (C 装酷)</span></span></p>
<h2 id="Mermaid">Mermaid</h2>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  flowchart LR
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
  </pre></div>
<h3 id="流程图">流程图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  flowchart LR
A[Hard] --&gt;|Text| B(Round)
B --&gt; C{Decision}
C --&gt;|One| D[Result 1]
C --&gt;|Two| E[Result 2]
  </pre></div>
<h3 id="时序图">时序图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  sequenceDiagram
Alice-&gt;&gt;John: Hello John, how are you?
loop HealthCheck
    John-&gt;&gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&gt;&gt;Alice: Great!
John-&gt;&gt;Bob: How about you?
Bob--&gt;&gt;John: Jolly good!
  </pre></div>
<h3 id="甘特图">甘特图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  gantt
    section Section
    Completed :done,    des1, 2014-01-06,2014-01-08
    Active        :active,  des2, 2014-01-07, 3d
    Parallel 1   :         des3, after des1, 1d
    Parallel 2   :         des4, after des1, 1d
    Parallel 3   :         des5, after des3, 1d
    Parallel 4   :         des6, after des4, 1d
  </pre></div>
<h3 id="类图">类图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  classDiagram
Class01 &lt;|-- AveryLongClass : Cool
&lt;&lt;Interface&gt;&gt; Class01
Class09 --&gt; C2 : Where am I?
Class09 --* C3
Class09 --|&gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &lt;&lt;service&gt;&gt;
  int id
  size()
}
  </pre></div>
<h3 id="状态图">状态图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  stateDiagram-v2
[*] --&gt; Still
Still --&gt; [*]
Still --&gt; Moving
Moving --&gt; Still
Moving --&gt; Crash
Crash --&gt; [*]
  </pre></div>
<h3 id="饼图">饼图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  pie
"Dogs" : 386
"Cats" : 85
"Rats" : 15
  </pre></div>
<h3 id="用户体验旅程图">用户体验旅程图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  journey
  title My working day
  section Go to work
    Make tea: 5: Me
    Go upstairs: 3: Me
    Do work: 1: Me, Cat
  section Go home
    Go downstairs: 5: Me
    Sit down: 3: Me
  </pre></div>
<h3 id="C4-图">C4 图</h3>
<div class="mermaid-wrap"><pre class="mermaid-src" hidden="">  C4Context
title System Context diagram for Internet Banking System

Person(customerA, "Banking Customer A", "A customer of the bank, with personal bank accounts.")
Person(customerB, "Banking Customer B")
Person_Ext(customerC, "Banking Customer C")
System(SystemAA, "Internet Banking System", "Allows customers to view information about their bank accounts, and make payments.")

Person(customerD, "Banking Customer D", "A customer of the bank, &lt;br/&gt; with personal bank accounts.")

Enterprise_Boundary(b1, "BankBoundary") {

  SystemDb_Ext(SystemE, "Mainframe Banking System", "Stores all of the core banking information about customers, accounts, transactions, etc.")

  System_Boundary(b2, "BankBoundary2") {
    System(SystemA, "Banking System A")
    System(SystemB, "Banking System B", "A system of the bank, with personal bank accounts.")
  }

  System_Ext(SystemC, "E-mail system", "The internal Microsoft Exchange e-mail system.")
  SystemDb(SystemD, "Banking System D Database", "A system of the bank, with personal bank accounts.")

  Boundary(b3, "BankBoundary3", "boundary") {
    SystemQueue(SystemF, "Banking System F Queue", "A system of the bank, with personal bank accounts.")
    SystemQueue_Ext(SystemG, "Banking System G Queue", "A system of the bank, with personal bank accounts.")
  }
}

BiRel(customerA, SystemAA, "Uses")
BiRel(SystemAA, SystemE, "Uses")
Rel(SystemAA, SystemC, "Sends e-mails", "SMTP")
Rel(SystemC, customerA, "Sends e-mails to")
  </pre></div>
<h2 id="Tabs">Tabs</h2>
<div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">test1 1</button><button type="button" class="tab " data-href="test1-2">test1 2</button><button type="button" class="tab " data-href="test1-3">test1 3</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>
<h2 id="Button">Button</h2>
<a class="btn-beautify larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify blue larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify pink larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify red larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify purple larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify orange larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<a class="btn-beautify green larger" href="https://butterfly.js.org/" title="Butterfly"><i class="far fa-hand-point-right"></i><span>Butterfly</span></a>
<h2 id="label">label</h2>
<p>臣亮言：<mark class="hl-label default">先帝</mark> 创业未半，而<mark class="hl-label blue">中道崩殂</mark> 。今天下三分，<mark class="hl-label pink">益州疲敝</mark> ，此诚<mark class="hl-label red">危急存亡之秋</mark> 也！然侍衞之臣，不懈于内；<mark class="hl-label purple">忠志之士</mark> ，忘身于外者，盖追先帝之殊遇，欲报之于陛下也。诚宜开张圣听，以光先帝遗德，恢弘志士之气；不宜妄自菲薄，引喻失义，以塞忠谏之路也。</p>
<p>宫中、府中，俱为一体；陟罚臧否，不宜异同。若有<mark class="hl-label orange">作奸</mark> 、<mark class="hl-label green">犯科</mark> ，及为忠善者，宜付有司，论其刑赏，以昭陛下平明之治；不宜偏私，使内外异法也。</p>
<h2 id="Timeline">Timeline</h2>
<div class="timeline undefined"><div class="timeline-item headline"><div class="timeline-item-title"><div class="item-circle"><p>2022</p>
</div></div></div><div class="timeline-item"><div class="timeline-item-title"><div class="item-circle"><p>01-02</p>
</div></div><div class="timeline-item-content"><p>这是测试页面</p>
</div></div></div>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>脚注是指附在文章页面的最底端的，对某些东西加以说明的注文。 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn2" class="footnote-item"><p>代码来自 <a href="https://butterfly.js.org/posts/4aa8abbe/#Note-Bootstrap-Callout">Butterfly 安裝文檔 (三) 主題配置 - 1 | Butterfly</a>，采用 CC-BY-NC-SA 协议授权 <a href="#fnref2" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn3" class="footnote-item"><p>画作由 TysonTan 绘制，采用 CC-BY-SA 协议授权 <a href="#fnref3" class="footnote-backref">↩︎</a></p>
</li>
<li id="fn4" class="footnote-item"><p>图片来自 <a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly ReadMe</a>，采用 CC-BY-NC-SA 协议授权 <a href="#fnref4" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>科学与技术</category>
        <category>计算机</category>
        <category>网站搭建</category>
      </categories>
      <tags>
        <tag>网站搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>类原生优化计划之二 - 流畅、保活与省电</title>
    <url>/article/4097fa9/</url>
    <content><![CDATA[<div class="note warning flat"><p>初版文章有错误且已过期，请不要参考</p>
</div>
<div class="note info flat"><p>限于具体情况不同，不能保证方案的通用性，请依据具体情况合理调整！</p>
</div>
<div class="note warning flat"><p>需要 Root</p>
</div>
<p>作为一个信息学爱好者，怎么能不搞刷机呢？作为旧机型用户，我已经遭受绿厂迫害数年了。一气之下，我便把手机刷成了类原生（DotOS 5.2 Vanilla）。在使用了数月后，有了些许经验，分享一下。</p>
<h1 id="机型概况">机型概况</h1>
<p>机子是 2017 年发布的 OPPO R11，CPU 是骁龙 600aie，运存 4GB，闪存 64GB（实际可用 58GB）。电池是原装的 3000mAh 的（现在只有 2200mAh 了 TAT）</p>
<h1 id="系统概况">系统概况</h1>
<p>系统用的 R11_11_ROM_dotOS5.2_Vanilla_20230925_b3642af1.zip，Android 版本 11，内核 4.4.153-perf+，内部版本 RD2A.211001.002，基带 Q_V1_P14。带有 Kitsune Mask Canary，LSPosed CI。</p>
<h1 id="易用性">易用性</h1>
<p>咱是国内用户，自然用不惯，需要进行一定设置.</p>
<h2 id="全面屏手势">全面屏手势</h2>
<p>对于某些人来说，全面屏手势是日常不可或缺的功能，但……DotOS 没有！对此，只能用三方软件 Gesture 解决。</p>
<p>注：对于其性能差的现象，请到软件设置里授予 Root 并关闭前台监听即可</p>
<h2 id="其它">其它</h2>
<p>对于机友来说，免核心降级啊，模块之类在此不多赘言，适合自己的，才是最好的！</p>
<h1 id="流畅度">流畅度</h1>
<h2 id="内存方向">内存方向</h2>
<p>对于 Android 11+Magisk+LSPosed+Shizuku + 小而美 + QQ+etc. 来说，sdm660+4GB 已显捉襟见肘。对于小而美，QQ，B 站，抖音等软件，其本身优化就极差，再加一堆 XpHook，性能便更差了：不仅狂杀后台，而且时常会 OOM。怎么办呢？对于内存过小的问题，办法有：</p>
<h3 id="交换空间">交换空间</h3>
<div class="note red icon-padding flat"><i class="note-icon fas fa-triangle-exclamation"></i><p>交换空间<strong>可能</strong>会带来一定负面影响，包括增多耗电、发热、消耗闪存寿命等。但总体而言，手动调节交换空间可以提高流畅度、保留后台，利远大于弊</p>
</div>
<p>为了从源头上解决内存捉襟见肘的问题，我们可以使用交换空间。这里我使用使用 Scene 调节。</p>
<h4 id="ZRAM">ZRAM</h4>
<p>ZRAM 是在内存中划出一块来并对其进行压缩，详情可见 <a href="https://wiki.archlinuxcn.org/wiki/Zram">ArchWikiCN</a>。正因如此，ZRAM 设置不当会给 CPU 带来显著的压力，进而拉大耗电量、减少续航。</p>
<p>如果您只打算开 ZRAM，那么建议在 2GB 到 2.75GB（2048MB 到 2816MB）之间。过小作用不大，过大拉多耗电量。</p>
<h4 id="Swap">Swap</h4>
<div class="note red icon-padding flat"><i class="note-icon fas fa-ban"></i><p>不可以只启用 Swap，这会严重拉慢磁盘 IO 与严重磨损磁盘！</p>
</div>
<h4 id="ZRAM-Swap">ZRAM+Swap</h4>
<div class="note info flat"><p>推荐的方案</p>
</div>
<p>ZRAM 建议在 1.5GB 到 2.5GB（1536MB 到 2560MB）之间，Swap 建议在 0.5GB 到 1.5GB（1024MB 到 1536MB）之间，并且当 Scene 提示交换策略时，选择优先使用 ZRAM。这样可以让新鲜的数据在较快的 ZRAM 里交换，而当 ZRAM 被榨干时则把脏数据写到 Swap 以备过后使用。</p>
<p><img src="https://s2.hdslb.com/bfs/article/20f11065f4af3fd39fe1100c57e465231352440272.png@1000h.webp" alt="效果图"></p>
<h4 id="VM-Parameters">VM Parameters</h4>
<p>将 swapiness 和 extra_free_kbytes 拉得较大。这样可以保证留有充足的 RAM 以防止 OOM。</p>
<h3 id="特殊版本">特殊版本</h3>
<h4 id="微信">微信</h4>
<p>微信版本复杂，建议参考<a href="https://gitee.com/ww3w/dzb/blob/master/1.md#-%E5%BE%AE%E4%BF%A1">百分之千 / 定制版应用收藏 / 版本拐点</a>选择，并从<a href="https://www.coolapk.com/feed/51351476">酷安老哥微笑渲染悲伤的帖子</a>里下载。</p>
<p>比较推荐的是 7.0.21、Play8.0.15、Play8.0.33、8.0.42（话说这几个好像也不咋地，所以：zxl,****！）</p>
<h4 id="QQ">QQ</h4>
<p>建议用 9.0.8，可以从 <a href="https://t.me/QQUpdates">QQUpdates</a>、<a href="https://t.me/qq_updatelog">QQ/TIM Update Log</a> 获得。9.0.15 和 9.0.17 有多人报道冷启动、小程序、扫码变慢。</p>
<h4 id="Others">Others</h4>
<p>请参考以下几个视频：</p>
<p><a href="https://www.bilibili.com/video/BV16P411P7QT/">安卓软件保姆级优化，让你的手机再战三年！</a></p>
<p><a href="https://www.bilibili.com/video/BV1r94y1T7Xa/">让老旗舰机重回新生？请收好这份养老软件指南！</a></p>
<h3 id="三方客户端">三方客户端</h3>
<p>对于某些热门软件，可能会有大佬用爱发电。传送门有：</p>
<ul>
<li><a href="https://github.com/lucinhu/bili_you">BiliYou</a>（哔哩哔哩）</li>
<li><a href="https://github.com/guozhigq/pilipala">Pilipala</a>（哔哩哔哩）</li>
<li><a href="https://github.com/huajiqaq/Hydrogen">Hydrogen</a>（知乎）</li>
<li><a href="https://github.com/NextAlone/Nagram/">Nagram</a>（Telegram）</li>
<li><a href="https://github.com/CeuiLiSA/Pixiv-Shaft">Shaft</a>（Pixiv）</li>
</ul>
<p>这些三方客户端有更为优秀的外观，更为可观的速度，以及某些诱人的功能。</p>
<h3 id="手动养老">手动养老</h3>
<p>对 QQ 微信等压力大的软件启动 Scene 监视器，随时监测硬件状况以逼迫自己养老，防止 OOM。</p>
<h2 id="CPU-方向">CPU 方向</h2>
<h3 id="通用">通用</h3>
<p>推介以下两件套：<a href="http://vtools.omarea.com/">Scene</a> 、<a href="https://moka.latestfile.zip/">Moka</a>。</p>
<p>Scene 可以调整 CPU，Moka 可以删除温控［注意：OPPO R11 一路下键即可，删不干净很正常，全删掉会有 Bug（比如爆音、打电话自动开免提、录屏时录不了系统内部声音）］</p>
<h3 id="三方调度">三方调度</h3>
<h4 id="Uperf-方案">Uperf 方案</h4>
<p>刷入 <a href="https://github.com/yinwanxi/Uperf-Game-Turbo">Uperf Game Turbo</a>、<a href="https://github.com/nakixii/Magisk_AsoulOpt">AsoulOpt</a></p>
<p>Uperf Game Turbo 可以较好得调节 CPU, 使之在需要省电时省电、需要性能时高效。（注意：我们只需要 Uperf Game Turbo 的配置文件，而不需要其过分地教我们做事。为了避免其引起的一系列问题，请在刷入后将其禁用。）</p>
<p>AsoulOpt 可以调节线程，提高 CPU 效率。</p>
<p><img src="https://s2.hdslb.com/bfs/article/5b176872d9d21a056c214fb990aa0a881352440272.png@1000h.webp" alt=""></p>
<h4 id="CuprumTurbo-Scheduler-方案"><a href="https://github.com/chenzyadb/CuprumTurbo-Scheduler">CuprumTurbo Scheduler</a> 方案</h4>
<p>说这个东西可能令人眼前一黑，但如果说 CuToolBox，相信大多数人都耳熟能详。CuprumTurbo Scheduler 就是 CuToolBox 的模块版。</p>
<p>经过测试后发现其确实有助于提升流畅性；但未经长期测试，加之峰值功率与 Uperf Game Turbo 相比明显偏大，难以得出准确结论。</p>
<p><img src="https://s2.hdslb.com/bfs/article/589abf4ddc5824f1bcc037639c4391171352440272.png@1000h.webp" alt=""></p>
<div class="note red icon-padding flat"><i class="note-icon fas fa-triangle-exclamation"></i><p>安装 Tritium Fiage 前，请先卸载 Uperf 及其相关和衍生模块和 AsoulOpt，并关闭 Scene 的核心分配与高通的 Performance Boost Config</p>
<p><img class="inline-img" src="https://s2.hdslb.com/bfs/article/b78cebe362474026d5abdcd637f6cba61352440272.png@1e_1c.webp" style="height:600px"><img class="inline-img" src="https://s2.hdslb.com/bfs/article/74af917c131fcdb2609cf48c4802f5a31352440272.png@1e_1c.webp" style="height:600px"></p>
</div>
<h4 id="Tritium-Fiage-方案">Tritium Fiage 方案</h4>
<p>Tritium Fiage 是基于 CuprumTurbo Scheduler 的修改版，可以从酷安的<a href="https://www.coolapk.com/u/3922059">鱼龄</a>那里下载。</p>
<p>启用后建议将性能模式设为默认。功耗基本不会变，但流畅度会好很多。</p>
<p><img src="https://s2.hdslb.com/bfs/article/8a224c202551da98cb6b8440784107621352440272.png@1000h.webp" alt="如图，极端场景（此处为连续刷 4K 视频）下功率仍不太高"></p>
<p><img src="https://s2.hdslb.com/bfs/article/e279516c9b215b5c4b438be2eb8416071352440272.png@1000h.webp" alt="功耗"></p>
<div class="note red icon-padding flat"><i class="note-icon fas fa-triangle-exclamation"></i><p>安装 Tritium Fiage 前，请先卸载 Uperf 及其相关和衍生模块和 AsoulOpt，并关闭 Scene 的核心分配与高通的 Performance Boost Config</p>
<p><img class="inline-img" src="https://s2.hdslb.com/bfs/article/b78cebe362474026d5abdcd637f6cba61352440272.png@1e_1c.webp" style="height:600px"><img class="inline-img" src="https://s2.hdslb.com/bfs/article/74af917c131fcdb2609cf48c4802f5a31352440272.png@1e_1c.webp" style="height:600px"></p>
</div>
<div class="note orange icon-padding flat"><i class="note-icon fas fa-triangle-exclamation"></i><p>没必要手动安装 cu_jank_detector.zip，启动不了</p>
</div>
<div class="note red icon-padding flat"><i class="note-icon fas fa-ban"></i><p>不要安装解除系统限制模块。这是与 Moka 重复的去温控模块，并且效果略差</p>
</div>
<h2 id="Dex2oat">Dex2oat</h2>
<p>手动 dex2oat 可以提高冷启动速度并降低 CPU 和 RAM 占用，具体选哪一个模式请自行测试。</p>
<p><img src="https://s2.hdslb.com/bfs/article/67d3336ea1ab8de166b5263c41f0af711352440272.png@700h.webp" alt="编译过程"></p>
<h1 id="后台">后台</h1>
<div class="note green icon-padding flat"><i class="note-icon fas fa-circle-check"></i><p>这里假设您使用 ZRAM（2048MB）+Swap（1536MB）+Tritium Fiage（1.2.1） 方案！</p>
</div>
<div class="note red icon-padding flat"><i class="note-icon fas fa-ban"></i><p>后台优化后并不是可以放飞自我了；相反，留后台会显著加大 OOM 的风险，尤其是在 OPPOR11 等 RAM 吃紧的机型上，请务必适当设置交换空间，并合理使用！</p>
</div>
<h2 id="选择合适的软件版本">选择合适的软件版本</h2>
<p>这里我选择的如下：</p>
<ol>
<li>微信：WeChat play8.9.33（1306），单号</li>
<li> QQ：QQ 9.0.8（5540），双号切换</li>
</ol>
<h2 id="对非必要软件关禁闭">对非必要软件关禁闭</h2>
<p>使用小黑屋、雹等软件，以禁用方式冻结在后台死皮赖脸的软件。</p>
<p>推荐列表：</p>
<ol>
<li>软件商店类</li>
<li>购物、支付、金融（有特殊需求除外）</li>
<li>社区（比如知乎、贴吧等）</li>
</ol>
<h2 id="调节所有软件后台活动">调节所有软件后台活动</h2>
<div class="note orange icon-padding flat"><i class="note-icon fas fa-triangle-exclamation"></i><p>请集中注意力！</p>
</div>
<ol>
<li>在 Thanox 的后台启动和后台运行中对<strong>用户应用</strong>设置<strong>全不</strong>，在任务清理和乖巧模式中设置<strong>全部</strong>，随后排除 Shizuku、输入法、三方 Widget 等常驻后台的软件。</li>
<li>切换过滤规则为系统，对软件商店等毒瘤适当设置。（我用类原生，没有经验，提供不了相关建议）</li>
<li>添加模板，仅打开任务清理和乖巧模式（仅点亮这两个开关，其他均灭掉），并启用自动配置</li>
</ol>
<h3 id="注意">注意</h3>
<ol>
<li>对咕噜咕噜 Play 服务、咕噜咕噜服务框架和咕噜咕噜商店的操作可能会导致其它软件无法调用咕噜咕噜相关服务</li>
<li>对下载器与浏览器打开乖巧模式会导致下载通知冻结</li>
<li>对浏览器打开后台运行而关闭任务清理可能会导致其一直在后台吃内存</li>
</ol>
<h2 id="为必要软件开小灶">为必要软件开小灶</h2>
<h3 id="接消息">接消息</h3>
<p>某些软件（比如微信 QQ 等通讯软件）要接消息，但如果一直挂后台占 RAM 太多，可在应用详情页：</p>
<ol>
<li>打开后台启动（否则开机不自启动）</li>
<li>打开后台运行、后台保护，关闭任务清理（否则频繁被杀死）</li>
<li>乖巧模式（减少后台占用）</li>
</ol>
<h3 id="监听">监听</h3>
<p>某些软件（比如 Robot36、Thanox 后台记录、Scene 动态切换、Shizuku）要能够一直执行下去并试试反应用户操作，还有一些软件（比如天气小组件）要频繁获取信息，可在应用详情页：</p>
<ol>
<li>打开后台启动（否则开机不自启动）</li>
<li>打开后台运行、后台保护，关闭任务清理、乖巧模式（否则频繁被杀死）</li>
</ol>
<h2 id="效果">效果</h2>
<p><img src="https://s2.hdslb.com/bfs/article/5e24560d4bcad132eb0a52fe3375f49d1352440272.png@700h.webp" alt="开机静置五分钟后"></p>
<p><img src="https://s2.hdslb.com/bfs/article/5e24560d4bcad132eb0a52fe3375f49d1352440272.png@700h.webp" alt="一边水Q群，一边在微信和老师聊天"></p>
<p><img src="https://s2.hdslb.com/bfs/article/12ff98d20468deb923a5c073ea5fe0c11352440272.png@700h.webp" alt="使用一个半小时，再静置半小时"></p>
]]></content>
      <categories>
        <category>科学与技术</category>
        <category>计算机</category>
        <category>刷机</category>
      </categories>
      <tags>
        <tag>刷机</tag>
      </tags>
  </entry>
</search>
